name: ESLint Code Quality Checks
on:
  pull_request:
    branches:
      - main
      - dev
      - release/*
jobs:
  eslint_checks:
    name: Run ESLint Linting
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full git history so that git diff works

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint on changed files
        env:
          SARIF_ESLINT_IGNORE_SUPPRESSED: "true"
        run: |
          # Extract the base commit SHA from the pull_request event payload.
          BASE_SHA=$(jq --raw-output .pull_request.base.sha "$GITHUB_EVENT_PATH")
          echo "Base commit SHA: $BASE_SHA"

          # List files changed between the base commit and current HEAD.
          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" HEAD)
          echo "Changed files: $CHANGED_FILES"

          # Filter only JavaScript/TypeScript files (adjust regex as needed).
          ESLINT_FILES=$(echo "$CHANGED_FILES" | grep -E '\.(js|jsx|ts|tsx)$' || true)

          if [ -z "$ESLINT_FILES" ]; then
            echo "No JavaScript/TypeScript files changed. Skipping ESLint."
            # Create an empty SARIF file to satisfy the upload step.
            echo '{"version": "2.1.0", "runs": []}' > eslint-results.sarif
          else
            echo "Running ESLint on files:"
            echo "$ESLINT_FILES"
            npx eslint --config eslint.config.mjs --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif $ESLINT_FILES || true
          fi

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true