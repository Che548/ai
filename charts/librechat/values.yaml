# Default values for librechat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

---
replicaCount: 1

image:
  repository: ghcr.io/danny-avila/librechat
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true,
  # a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

networkPolicies:
  enabled: true

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/certificate-arn:
      arn:aws:acm:us-east-2:223287545160:certificate/165a4b36-fe02-4f36-bfc2-bd31064215da
    alb.ingress.kubernetes.io/group.name: management-internal
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/subnets:
      subnet-08a821bb9ab550178, subnet-0ad2292cddb2d301f,
      subnet-083591421998a1e2f
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /
  hosts:
    - host: bai.getbalance.com
      paths:
        - path: /*
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  envSecrets:
    # Use this when using one k8s secret for multiply env secrets
    # secretRef: librechat

    # Use this when using one k8s secret for each env secret
    secretKeyRef:
      - name: mongodb-root-password
        secretName: bai-mongodb
        secretKey: mongodb-root-password
      - name: CREDS_KEY
        secretName: bai-creds
        secretKey: CREDS_KEY
      - name: CREDS_IV
        secretName: bai-creds
        secretKey: CREDS_IV
      - name: JWT_SECRET
        secretName: bai-creds
        secretKey: JWT_SECRET
      - name: JWT_REFRESH_SECRET
        secretName: bai-creds
        secretKey: JWT_REFRESH_SECRET
      - name: MEILI_MASTER_KEY
        secretName: bai-creds
        secretKey: MEILI_MASTER_KEY

  pod_env:
    - name: MONGO_URI
      value: "mongodb://root:$(mongodb-root-password)@bai-mongodb"

  env:
    # Full list of possible values
    # https://github.com/danny-avila/LibreChat/blob/main/.env.example
    ALLOW_EMAIL_LOGIN: "true"
    ALLOW_REGISTRATION: "true"
    ALLOW_SOCIAL_LOGIN: "false"
    ALLOW_SOCIAL_REGISTRATION: "false"
    APP_TITLE: "Librechat"
    CUSTOM_FOOTER: "Provided with ❤️"
    DEBUG_CONSOLE: "true"
    DEBUG_LOGGING: "true"
    DEBUG_OPENAI: "true"
    DEBUG_PLUGINS: "true"
    DOMAIN_CLIENT: "https://bai.getbalance.com"
    DOMAIN_SERVER: "https://bai.getbalance.com"
    ENDPOINTS: "openAI,azureOpenAI,chatGPTBrowser,google,gptPlugins,anthropic"
    SEARCH: false
    BEDROCK_AWS_DEFAULT_REGION: "us-east-2"
    BEDROCK_AWS_ACCESS_KEY_ID: ""
    BEDROCK_AWS_SECRET_ACCESS_KEY: ""
    BEDROCK_AWS_SESSION_TOKEN: ""
    BEDROCK_AWS_MODELS: "AWS_ARN"
