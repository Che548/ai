{"version":3,"file":"index.js","sources":["../src/schemas.ts","../src/types/files.ts","../src/config.ts","../src/parsers.ts","../src/types/assistants.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/sse.js","../src/createPayload.ts"],"sourcesContent":["import { z } from 'zod';\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  bingAI = 'bingAI',\n  chatGPTBrowser = 'chatGPTBrowser',\n  google = 'google',\n  gptPlugins = 'gptPlugins',\n  anthropic = 'anthropic',\n  assistant = 'assistant',\n  custom = 'custom',\n}\n\nexport const endpointSettings = {\n  [EModelEndpoint.google]: {\n    model: {\n      default: 'chat-bison',\n    },\n    maxOutputTokens: {\n      min: 1,\n      max: 2048,\n      step: 1,\n      default: 1024,\n      maxGeminiPro: 8192,\n      defaultGeminiPro: 8192,\n    },\n    temperature: {\n      min: 0,\n      max: 1,\n      step: 0.01,\n      default: 0.2,\n    },\n    topP: {\n      min: 0,\n      max: 1,\n      step: 0.01,\n      default: 0.8,\n    },\n    topK: {\n      min: 1,\n      max: 40,\n      step: 0.01,\n      default: 40,\n    },\n  },\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string(),\n  icon: z.string(),\n  authConfig: z.array(tPluginAuthConfigSchema),\n  authenticated: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string(),\n  skipCompletion: z.boolean(),\n  model: z.string(),\n  temperature: z.number(),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isEdited: z.boolean().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n});\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  files?: {\n    file_id: string;\n    type?: string;\n    filename?: string;\n    preview?: string;\n    filepath?: string;\n    height?: number;\n    width?: number;\n  }[];\n};\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.optional(),\n  suggestions: z.array(z.string()).optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.array(tPluginSchema).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  systemMessage: z.string().nullable().optional(),\n  modelLabel: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  chatGptLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  context: z.string().nullable().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  jailbreak: z.boolean().optional(),\n  jailbreakConversationId: z.string().nullable().optional(),\n  conversationSignature: z.string().nullable().optional(),\n  parentMessageId: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  invocationId: z.number().nullable().optional(),\n  toneStyle: z.string().nullable().optional(),\n  maxOutputTokens: z.number().optional(),\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /* vision */\n  resendImages: z.boolean().optional(),\n  imageDetail: eImageDetailSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  thread_id: z.string().optional(),\n});\n\nexport type TConversation = z.infer<typeof tConversationSchema>;\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport const tPresetUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\n// type DefaultSchemaValues = Partial<typeof google>;\n\nexport const openAISchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendImages: true,\n    imageDetail: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'gpt-3.5-turbo',\n    chatGptLabel: obj.chatGptLabel ?? null,\n    promptPrefix: obj.promptPrefix ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendImages: obj.resendImages ?? false,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n  }))\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendImages: false,\n    imageDetail: ImageDetail.auto,\n  }));\n\nexport const googleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => {\n    const isGeminiPro = obj?.model?.toLowerCase()?.includes('gemini-pro');\n\n    const maxOutputTokensMax = isGeminiPro\n      ? google.maxOutputTokens.maxGeminiPro\n      : google.maxOutputTokens.max;\n    const maxOutputTokensDefault = isGeminiPro\n      ? google.maxOutputTokens.defaultGeminiPro\n      : google.maxOutputTokens.default;\n\n    let maxOutputTokens = obj.maxOutputTokens ?? maxOutputTokensDefault;\n    maxOutputTokens = Math.min(maxOutputTokens, maxOutputTokensMax);\n\n    return {\n      ...obj,\n      model: obj.model ?? google.model.default,\n      modelLabel: obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n      temperature: obj.temperature ?? google.temperature.default,\n      maxOutputTokens,\n      topP: obj.topP ?? google.topP.default,\n      topK: obj.topK ?? google.topK.default,\n    };\n  })\n  .catch(() => ({\n    model: google.model.default,\n    modelLabel: null,\n    promptPrefix: null,\n    examples: [{ input: { content: '' }, output: { content: '' } }],\n    temperature: google.temperature.default,\n    maxOutputTokens: google.maxOutputTokens.default,\n    topP: google.topP.default,\n    topK: google.topK.default,\n  }));\n\nexport const bingAISchema = tConversationSchema\n  .pick({\n    jailbreak: true,\n    systemMessage: true,\n    context: true,\n    toneStyle: true,\n    jailbreakConversationId: true,\n    conversationSignature: true,\n    clientId: true,\n    invocationId: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: '',\n    jailbreak: obj.jailbreak ?? false,\n    systemMessage: obj.systemMessage ?? null,\n    context: obj.context ?? null,\n    toneStyle: obj.toneStyle ?? 'creative',\n    jailbreakConversationId: obj.jailbreakConversationId ?? null,\n    conversationSignature: obj.conversationSignature ?? null,\n    clientId: obj.clientId ?? null,\n    invocationId: obj.invocationId ?? 1,\n  }))\n  .catch(() => ({\n    model: '',\n    jailbreak: false,\n    systemMessage: null,\n    context: null,\n    toneStyle: 'creative',\n    jailbreakConversationId: null,\n    conversationSignature: null,\n    clientId: null,\n    invocationId: 1,\n  }));\n\nexport const anthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'claude-1',\n    modelLabel: obj.modelLabel ?? null,\n    promptPrefix: obj.promptPrefix ?? null,\n    temperature: obj.temperature ?? 1,\n    maxOutputTokens: obj.maxOutputTokens ?? 4000,\n    topP: obj.topP ?? 0.7,\n    topK: obj.topK ?? 5,\n  }))\n  .catch(() => ({\n    model: 'claude-1',\n    modelLabel: null,\n    promptPrefix: null,\n    temperature: 1,\n    maxOutputTokens: 4000,\n    topP: 0.7,\n    topK: 5,\n  }));\n\nexport const chatGPTBrowserSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'text-davinci-002-render-sha',\n  }))\n  .catch(() => ({\n    model: 'text-davinci-002-render-sha',\n  }));\n\nexport const gptPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'gpt-3.5-turbo',\n    chatGptLabel: obj.chatGptLabel ?? null,\n    promptPrefix: obj.promptPrefix ?? null,\n    temperature: obj.temperature ?? 0.8,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    tools: obj.tools ?? [],\n    agentOptions: obj.agentOptions ?? {\n      agent: 'functions',\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n  }))\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: 'functions',\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n  }));\n\nexport function removeNullishValues<T extends object>(obj: T): T {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    if (newObj[key] === undefined || newObj[key] === null || newObj[key] === '') {\n      delete newObj[key];\n    }\n  });\n\n  return newObj as T;\n}\n\nexport const assistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    thread_id: true,\n  })\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n\nexport const compactOpenAISchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendImages: true,\n    imageDetail: true,\n  })\n  .transform((obj: Partial<TConversation>) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === 'gpt-3.5-turbo') {\n      delete newObj.model;\n    }\n    if (newObj.temperature === 1) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.resendImages !== true) {\n      delete newObj.resendImages;\n    }\n    if (newObj.imageDetail === ImageDetail.auto) {\n      delete newObj.imageDetail;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === google.model.default) {\n      delete newObj.model;\n    }\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactAnthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === 'claude-1') {\n      delete newObj.model;\n    }\n    if (newObj.temperature === 1) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === 4000) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === 0.7) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === 5) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactChatGPTSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    // model: obj.model ?? 'text-davinci-002-render-sha',\n    if (newObj.model === 'text-davinci-002-render-sha') {\n      delete newObj.model;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === 'gpt-3.5-turbo') {\n      delete newObj.model;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === 'functions' &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\n// const createGoogleSchema = (customGoogle: DefaultSchemaValues) => {\n//   const defaults = { ...google, ...customGoogle };\n//   return tConversationSchema\n//     .pick({\n//       model: true,\n//       modelLabel: true,\n//       promptPrefix: true,\n//       examples: true,\n//       temperature: true,\n//       maxOutputTokens: true,\n//       topP: true,\n//       topK: true,\n//     })\n//     .transform((obj) => {\n//       const isGeminiPro = obj?.model?.toLowerCase()?.includes('gemini-pro');\n\n//       const maxOutputTokensMax = isGeminiPro\n//         ? defaults.maxOutputTokens.maxGeminiPro\n//         : defaults.maxOutputTokens.max;\n//       const maxOutputTokensDefault = isGeminiPro\n//         ? defaults.maxOutputTokens.defaultGeminiPro\n//         : defaults.maxOutputTokens.default;\n\n//       let maxOutputTokens = obj.maxOutputTokens ?? maxOutputTokensDefault;\n//       maxOutputTokens = Math.min(maxOutputTokens, maxOutputTokensMax);\n\n//       return {\n//         ...obj,\n//         model: obj.model ?? defaults.model.default,\n//         modelLabel: obj.modelLabel ?? null,\n//         promptPrefix: obj.promptPrefix ?? null,\n//         examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n//         temperature: obj.temperature ?? defaults.temperature.default,\n//         maxOutputTokens,\n//         topP: obj.topP ?? defaults.topP.default,\n//         topK: obj.topK ?? defaults.topK.default,\n//       };\n//     })\n//     .catch(() => ({\n//       model: defaults.model.default,\n//       modelLabel: null,\n//       promptPrefix: null,\n//       examples: [{ input: { content: '' }, output: { content: '' } }],\n//       temperature: defaults.temperature.default,\n//       maxOutputTokens: defaults.maxOutputTokens.default,\n//       topP: defaults.topP.default,\n//       topK: defaults.topK.default,\n//     }));\n// };\n","export enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  openai = 'openai',\n  s3 = 's3',\n}\n\nexport type TFile = {\n  message: string;\n  file_id: string;\n  filepath: string;\n  filename: string;\n  type: string;\n  size: number;\n  temp_file_id?: string;\n  source?: FileSources;\n  height?: number;\n  width?: number;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type FileUploadBody = {\n  formData: FormData;\n  file_id: string;\n};\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FileUploadBody, context?: unknown) => void;\n  onMutate?: (variables: FileUploadBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FileUploadBody, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  source: FileSources;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","import { z } from 'zod';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { FileSources } from './types/files';\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\nexport const endpointSchema = z.object({\n  name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n    message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n      EModelEndpoint,\n    ).join(', ')}`,\n  }),\n  apiKey: z.string(),\n  baseURL: z.string(),\n  models: z.object({\n    default: z.array(z.string()).min(1),\n    fetch: z.boolean().optional(),\n  }),\n  titleConvo: z.boolean().optional(),\n  titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n  titleModel: z.string().optional(),\n  summarize: z.boolean().optional(),\n  summaryModel: z.string().optional(),\n  forcePrompt: z.boolean().optional(),\n  modelDisplayLabel: z.string().optional(),\n  headers: z.record(z.any()).optional(),\n});\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean(),\n  fileStrategy: fileSourceSchema.optional(),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .optional(),\n  endpoints: z\n    .object({\n      custom: z.array(endpointSchema.partial()),\n    })\n    .strict(),\n});\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport enum KnownEndpoints {\n  mistral = 'mistral',\n  openrouter = 'openrouter',\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistant,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.bingAI,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistant]: 'Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.bingAI]: 'Bing',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n};\n\nexport const defaultModels = {\n  [EModelEndpoint.google]: [\n    'gemini-pro',\n    'gemini-pro-vision',\n    'chat-bison',\n    'chat-bison-32k',\n    'codechat-bison',\n    'codechat-bison-32k',\n    'text-bison',\n    'text-bison-32k',\n    'text-unicorn',\n    'code-gecko',\n    'code-bison',\n    'code-bison-32k',\n  ],\n  [EModelEndpoint.anthropic]: [\n    'claude-2.1',\n    'claude-2',\n    'claude-1.2',\n    'claude-1',\n    'claude-1-100k',\n    'claude-instant-1',\n    'claude-instant-1-100k',\n  ],\n  [EModelEndpoint.openAI]: [\n    'gpt-3.5-turbo-0125',\n    'gpt-3.5-turbo-16k-0613',\n    'gpt-3.5-turbo-16k',\n    'gpt-4-turbo-preview',\n    'gpt-4-0125-preview',\n    'gpt-4-1106-preview',\n    'gpt-3.5-turbo',\n    'gpt-3.5-turbo-1106',\n    'gpt-4-vision-preview',\n    'gpt-4',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-0613',\n    'gpt-3.5-turbo-0301',\n    'gpt-3.5-turbo-instruct',\n    'gpt-4-0613',\n    'text-davinci-003',\n    'gpt-4-0314',\n  ],\n};\n\nexport const EndpointURLs: { [key in EModelEndpoint]: string } = {\n  [EModelEndpoint.openAI]: `/api/ask/${EModelEndpoint.openAI}`,\n  [EModelEndpoint.bingAI]: `/api/ask/${EModelEndpoint.bingAI}`,\n  [EModelEndpoint.google]: `/api/ask/${EModelEndpoint.google}`,\n  [EModelEndpoint.custom]: `/api/ask/${EModelEndpoint.custom}`,\n  [EModelEndpoint.anthropic]: `/api/ask/${EModelEndpoint.anthropic}`,\n  [EModelEndpoint.gptPlugins]: `/api/ask/${EModelEndpoint.gptPlugins}`,\n  [EModelEndpoint.azureOpenAI]: `/api/ask/${EModelEndpoint.azureOpenAI}`,\n  [EModelEndpoint.chatGPTBrowser]: `/api/ask/${EModelEndpoint.chatGPTBrowser}`,\n  [EModelEndpoint.assistant]: '/api/assistants/chat',\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n]);\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistant]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.custom]: true,\n};\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.custom]: true,\n};\n\nexport const visionModels = ['gpt-4-vision', 'llava-13b', 'gemini-pro-vision'];\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n}\n","import type { TConversation, TPreset } from './schemas';\nimport type { TEndpointOption } from './types';\nimport {\n  EModelEndpoint,\n  openAISchema,\n  googleSchema,\n  bingAISchema,\n  anthropicSchema,\n  chatGPTBrowserSchema,\n  gptPluginsSchema,\n  assistantSchema,\n  compactOpenAISchema,\n  compactGoogleSchema,\n  compactAnthropicSchema,\n  compactChatGPTSchema,\n  compactPluginsSchema,\n} from './schemas';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof chatGPTBrowserSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema;\n\nconst endpointSchemas: Record<EModelEndpoint, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: chatGPTBrowserSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistant]: assistantSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<TConversation | TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema.parse(conversation) as TConversation;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\nexport const getResponseSender = (endpointOption: TEndpointOption): string => {\n  const { model, endpoint, endpointType, modelDisplayLabel, chatGptLabel, modelLabel, jailbreak } =\n    endpointOption;\n\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    }\n    return alternateName[endpoint] ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.bingAI) {\n    return jailbreak ? 'Sydney' : 'BingAI';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel ?? 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model && model.includes('gemini')) {\n      return 'Gemini';\n    } else if (model && model.includes('code')) {\n      return 'Codey';\n    }\n\n    return 'PaLM2';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof compactOpenAISchema\n  | typeof assistantSchema\n  | typeof compactGoogleSchema\n  | typeof bingAISchema\n  | typeof compactAnthropicSchema\n  | typeof compactChatGPTSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<string, CompactEndpointSchema> = {\n  openAI: compactOpenAISchema,\n  azureOpenAI: compactOpenAISchema,\n  custom: compactOpenAISchema,\n  assistant: assistantSchema,\n  google: compactGoogleSchema,\n  /* BingAI needs all fields */\n  bingAI: bingAISchema,\n  anthropic: compactAnthropicSchema,\n  chatGPTBrowser: compactChatGPTSchema,\n  gptPlugins: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<TConversation | TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  const convo = schema.parse(conversation) as TConversation;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n","export type Metadata = {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  code_interpreter = 'code_interpreter',\n  retrieval = 'retrieval',\n  function = 'function',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids: string[];\n  instructions: string | null;\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools: Tool[];\n};\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Tool[];\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Tool[];\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n","export enum QueryKeys {\n  messages = 'messages',\n  allConversations = 'allConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n}\n\nexport enum MutationKeys {\n  imageUpload = 'imageUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  logoutUser = 'logoutUser',\n  avatarUpload = 'avatarUpload',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","export const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const messages = (conversationId: string, messageId?: string) =>\n  `/api/messages/${conversationId}${messageId ? `/${messageId}` : ''}`;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const abortRequest = (endpoint: string) => `/api/ask/${endpoint}/abort`;\n\nexport const conversations = (pageNumber: string) => `/api/convos?pageNumber=${pageNumber}`;\n\nexport const conversationById = (id: string) => `/api/convos/${id}`;\n\nexport const genTitle = () => '/api/convos/gen_title';\n\nexport const updateConversation = () => '/api/convos/update';\n\nexport const deleteConversation = () => '/api/convos/clear';\n\nexport const search = (q: string, pageNumber: string) =>\n  `/api/search?q=${q}&pageNumber=${pageNumber}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) => `/api/auth/refresh${retry ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const assistants = (id?: string) => `/api/assistants${id ? `/${id}` : ''}`;\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\nimport { setTokenHeader } from './headers-helpers';\nimport * as endpoints from './api-endpoints';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean) => _post(endpoints.refreshToken(retry));\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const { token } = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') ? true : false,\n        );\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          setTokenHeader(token);\n          window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n};\n","import * as f from './types/files';\nimport * as q from './types/queries';\nimport * as m from './types/mutations';\nimport * as a from './types/assistants';\nimport * as t from './types';\nimport * as s from './schemas';\nimport request from './request';\nimport * as endpoints from './api-endpoints';\n\nexport function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations(pageNumber));\n}\n\nexport function abortRequestWithMessage(\n  endpoint: string,\n  abortKey: string,\n  message: string,\n): Promise<void> {\n  return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey, message } });\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  //todo: this should be a DELETE request\n  return request.post(endpoints.deleteConversation(), { arg: payload });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.post(endpoints.deleteConversation(), { arg: {} });\n}\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (conversationId === 'new') {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages(conversationId));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text });\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<string> {\n  return request.get(endpoints.balance());\n}\n\nexport const searchConversations = async (\n  q: string,\n  pageNumber: string,\n): Promise<t.TSearchResults> => {\n  return request.get(endpoints.search(q, pageNumber));\n};\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser) => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = () => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<t.TStartupConfig> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = (data: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants(), data);\n};\n\nexport const getAssistantById = (assistant_id: string): Promise<a.Assistant> => {\n  return request.get(endpoints.assistants(assistant_id));\n};\n\nexport const updateAssistant = (\n  assistant_id: string,\n  data: a.AssistantUpdateParams,\n): Promise<a.Assistant> => {\n  return request.patch(endpoints.assistants(assistant_id), data);\n};\n\nexport const deleteAssistant = (assistant_id: string): Promise<void> => {\n  return request.delete(endpoints.assistants(assistant_id));\n};\n\nexport const listAssistants = (\n  params?: a.AssistantListParams,\n): Promise<a.AssistantListResponse> => {\n  return request.get(endpoints.assistants(), { params });\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const uploadImage = (data: FormData): Promise<f.TFileUpload> => {\n  return request.postMultiPart(endpoints.images(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const deleteFiles = async (files: f.BatchFile[]): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: { files },\n  });\n\n/* conversations */\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  // Assuming params has a pageNumber property\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  return request.get(endpoints.conversations(pageNumber));\n};\n\nexport const listConversationsByQuery = (\n  params?: q.ConversationListParams & { searchQuery?: string },\n): Promise<q.ConversationListResponse> => {\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  const searchQuery = params?.searchQuery || ''; // If no search query is provided, default to an empty string\n  // Update the endpoint to handle a search query\n  if (searchQuery !== '') {\n    return request.get(endpoints.search(searchQuery, pageNumber));\n  } else {\n    return request.get(endpoints.conversations(pageNumber));\n  }\n};\n","/* eslint-disable */\n/**\n * Copyright (C) 2016 Maxime Petazzoni <maxime.petazzoni@bulix.org>.\n * All rights reserved.\n */\n\nimport request from './request';\nimport { setTokenHeader } from './headers-helpers';\n\nvar SSE = function (url, options) {\n  if (!(this instanceof SSE)) {\n    return new SSE(url, options);\n  }\n\n  this.INITIALIZING = -1;\n  this.CONNECTING = 0;\n  this.OPEN = 1;\n  this.CLOSED = 2;\n\n  this.url = url;\n\n  options = options || {};\n  this.headers = options.headers || {};\n  this.payload = options.payload !== undefined ? options.payload : '';\n  this.method = options.method || (this.payload && 'POST') || 'GET';\n  this.withCredentials = !!options.withCredentials;\n\n  this.FIELD_SEPARATOR = ':';\n  this.listeners = {};\n\n  this.xhr = null;\n  this.readyState = this.INITIALIZING;\n  this.progress = 0;\n  this.chunk = '';\n\n  this.addEventListener = function (type, listener) {\n    if (this.listeners[type] === undefined) {\n      this.listeners[type] = [];\n    }\n\n    if (this.listeners[type].indexOf(listener) === -1) {\n      this.listeners[type].push(listener);\n    }\n  };\n\n  this.removeEventListener = function (type, listener) {\n    if (this.listeners[type] === undefined) {\n      return;\n    }\n\n    var filtered = [];\n    this.listeners[type].forEach(function (element) {\n      if (element !== listener) {\n        filtered.push(element);\n      }\n    });\n    if (filtered.length === 0) {\n      delete this.listeners[type];\n    } else {\n      this.listeners[type] = filtered;\n    }\n  };\n\n  this.dispatchEvent = function (e) {\n    if (!e) {\n      return true;\n    }\n\n    e.source = this;\n\n    var onHandler = 'on' + e.type;\n    if (this.hasOwnProperty(onHandler)) {\n      this[onHandler].call(this, e);\n      if (e.defaultPrevented) {\n        return false;\n      }\n    }\n\n    if (this.listeners[e.type]) {\n      return this.listeners[e.type].every(function (callback) {\n        callback(e);\n        return !e.defaultPrevented;\n      });\n    }\n\n    return true;\n  };\n\n  this._setReadyState = function (state) {\n    var event = new CustomEvent('readystatechange');\n    event.readyState = state;\n    this.readyState = state;\n    this.dispatchEvent(event);\n  };\n\n  this._onStreamFailure = function (e) {\n    var event = new CustomEvent('error');\n    event.data = e.currentTarget.response;\n    this.dispatchEvent(event);\n    this.close();\n  };\n\n  this._onStreamAbort = function (e) {\n    this.dispatchEvent(new CustomEvent('abort'));\n    this.close();\n  };\n\n  this._onStreamProgress = async function (e) {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.status === 401 && !this._retry) {\n      this._retry = true;\n      try {\n        const refreshResponse = await request.refreshToken();\n        this.headers = {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${refreshResponse.token}`,\n        };\n        setTokenHeader(refreshResponse.token);\n        window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: refreshResponse.token }));\n        this.stream();\n      } catch (err) {\n        this._onStreamFailure(e);\n        return;\n      }\n    } else if (this.xhr.status !== 200) {\n      this._onStreamFailure(e);\n      return;\n    }\n\n    if (this.readyState == this.CONNECTING) {\n      this.dispatchEvent(new CustomEvent('open'));\n      this._setReadyState(this.OPEN);\n    }\n\n    var data = this.xhr.responseText.substring(this.progress);\n    this.progress += data.length;\n    data.split(/(\\r\\n|\\r|\\n){2}/g).forEach(\n      function (part) {\n        if (part.trim().length === 0) {\n          this.dispatchEvent(this._parseEventChunk(this.chunk.trim()));\n          this.chunk = '';\n        } else {\n          this.chunk += part;\n        }\n      }.bind(this),\n    );\n  };\n\n  this._onStreamLoaded = function (e) {\n    this._onStreamProgress(e);\n\n    // Parse the last chunk.\n    this.dispatchEvent(this._parseEventChunk(this.chunk));\n    this.chunk = '';\n  };\n\n  /**\n   * Parse a received SSE event chunk into a constructed event object.\n   */\n  this._parseEventChunk = function (chunk) {\n    if (!chunk || chunk.length === 0) {\n      return null;\n    }\n\n    var e = { id: null, retry: null, data: '', event: 'message' };\n    chunk.split(/\\n|\\r\\n|\\r/).forEach(\n      function (line) {\n        line = line.trimRight();\n        var index = line.indexOf(this.FIELD_SEPARATOR);\n        if (index <= 0) {\n          // Line was either empty, or started with a separator and is a comment.\n          // Either way, ignore.\n          return;\n        }\n\n        var field = line.substring(0, index);\n        if (!(field in e)) {\n          return;\n        }\n\n        var value = line.substring(index + 1).trimLeft();\n        if (field === 'data') {\n          e[field] += value;\n        } else {\n          e[field] = value;\n        }\n      }.bind(this),\n    );\n\n    var event = new CustomEvent(e.event);\n    event.data = e.data;\n    event.id = e.id;\n    return event;\n  };\n\n  this._checkStreamClosed = function () {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.readyState === XMLHttpRequest.DONE) {\n      this._setReadyState(this.CLOSED);\n    }\n  };\n\n  this.stream = function () {\n    this._setReadyState(this.CONNECTING);\n\n    this.xhr = new XMLHttpRequest();\n    this.xhr.addEventListener('progress', this._onStreamProgress.bind(this));\n    this.xhr.addEventListener('load', this._onStreamLoaded.bind(this));\n    this.xhr.addEventListener('readystatechange', this._checkStreamClosed.bind(this));\n    this.xhr.addEventListener('error', this._onStreamFailure.bind(this));\n    this.xhr.addEventListener('abort', this._onStreamAbort.bind(this));\n    this.xhr.open(this.method, this.url);\n    for (var header in this.headers) {\n      this.xhr.setRequestHeader(header, this.headers[header]);\n    }\n    this.xhr.withCredentials = this.withCredentials;\n    this.xhr.send(this.payload);\n  };\n\n  this.close = function () {\n    if (this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.xhr.abort();\n    this.xhr = null;\n    this._setReadyState(this.CLOSED);\n  };\n};\n\nexport { SSE };\n// Export our SSE module for npm.js\n// if (typeof exports !== 'undefined') {\n//   // exports.SSE = SSE;\n//   module.exports = { SSE };\n// }\n","import type { TSubmission, TMessage, TEndpointOption } from './types';\nimport { tConvoUpdateSchema, EModelEndpoint } from './schemas';\nimport { EndpointURLs } from './config';\n\nexport default function createPayload(submission: TSubmission) {\n  const { conversation, message, messages, endpointOption, isEdited, isContinued } = submission;\n  const { conversationId } = tConvoUpdateSchema.parse(conversation);\n  const { endpoint, endpointType } = endpointOption as {\n    endpoint: EModelEndpoint;\n    endpointType?: EModelEndpoint;\n  };\n\n  let server = EndpointURLs[endpointType ?? endpoint];\n\n  if (isEdited && endpoint === EModelEndpoint.assistant) {\n    server += '/modify';\n  } else if (isEdited) {\n    server = server.replace('/ask/', '/edit/');\n  }\n\n  type Payload = Partial<TMessage> &\n    Partial<TEndpointOption> & {\n      isContinued: boolean;\n      conversationId: string | null;\n      messages?: typeof messages;\n    };\n\n  const payload: Payload = {\n    ...message,\n    ...endpointOption,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n  };\n\n  if (endpoint === EModelEndpoint.assistant) {\n    payload.messages = messages;\n  }\n\n  return { server, payload };\n}\n"],"names":["EModelEndpoint","ImageDetail","endpointSettings","_a","google","model","default","maxOutputTokens","min","max","step","maxGeminiPro","defaultGeminiPro","temperature","topP","topK","eModelEndpointSchema","z","nativeEnum","extendedModelEndpointSchema","union","string","imageDetailNumeric","_b","low","auto","high","imageDetailValue","eImageDetailSchema","tPluginAuthConfigSchema","object","authField","label","description","tPluginSchema","name","pluginKey","icon","authConfig","array","authenticated","boolean","optional","isButton","tExampleSchema","input","content","output","tAgentOptionsSchema","agent","skipCompletion","number","tMessageSchema","messageId","endpoint","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","text","generation","isEdited","isCreatedByUser","error","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","tConversationSchema","user","endpointType","suggestions","messages","tools","systemMessage","modelLabel","examples","chatGptLabel","userLabel","promptPrefix","context","top_p","frequency_penalty","presence_penalty","jailbreak","jailbreakConversationId","conversationSignature","invocationId","toneStyle","agentOptions","resendImages","imageDetail","assistant_id","thread_id","tPresetSchema","omit","merge","presetId","defaultPreset","order","tConvoUpdateSchema","tPresetUpdateSchema","openAISchema","pick","transform","obj","_c","_d","_e","_f","_g","_h","_j","catch","googleSchema","isGeminiPro","toLowerCase","includes","maxOutputTokensMax","maxOutputTokensDefault","Math","__assign","_k","bingAISchema","anthropicSchema","chatGPTBrowserSchema","gptPluginsSchema","removeNullishValues","newObj","Object","keys","forEach","key","undefined","FileSources","assistantSchema","compactOpenAISchema","compactGoogleSchema","compactAnthropicSchema","compactChatGPTSchema","compactPluginsSchema","length","KnownEndpoints","fileSourceSchema","endpointSchema","refine","value","safeParse","success","message","concat","values","join","apiKey","baseURL","models","fetch","titleConvo","titleMethod","titleModel","summarize","summaryModel","forcePrompt","modelDisplayLabel","headers","record","any","configSchema","version","cache","fileStrategy","registration","socialLogins","allowedDomains","endpoints","custom","partial","strict","CacheKeys","AuthKeys","ImageDetailCost","SettingsTabValues","defaultEndpoints","openAI","assistant","azureOpenAI","bingAI","chatGPTBrowser","gptPlugins","anthropic","alternateName","defaultModels","EndpointURLs","modularEndpoints","Set","supportsFiles","supportsBalanceCheck","endpointSchemas","getFirstDefinedValue","possibleValues","returnValue","possibleValues_1","_i","Tools","QueryKeys","MutationKeys","compactEndpointSchemas","setTokenHeader","token","axios","defaults","common","keysEndpoint","conversations","pageNumber","search","q","assistants","id","images","_post","url","data","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","config","status","_retry","Promise","push","err_1","window","dispatchEvent","CustomEvent","detail","location","href","err_2","request","get","options","postMultiPart","formData","put","delete","deleteWithOptions","patch","abortKey","endpoints.abortRequest","arg","endpoints.assistants","payload","files","endpoints.conversationById","endpoints.conversations","endpoints.messages","params","searchQuery","endpoints.search","endpoints.revokeUserKey","Error","endpoints.images","endpoints.userKeyQuery","SSE","this","INITIALIZING","CONNECTING","OPEN","CLOSED","method","withCredentials","FIELD_SEPARATOR","listeners","xhr","readyState","progress","chunk","addEventListener","type","listener","indexOf","removeEventListener","filtered","element","e","source","onHandler","hasOwnProperty","call","defaultPrevented","every","callback","_setReadyState","state","event","_onStreamFailure","currentTarget","close","_onStreamAbort","_onStreamProgress","async","refreshResponse","Authorization","stream","err","responseText","substring","split","part","trim","_parseEventChunk","bind","_onStreamLoaded","line","index","trimRight","field","trimLeft","_checkStreamClosed","XMLHttpRequest","DONE","header","open","setRequestHeader","send","abort","submission","conversation","endpointOption","isContinued","parse","server","replace","schema","convo","secondaryModels"],"mappings":"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"}