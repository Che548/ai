if(!self.define){let e,t={};const s=(s,n)=>(s=new URL(s+".js",n).href,t[s]||new Promise((t=>{if("document"in self){const e=document.createElement("script");e.src=s,e.onload=t,document.head.appendChild(e)}else e=s,importScripts(s),t()})).then((()=>{let e=t[s];if(!e)throw new Error(`Module ${s} didnâ€™t register its module`);return e})));self.define=(n,i)=>{const r=e||("document"in self?document.currentScript.src:"")||location.href;if(t[r])return;let o={};const a=e=>s(e,r),c={module:{uri:r},exports:o,require:a};t[r]=Promise.all(n.map((e=>c[e]||a(e)))).then((e=>(i(...e),o)))}}define([],(function(){"use strict";try{self["workbox:core:7.0.0"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:7.0.0"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}setCatchHandler(e){this.catchHandler=s(e)}}class i extends n{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class r{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:i,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let o=r&&r.handler;const a=e.method;if(!o&&this.i.has(a)&&(o=this.i.get(a)),!o)return;let c;try{c=o.handle({url:s,request:e,event:t,params:i})}catch(e){c=Promise.reject(e)}const l=r&&r.catchHandler;return c instanceof Promise&&(this.o||l)&&(c=c.catch((async n=>{if(l)try{return await l.handle({url:s,request:e,event:t,params:i})}catch(e){e instanceof Error&&(n=e)}if(this.o)return this.o.handle({url:s,request:e,event:t});throw n}))),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const i=this.t.get(s.method)||[];for(const r of i){let i;const o=r.match({url:e,sameOrigin:t,request:s,event:n});if(o)return i=o,(Array.isArray(i)&&0===i.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(i=void 0),{route:r,params:i}}return{}}setDefaultHandler(e,t="GET"){this.i.set(t,s(e))}setCatchHandler(e){this.o=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let o;const a=()=>(o||(o=new r,o.addFetchListener(),o.addCacheListener()),o);function c(e,s,r){let o;if("string"==typeof e){const t=new URL(e,location.href);o=new n((({url:e})=>e.href===t.href),s,r)}else if(e instanceof RegExp)o=new i(e,s,r);else if("function"==typeof e)o=new n(e,s,r);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});o=e}return a().registerRoute(o),o}const l={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},u=e=>[l.prefix,e,l.suffix].filter((e=>e&&e.length>0)).join("-"),h=e=>e||u(l.precache),f=e=>e||u(l.runtime);function d(e,t){const s=t();return e.waitUntil(s),s}try{self["workbox:precaching:7.0.0"]&&_()}catch(e){}function w(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(n,location.href),r=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",s),{cacheKey:i.href,url:r.href}}class p{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class v{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this.l.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this.l=e}}let g;async function y(e,s){let n=null;if(e.url){n=new URL(e.url).origin}if(n!==self.location.origin)throw new t("cross-origin-copy-response",{origin:n});const i=e.clone(),r={headers:new Headers(i.headers),status:i.status,statusText:i.statusText},o=function(){if(void 0===g){const e=new Response("");if("body"in e)try{new Response(e.body),g=!0}catch(e){g=!1}g=!1}return g}()?i.body:await i.blob();return new Response(o,r)}function m(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class b{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const R=new Set;try{self["workbox:strategies:7.0.0"]&&_()}catch(e){}function q(e){return"string"==typeof e?new Request(e):e}class U{constructor(e,t){this.u={},Object.assign(this,t),this.event=t.event,this.h=e,this.p=new b,this.v=[],this.m=[...e.plugins],this.R=new Map;for(const e of this.m)this.R.set(e,{});this.event.waitUntil(this.p.promise)}async fetch(e){const{event:s}=this;let n=q(e);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const i=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const r=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this.h.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(e){throw i&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:i.clone(),request:r.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=q(e);let s;const{cacheName:n,matchOptions:i}=this.h,r=await this.getCacheKey(t,"read"),o=Object.assign(Object.assign({},i),{cacheName:n});s=await caches.match(r,o);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:n,matchOptions:i,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,s){const n=q(e);var i;await(i=0,new Promise((e=>setTimeout(e,i))));const r=await this.getCacheKey(n,"write");if(!s)throw new t("cache-put-with-no-response",{url:(o=r.url,new URL(String(o),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var o;const a=await this.q(s);if(!a)return!1;const{cacheName:c,matchOptions:l}=this.h,u=await self.caches.open(c),h=this.hasCallback("cacheDidUpdate"),f=h?await async function(e,t,s,n){const i=m(t.url,s);if(t.url===i)return e.match(t,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),o=await e.keys(t,r);for(const t of o)if(i===m(t.url,s))return e.match(t,n)}(u,r.clone(),["__WB_REVISION__"],l):null;try{await u.put(r,h?a.clone():a)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of R)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:f,newResponse:a.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this.u[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=q(await e({mode:t,request:n,event:this.event,params:this.params}));this.u[s]=n}return this.u[s]}hasCallback(e){for(const t of this.h.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this.h.plugins)if("function"==typeof t[e]){const s=this.R.get(t),n=n=>{const i=Object.assign(Object.assign({},n),{state:s});return t[e](i)};yield n}}waitUntil(e){return this.v.push(e),e}async doneWaiting(){let e;for(;e=this.v.shift();)await e}destroy(){this.p.resolve(null)}async q(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class x{constructor(e={}){this.cacheName=f(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,i=new U(this,{event:t,request:s,params:n}),r=this.U(i,s,t);return[r,this.L(r,i,s,t)]}async U(e,s,n){let i;await e.runCallbacks("handlerWillStart",{event:n,request:s});try{if(i=await this._(s,e),!i||"error"===i.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const r of e.iterateCallbacks("handlerDidError"))if(i=await r({error:t,event:n,request:s}),i)break;if(!i)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))i=await t({event:n,request:s,response:i});return i}async L(e,t,s,n){let i,r;try{i=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:i}),await t.doneWaiting()}catch(e){e instanceof Error&&(r=e)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:i,error:r}),t.destroy(),r)throw r}}class L extends x{constructor(e={}){e.cacheName=h(e.cacheName),super(e),this.I=!1!==e.fallbackToNetwork,this.plugins.push(L.copyRedirectedCacheableResponsesPlugin)}async _(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this.C(e,t):await this.j(e,t))}async j(e,s){let n;const i=s.params||{};if(!this.I)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const t=i.integrity,r=e.integrity,o=!r||r===t;n=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||t:void 0})),t&&o&&"no-cors"!==e.mode&&(this.O(),await s.cachePut(e,n.clone()))}return n}async C(e,s){this.O();const n=await s.fetch(e);if(!await s.cachePut(e,n.clone()))throw new t("bad-precaching-response",{url:e.url,status:n.status});return n}O(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==L.copyRedirectedCacheableResponsesPlugin&&(n===L.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(L.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}L.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},L.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await y(e):e};class I{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this.k=new Map,this.N=new Map,this.S=new Map,this.h=new L({cacheName:h(e),plugins:[...t,new v({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.h}precache(e){this.addToCacheList(e),this.P||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.P=!0)}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:i}=w(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this.k.has(i)&&this.k.get(i)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.k.get(i),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.S.has(e)&&this.S.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:i});this.S.set(e,n.integrity)}if(this.k.set(i,e),this.N.set(i,r),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return d(e,(async()=>{const t=new p;this.strategy.plugins.push(t);for(const[t,s]of this.k){const n=this.S.get(s),i=this.N.get(t),r=new Request(t,{integrity:n,cache:i,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:r,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return d(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this.k.values()),n=[];for(const i of t)s.has(i.url)||(await e.delete(i),n.push(i.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this.k}getCachedURLs(){return[...this.k.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.k.get(t.href)}getIntegrityForCacheKey(e){return this.S.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let C;const E=()=>(C||(C=new I),C);class j extends n{constructor(e,t){super((({request:s})=>{const n=e.getURLsToCacheKeys();for(const i of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:i}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const o=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield o.href,s&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=s,yield e.href}if(n){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:r});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(i);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}var O,k;self.skipWaiting(),self.addEventListener("activate",(()=>self.clients.claim())),O={},function(e){E().precache(e)}([{url:"assets/ames.png",revision:null},{url:"assets/anyscale.png",revision:null},{url:"assets/apipie.png",revision:null},{url:"assets/apple-touch-icon-180x180.png",revision:null},{url:"assets/bingai-jb.png",revision:null},{url:"assets/bingai.png",revision:null},{url:"assets/c.svg",revision:null},{url:"assets/cohere.png",revision:null},{url:"assets/cplusplus.svg",revision:null},{url:"assets/deepseek.svg",revision:null},{url:"assets/favicon-16x16.png",revision:null},{url:"assets/favicon-32x32.png",revision:null},{url:"assets/fireworks.png",revision:null},{url:"assets/fortran.svg",revision:null},{url:"assets/go.svg",revision:null},{url:"assets/google-palm.svg",revision:null},{url:"assets/groq.png",revision:null},{url:"assets/huggingface.svg",revision:null},{url:"assets/logo.svg",revision:null},{url:"assets/maskable-icon.png",revision:null},{url:"assets/mistral.png",revision:null},{url:"assets/mlx.png",revision:null},{url:"assets/nodedotjs.svg",revision:null},{url:"assets/ollama.png",revision:null},{url:"assets/openrouter.png",revision:null},{url:"assets/perplexity.png",revision:null},{url:"assets/php.svg",revision:null},{url:"assets/python.svg",revision:null},{url:"assets/rust.svg",revision:null},{url:"assets/shuttleai.png",revision:null},{url:"assets/together.png",revision:null},{url:"assets/tsnode.svg",revision:null},{url:"assets/web-browser.svg",revision:null},{url:"assets/xai.svg",revision:null},{url:"assets/index.BKqjQ_Uz.css",revision:null},{url:"assets/index.DtfrTv3J.js",revision:null},{url:"assets/Inter-Bold.woff2",revision:null},{url:"assets/Inter-BoldItalic.woff2",revision:null},{url:"assets/Inter-Italic.woff2",revision:null},{url:"assets/Inter-Regular.woff2",revision:null},{url:"assets/Inter-SemiBold.woff2",revision:null},{url:"assets/Inter-SemiBoldItalic.woff2",revision:null},{url:"assets/markdown_highlight.DdZtPvay.js",revision:null},{url:"assets/markdown_large.Dfyhscvt.js",revision:null},{url:"assets/roboto-mono-latin-400-italic.woff2",revision:null},{url:"assets/roboto-mono-latin-400-normal.woff2",revision:null},{url:"assets/roboto-mono-latin-700-normal.woff2",revision:null},{url:"assets/vendor.ChvSkWaW.js",revision:null},{url:"fonts/Inter-Bold.woff2",revision:"279e5a64038565325a5fda8f14a9b9ec"},{url:"fonts/Inter-BoldItalic.woff2",revision:"33083aa00dfe1e31f0ff2fb645dc75be"},{url:"fonts/Inter-Italic.woff2",revision:"8944f8c2a3dd2373bd6351e19e699d23"},{url:"fonts/Inter-Regular.woff2",revision:"46a1550a4bbaccd13a8eb46a359a9f89"},{url:"fonts/Inter-SemiBold.woff2",revision:"01fdc3828f4efe9208e2149531a8933d"},{url:"fonts/Inter-SemiBoldItalic.woff2",revision:"6fc9977f6a237a65e6caf218c87d6e01"},{url:"fonts/roboto-mono-latin-400-italic.woff2",revision:"d42634a24b5c8560a89c7a779fe152fe"},{url:"fonts/roboto-mono-latin-400-normal.woff2",revision:"32cb6e15327552c8968f500de2911299"},{url:"fonts/roboto-mono-latin-700-normal.woff2",revision:"5900c2f9140f24ce86f85cb6a6bbffc8"},{url:"index.html",revision:"7d2b319e964c38bc9fcd4e59bce08dbc"},{url:"registerSW.js",revision:"1872c500de691dce40960bb85481de07"},{url:"assets/apple-touch-icon-180x180.png",revision:"492ee09f6a0dfd5a3c1250a23679e6eb"},{url:"assets/favicon-16x16.png",revision:"d36eb1d62b2de1e52962270529330e48"},{url:"assets/favicon-32x32.png",revision:"1fa0601b7df7d586238b1de3aaca0427"},{url:"assets/maskable-icon.png",revision:"71f40b9b2146da879df8f76068dc2566"},{url:"manifest.webmanifest",revision:"3928927c68f7f83a4d3b0c079ab9219b"}]),function(e){const t=E();c(new j(t,e))}(O),self.addEventListener("activate",(e=>{const t=h();e.waitUntil((async(e,t="-precache-")=>{const s=(await self.caches.keys()).filter((s=>s.includes(t)&&s.includes(self.registration.scope)&&s!==e));return await Promise.all(s.map((e=>self.caches.delete(e)))),s})(t).then((e=>{})))})),c(new class extends n{constructor(e,{allowlist:t=[/./],denylist:s=[]}={}){super((e=>this.W(e)),e),this.B=t,this.D=s}W({url:e,request:t}){if(t&&"navigate"!==t.mode)return!1;const s=e.pathname+e.search;for(const e of this.D)if(e.test(s))return!1;return!!this.B.some((e=>e.test(s)))}}((k="index.html",E().createHandlerBoundToURL(k))))}));
