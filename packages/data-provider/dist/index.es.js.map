{"version":3,"file":"index.es.js","sources":["../src/types/runs.ts","../src/types/assistants.ts","../src/schemas.ts","../src/bedrock.ts","../src/file-config.ts","../src/models.ts","../src/types/files.ts","../src/config.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/generate.ts","../src/zod.ts","../src/roles.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/actions.ts","../src/createPayload.ts"],"sourcesContent":["export enum ContentTypes {\n  TEXT = 'text',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  ERROR = 'error',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  retrieval = 'retrieval',\n  function = 'function',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | null;\n\nexport type AgentModelParameters = {\n  model?: string;\n  temperature: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentToolResources {\n  execute_code?: ExecuteCodeResource;\n  file_search?: AgentFileSearchResource;\n}\nexport interface ExecuteCodeResource {\n  /**\n   * A list of file IDs made available to the `execute_code` tool.\n   * There can be a maximum of 20 files associated with the tool.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport interface AgentFileSearchResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n  /**\n   * A list of file IDs made available to the `file_search` tool.\n   * To be used before vector stores are implemented.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport type Agent = {\n  id: string;\n  name: string | null;\n  author?: string | null;\n  /** The original custom endpoint name, lowercased */\n  endpoint?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n  agent_ids?: string[];\n  end_after_tools?: boolean;\n  hide_sequential_outputs?: boolean;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n} & Pick<Agent, 'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs'>;\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n} & Pick<Agent, 'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs'>;\n\nexport type AgentListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  provider?: AgentProvider;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text: Text & PartMetadata }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\n/* Assistant types */\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'system_defined',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  bingAI = 'bingAI',\n  chatGPTBrowser = 'chatGPTBrowser',\n  google = 'google',\n  gptPlugins = 'gptPlugins',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.openAI,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    return model.split('.')[0] as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  isCollaborative: false,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o',\n  },\n  temperature: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 1,\n  },\n  top_p: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  presence_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  frequency_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto,\n    min: 0,\n    max: 2,\n    step: 1,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest',\n  },\n  maxOutputTokens: {\n    min: 1,\n    max: 8192,\n    step: 1,\n    default: 8192,\n  },\n  temperature: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 1,\n  },\n  topP: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0.95,\n  },\n  topK: {\n    min: 1,\n    max: 40,\n    step: 1,\n    default: 40,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 8192;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-20241022',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  promptCache: {\n    default: true,\n  },\n  maxOutputTokens: {\n    min: 1,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1,\n    default: ANTHROPIC_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (modelName.includes('claude-3-5-sonnet')) {\n        return ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (!modelName.includes('claude-3-5-sonnet') && value > LEGACY_ANTHROPIC_MAX_OUTPUT) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0.7,\n  },\n  topK: {\n    min: 1,\n    max: 40,\n    step: 1,\n    default: 5,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  top_p: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  presence_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  frequency_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string(),\n  icon: z.string(),\n  authConfig: z.array(tPluginAuthConfigSchema).optional(),\n  authenticated: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string().optional(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isEdited: z.boolean().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean().optional(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().optional(),\n});\n\nexport type TAttachmentMetadata = { messageId: string; toolCallId: string };\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  resendFiles: z.boolean().optional(),\n  imageDetail: eImageDetailSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistant + agents */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  iconURL: z.string().optional(),\n  greeting: z.string().optional(),\n  spec: z.string().optional(),\n  /*\n  Deprecated fields\n  */\n  /** @deprecated */\n  suggestions: z.array(z.string()).optional(),\n  /** @deprecated */\n  systemMessage: z.string().nullable().optional(),\n  /** @deprecated */\n  jailbreak: z.boolean().optional(),\n  /** @deprecated */\n  jailbreakConversationId: z.string().nullable().optional(),\n  /** @deprecated */\n  conversationSignature: z.string().nullable().optional(),\n  /** @deprecated */\n  clientId: z.string().nullable().optional(),\n  /** @deprecated */\n  invocationId: z.number().nullable().optional(),\n  /** @deprecated */\n  toneStyle: z.string().nullable().optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport const tPresetUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isAnonymous: z.boolean(),\n  isPublic: z.boolean(),\n  isVisible: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    artifacts: true,\n    topP: true,\n    topK: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    return {\n      ...obj,\n      model: obj.model ?? google.model.default,\n      modelLabel: obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n      temperature: obj.temperature ?? google.temperature.default,\n      maxOutputTokens: obj.maxOutputTokens ?? google.maxOutputTokens.default,\n      topP: obj.topP ?? google.topP.default,\n      topK: obj.topK ?? google.topK.default,\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n  })\n  .catch(() => ({\n    model: google.model.default,\n    modelLabel: null,\n    promptPrefix: null,\n    examples: [{ input: { content: '' }, output: { content: '' } }],\n    temperature: google.temperature.default,\n    maxOutputTokens: google.maxOutputTokens.default,\n    topP: google.topP.default,\n    topK: google.topK.default,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const bingAISchema = tConversationSchema\n  .pick({\n    jailbreak: true,\n    systemMessage: true,\n    context: true,\n    toneStyle: true,\n    jailbreakConversationId: true,\n    conversationSignature: true,\n    clientId: true,\n    invocationId: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: '',\n    jailbreak: obj.jailbreak ?? false,\n    systemMessage: obj.systemMessage ?? null,\n    context: obj.context ?? null,\n    toneStyle: obj.toneStyle ?? 'creative',\n    jailbreakConversationId: obj.jailbreakConversationId ?? null,\n    conversationSignature: obj.conversationSignature ?? null,\n    clientId: obj.clientId ?? null,\n    invocationId: obj.invocationId ?? 1,\n  }))\n  .catch(() => ({\n    model: '',\n    jailbreak: false,\n    systemMessage: null,\n    context: null,\n    toneStyle: 'creative',\n    jailbreakConversationId: null,\n    conversationSignature: null,\n    clientId: null,\n    invocationId: 1,\n  }));\n\nexport const chatGPTBrowserSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'text-davinci-002-render-sha',\n  }))\n  .catch(() => ({\n    model: 'text-davinci-002-render-sha',\n  }));\n\nexport const gptPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    artifacts: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(obj: T): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nexport const assistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    artifacts: true,\n    promptPrefix: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n  }));\n\nexport const compactAssistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    promptPrefix: true,\n    artifacts: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  // will change after adding temperature\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n\nexport const agentsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendFiles: true,\n    imageDetail: true,\n    agent_id: true,\n    instructions: true,\n    promptPrefix: true,\n    iconURL: true,\n    greeting: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAISchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendFiles: true,\n    artifacts: true,\n    imageDetail: true,\n    stop: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n    max_tokens: true,\n  })\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    artifacts: true,\n    topP: true,\n    topK: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n    resendFiles: true,\n    promptCache: true,\n    artifacts: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactChatGPTSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nconst tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsSchema = tConversationSchema\n  .pick({\n    spec: true,\n    // model: true,\n    iconURL: true,\n    greeting: true,\n    agent_id: true,\n    resendFiles: true,\n    instructions: true,\n    additional_instructions: true,\n  })\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n","import { z } from 'zod';\nimport * as s from './schemas';\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform(s.removeNullishValues)\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  const result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  // Remove additionalModelRequestFields from the result\n  delete result.additionalModelRequestFields;\n\n  return result;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { FileConfig, EndpointFileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'text/vtt',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|x-c\\+\\+|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|vtt|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|vtt|xml))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  metadata?: { fileIdentifier?: string };\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { fileConfigSchema } from './file-config';\nimport { specsConfigSchema } from './models';\nimport { FileSources } from './types/files';\nimport { TModelsConfig } from './types';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> = T extends z.ZodDefault<z.ZodTypeAny>\n  ? ReturnType<T['_def']['defaultValue']>\n  : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema | undefined>;\nexport type TAzureGroupMap = Record<\n  string,\n  (TAzureBaseSchema & { models: Record<string, TAzureModelConfig | undefined> }) | undefined\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  hide_sequential_outputs = 'hide_sequential_outputs',\n  end_after_tools = 'end_after_tools',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const agentsEndpointSChema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSChema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  interface: z\n    .object({\n      privacyPolicy: z\n        .object({\n          externalUrl: z.string().optional(),\n          openNewTab: z.boolean().optional(),\n        })\n        .optional(),\n      termsOfService: z\n        .object({\n          externalUrl: z.string().optional(),\n          openNewTab: z.boolean().optional(),\n          modalAcceptance: z.boolean().optional(),\n          modalTitle: z.string().optional(),\n          modalContent: z.string().or(z.array(z.string())).optional(),\n        })\n        .optional(),\n      endpointsMenu: z.boolean().optional(),\n      modelSelect: z.boolean().optional(),\n      parameters: z.boolean().optional(),\n      sidePanel: z.boolean().optional(),\n      multiConvo: z.boolean().optional(),\n      bookmarks: z.boolean().optional(),\n      presets: z.boolean().optional(),\n      prompts: z.boolean().optional(),\n      agents: z.boolean().optional(),\n    })\n    .default({\n      endpointsMenu: true,\n      modelSelect: true,\n      parameters: true,\n      sidePanel: true,\n      presets: true,\n      multiConvo: true,\n      bookmarks: true,\n      prompts: true,\n      agents: true,\n    }),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSChema.optional(),\n      [EModelEndpoint.custom]: z.array(endpointSchema.partial()).optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n  xai = 'xai',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.bingAI,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.bingAI]: 'Bing',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n  [KnownEndpoints.ollama]: 'Ollama',\n  [KnownEndpoints.xai]: 'xAI',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = [\n  'claude-3-5-haiku-20241022',\n  'claude-3-5-sonnet-20241022',\n  'claude-3-5-sonnet-20240620',\n  'claude-3-5-sonnet-latest',\n  'claude-3-opus-20240229',\n  'claude-3-sonnet-20240229',\n  'claude-3-haiku-20240307',\n  'claude-2.1',\n  'claude-2',\n  'claude-1.2',\n  'claude-1',\n  'claude-1-100k',\n  'claude-instant-1',\n  'claude-instant-1-100k',\n];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20241022-v2:0',\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-5-haiku-20241022-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: ['chatgpt-4o-latest', ...sharedOpenAIModels],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    'gemini-pro',\n    'gemini-pro-vision',\n    'chat-bison',\n    'chat-bison-32k',\n    'codechat-bison',\n    'codechat-bison-32k',\n    'text-bison',\n    'text-bison-32k',\n    'text-unicorn',\n    'code-gecko',\n    'code-bison',\n    'code-bison-32k',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    'chatgpt-4o-latest',\n    ...sharedOpenAIModels,\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.bingAI]: ['BingAI', 'Sydney'],\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs: { [key in EModelEndpoint]: string } = {\n  [EModelEndpoint.openAI]: `/api/ask/${EModelEndpoint.openAI}`,\n  [EModelEndpoint.bingAI]: `/api/ask/${EModelEndpoint.bingAI}`,\n  [EModelEndpoint.google]: `/api/ask/${EModelEndpoint.google}`,\n  [EModelEndpoint.custom]: `/api/ask/${EModelEndpoint.custom}`,\n  [EModelEndpoint.anthropic]: `/api/ask/${EModelEndpoint.anthropic}`,\n  [EModelEndpoint.gptPlugins]: `/api/ask/${EModelEndpoint.gptPlugins}`,\n  [EModelEndpoint.azureOpenAI]: `/api/ask/${EModelEndpoint.azureOpenAI}`,\n  [EModelEndpoint.chatGPTBrowser]: `/api/ask/${EModelEndpoint.chatGPTBrowser}`,\n  [EModelEndpoint.azureAssistants]: '/api/assistants/v1/chat',\n  [EModelEndpoint.assistants]: '/api/assistants/v2/chat',\n  [EModelEndpoint.agents]: `/api/${EModelEndpoint.agents}/chat`,\n  [EModelEndpoint.bedrock]: `/api/${EModelEndpoint.bedrock}/chat`,\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'gpt-4o',\n  'gpt-4o-mini',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemini-1.5',\n  'gemini-exp',\n  'moondream',\n  'llama3.2-vision',\n  'llama-3.2-90b-vision',\n  'llama-3.2-11b-vision',\n  'llama-3-2-90b-vision',\n  'llama-3-2-11b-vision',\n];\nexport enum VisionModes {\n  generative = 'generative',\n  agents = 'agents',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model === 'gpt-4-turbo-preview') {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the config store namespace.\n   */\n  ROLES = 'roles',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'tools',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'modelQueries',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'startupConfig',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'abortKeys',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'bans',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'encoded_domains',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'audioRuns',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'messages',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n  /**\n   * Tool Call Limit Violation.\n   */\n  TOOL_CALL_LIMIT = 'tool_call_limit',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.7.5',\n  /** Key for the Custom Config's version (librechat.yaml). */\n  CONFIG_VERSION = '1.1.8',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Standard value for the conversationId used for search queries */\n  SEARCH = 'search',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last BingAI Settings */\n  LAST_BING = 'lastBingSettings',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = '',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n};\n","import type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  bingAISchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactChatGPTSchema,\n  chatGPTBrowserSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof chatGPTBrowserSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nconst endpointSchemas: Record<EModelEndpoint, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: chatGPTBrowserSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.bingAI,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  const envVarMatch = value.match(envVarRegex);\n  if (envVarMatch) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    return process.env[envVarMatch[1]] || value;\n  }\n  return value;\n}\n\n/** Resolves header values to env variables if detected */\nexport function resolveHeaders(headers: Record<string, string> | undefined) {\n  const resolvedHeaders = { ...(headers ?? {}) };\n\n  if (headers && typeof headers === 'object' && !Array.isArray(headers)) {\n    Object.keys(headers).forEach((key) => {\n      resolvedHeaders[key] = extractEnvVariable(headers[key]);\n    });\n  }\n\n  return resolvedHeaders;\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n    jailbreak,\n  } = endpointOption;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && /\\bo1\\b/i.test(model)) {\n      return 'o1';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4o')) {\n      return 'GPT-4o';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.bingAI) {\n    return jailbreak === true ? 'Sydney' : 'BingAI';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model && model.includes('gemini')) {\n      return 'Gemini';\n    } else if (model && model.includes('code')) {\n      return 'Codey';\n    }\n\n    return 'PaLM2';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4o')) {\n      return 'GPT-4o';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof compactChatGPTSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<string, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  /* BingAI needs all fields */\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: compactChatGPTSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(contentParts: a.TMessageContentParts[]): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { errorsToString, extractEnvVariable, envVarRegex } from '../src/parsers';\nimport { azureGroupConfigsSchema } from '../src/config';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName = '',\n        deploymentName = '',\n        version = '',\n        baseURL = '',\n        additionalHeaders,\n        models,\n        serverless = false,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        const groupDeploymentName = group.deploymentName ?? '';\n        const groupVersion = group.version ?? '';\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!groupDeploymentName || !groupVersion) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          const modelDeploymentName = model.deploymentName ?? '';\n          const modelVersion = model.version ?? '';\n          // For object models, check if deploymentName and version are required but missing.\n          if ((!modelDeploymentName && !groupDeploymentName) || (!modelVersion && !groupVersion)) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: modelDeploymentName || groupDeploymentName,\n            // version: modelVersion || groupVersion,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n\n  if (!instanceName && groupConfig.serverless !== true) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const baseURL = groupConfig.baseURL ?? '';\n  if (groupConfig.serverless === true && !baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless === true) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n  const serverless = groupConfig.serverless ?? false;\n  const baseURL = groupConfig.baseURL ?? '';\n\n  if (!instanceName && !serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (serverless && !baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? setting.includeInput ?? true : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor(columns / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema = tConversationSchema.shape[setting.key as keyof TConversation];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (setting.type === SettingTypes.Number && isNaN(setting.default as number)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (setting.type === SettingTypes.Boolean && typeof setting.default !== 'boolean') {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string'\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import { z } from 'zod';\n\nexport type JsonSchemaType = {\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object';\n  enum?: string[];\n  items?: JsonSchemaType;\n  properties?: Record<string, JsonSchemaType>;\n  required?: string[];\n  description?: string;\n};\n\nexport function convertJsonSchemaToZod(schema: JsonSchemaType): z.ZodType {\n  let zodSchema: z.ZodType;\n\n  // Handle primitive types\n  if (schema.type === 'string') {\n    if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n      const [first, ...rest] = schema.enum;\n      zodSchema = z.enum([first, ...rest] as [string, ...string[]]);\n    } else {\n      zodSchema = z.string();\n    }\n  } else if (schema.type === 'number') {\n    zodSchema = z.number();\n  } else if (schema.type === 'boolean') {\n    zodSchema = z.boolean();\n  } else if (schema.type === 'array' && schema.items !== undefined) {\n    const itemSchema = convertJsonSchemaToZod(schema.items);\n    zodSchema = z.array(itemSchema);\n  } else if (schema.type === 'object') {\n    const shape: Record<string, z.ZodType> = {};\n    const properties = schema.properties ?? {};\n\n    for (const [key, value] of Object.entries(properties)) {\n      let fieldSchema = convertJsonSchemaToZod(value);\n      if (value.description != null && value.description !== '') {\n        fieldSchema = fieldSchema.describe(value.description);\n      }\n      shape[key] = fieldSchema;\n    }\n\n    let objectSchema = z.object(shape);\n\n    if (Array.isArray(schema.required) && schema.required.length > 0) {\n      const partial = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [\n          key,\n          schema.required?.includes(key) === true ? value : value.optional(),\n        ]),\n      );\n      objectSchema = z.object(partial);\n    } else {\n      objectSchema = objectSchema.partial();\n    }\n    zodSchema = objectSchema;\n  } else {\n    zodSchema = z.unknown();\n  }\n\n  // Add description if present\n  if (schema.description != null && schema.description !== '') {\n    zodSchema = zodSchema.describe(schema.description);\n  }\n\n  return zodSchema;\n}\n","import { z } from 'zod';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(false),\n});\n\nexport const roleSchema = z.object({\n  name: z.string(),\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n      [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n      [Permissions.USE]: z.boolean().default(true),\n      [Permissions.CREATE]: z.boolean().default(true),\n      // [Permissions.SHARE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n      [Permissions.USE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n      [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n      [Permissions.USE]: z.boolean().default(true),\n      [Permissions.CREATE]: z.boolean().default(true),\n      // [Permissions.SHARE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n      [Permissions.USE]: z.boolean().default(true),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n    [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n    [PermissionTypes.AGENTS]: agentPermissionsSchema,\n    [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    [PermissionTypes.PROMPTS]: {},\n    [PermissionTypes.BOOKMARKS]: {},\n    [PermissionTypes.AGENTS]: {},\n    [PermissionTypes.MULTI_CONVO]: {},\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    [PermissionTypes.PROMPTS]: {},\n    [PermissionTypes.BOOKMARKS]: {},\n    [PermissionTypes.AGENTS]: {},\n    [PermissionTypes.MULTI_CONVO]: {},\n  },\n});\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  toolAuth = 'toolAuth',\n  toolCalls = 'toolCalls',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n}\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  logoutUser = 'logoutUser',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import type { AssistantsEndpoint } from './schemas';\n\nexport const health = () => '/health';\nexport const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const deleteUser = () => '/api/user/delete';\n\nexport const messages = (conversationId: string, messageId?: string) =>\n  `/api/messages/${conversationId}${messageId ? `/${messageId}` : ''}`;\n\nconst shareRoot = '/api/share';\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLinks = (pageNumber: string, isPublic: boolean) =>\n  `${shareRoot}?pageNumber=${pageNumber}&isPublic=${isPublic}`;\nexport const createSharedLink = shareRoot;\nexport const updateSharedLink = shareRoot;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const abortRequest = (endpoint: string) => `/api/ask/${endpoint}/abort`;\n\nexport const conversationsRoot = '/api/convos';\n\nexport const conversations = (pageNumber: string, isArchived?: boolean, tags?: string[]) =>\n  `${conversationsRoot}?pageNumber=${pageNumber}${\n    isArchived === true ? '&isArchived=true' : ''\n  }${tags?.map((tag) => `&tags=${tag}`).join('')}`;\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}/clear`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const search = (q: string, pageNumber: string) =>\n  `/api/search?q=${q}&pageNumber=${pageNumber}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) =>\n  `/api/auth/refresh${retry === true ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const verifyEmail = () => '/api/user/verify';\n\nexport const resendVerificationEmail = () => '/api/user/verify/resend';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const prompts = () => '/api/prompts';\n\nexport const assistants = ({\n  path = '',\n  options,\n  version,\n  endpoint,\n  isAvatar,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n  isAvatar?: boolean;\n}) => {\n  let url = isAvatar === true ? `${images()}/assistants` : `/api/assistants/v${version}`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path = '', options }: { path?: string; options?: object }) => {\n  let url = '/api/agents';\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => '/api/categories';\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => '/api/roles';\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) => `${getRole(roleName)}/prompts`;\nexport const updateAgentPermissions = (roleName: string) => `${getRole(roleName)}/agents`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => '/api/user/terms';\nexport const acceptUserTerms = () => '/api/user/terms/accept';\nexport const banner = () => '/api/banner';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport * as endpoints from './api-endpoints';\nimport { setTokenHeader } from './headers-helpers';\nimport type * as t from './types';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean): Promise<t.TRefreshTokenResponse | undefined> =>\n  _post(endpoints.refreshToken(retry));\n\nconst dispatchTokenUpdatedEvent = (token: string) => {\n  setTokenHeader(token);\n  window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n};\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (!error.response) {\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      console.warn('401 error, refreshing token');\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const response = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') === true ? true : false,\n        );\n\n        const token = response?.token ?? '';\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          dispatchTokenUpdatedEvent(token);\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else if (window.location.href.includes('share/')) {\n          console.log(\n            `Refresh token failed from shared link, attempting request to ${originalRequest.url}`,\n          );\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n  dispatchTokenUpdatedEvent,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\n\nexport function abortRequestWithMessage(\n  endpoint: string,\n  abortKey: string,\n  message: string,\n): Promise<void> {\n  return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey, message } });\n}\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (conversationId === 'new') {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages(conversationId));\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = (\n  params?: q.SharedLinkListParams,\n): Promise<q.SharedLinksResponse> => {\n  const pageNumber = (params?.pageNumber ?? '1') || '1'; // Default to page 1 if not provided\n  const isPublic = params?.isPublic ?? true; // Default to true if not provided\n  return request.get(endpoints.getSharedLinks(pageNumber, isPublic));\n};\n\nexport function getSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport function createSharedLink(payload: t.TSharedLinkRequest): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink, payload);\n}\n\nexport function updateSharedLink(payload: t.TSharedLinkRequest): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink, payload);\n}\n\nexport function deleteSharedLink(shareId: string): Promise<t.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text, index });\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<string> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser) => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = () => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<t.TStartupConfig> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\nexport const getVerifyAgentToolAuth = (\n  params: q.VerifyToolAuthParams,\n): Promise<q.VerifyToolAuthResponse> => {\n  return request.get(\n    endpoints.agents({\n      path: `tools/${params.toolId}/auth`,\n    }),\n  );\n};\n\nexport const callTool = <T extends m.ToolId>({\n  toolId,\n  toolParams,\n}: {\n  toolId: T;\n  toolParams: m.ToolParams<T>;\n}): Promise<m.ToolCallResponse> => {\n  return request.post(\n    endpoints.agents({\n      path: `tools/${toolId}/call`,\n    }),\n    toolParams,\n  );\n};\n\nexport const getToolCalls = (params: q.GetToolCallParams): Promise<q.ToolCallResults> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools/calls',\n      options: params,\n    }),\n  );\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (\n  data: FormData,\n  signal?: AbortSignal | null,\n): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\n\nexport const uploadFile = (data: FormData, signal?: AbortSignal | null): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<a.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      isAvatar: true,\n      path: `${data.assistant_id}/avatar`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    `${endpoints.images()}/agents/${data.agent_id}/avatar`,\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  //todo: this should be a DELETE request\n  return request.post(endpoints.deleteConversation(), { arg: payload });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.post(endpoints.deleteConversation(), { arg: {} });\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  // Assuming params has a pageNumber property\n  const pageNumber = (params?.pageNumber ?? '1') || '1'; // Default to page 1 if not provided\n  const isArchived = params?.isArchived ?? false; // Default to false if not provided\n  const tags = params?.tags || []; // Default to an empty array if not provided\n  return request.get(endpoints.conversations(pageNumber, isArchived, tags));\n};\n\nexport const listConversationsByQuery = (\n  params?: q.ConversationListParams & { searchQuery?: string },\n): Promise<q.ConversationListResponse> => {\n  const pageNumber = (params?.pageNumber ?? '1') || '1'; // Default to page 1 if not provided\n  const searchQuery = params?.searchQuery ?? ''; // If no search query is provided, default to an empty string\n  // Update the endpoint to handle a search query\n  if (searchQuery !== '') {\n    return request.get(endpoints.search(searchQuery, pageNumber));\n  } else {\n    return request.get(endpoints.conversations(pageNumber));\n  }\n};\n\nexport const searchConversations = async (\n  q: string,\n  pageNumber: string,\n): Promise<t.TSearchResults> => {\n  return request.get(endpoints.search(q, pageNumber));\n};\n\nexport function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations(pageNumber));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateAgentPermissions(\n  variables: m.UpdateAgentPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n","import { z } from 'zod';\nimport axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { FunctionTool, Schema, Reference, ActionMetadata } from './types/assistants';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools, AuthTypeEnum, AuthorizationTypeEnum } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\ntype MediaTypeObject =\n  | undefined\n  | {\n      [media: string]: OpenAPIV3.MediaTypeObject | undefined;\n    };\n\ntype RequestBodyObject = Omit<OpenAPIV3.RequestBodyObject, 'content'> & {\n  content: MediaTypeObject;\n};\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n\n  constructor(name: string, description: string, parameters: ParametersSchema) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n  }\n\n  toObjectTool(): FunctionTool {\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters: this.parameters,\n      },\n    };\n  }\n}\nclass RequestConfig {\n  constructor(\n    readonly domain: string,\n    readonly basePath: string,\n    readonly method: string,\n    readonly operation: string,\n    readonly isConsequential: boolean,\n    readonly contentType: string,\n  ) {}\n}\n\nclass RequestExecutor {\n  path: string;\n  params?: object;\n  private operationHash?: string;\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  constructor(private config: RequestConfig) {\n    this.path = config.basePath;\n  }\n\n  setParams(params: object) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = Object.assign({}, params);\n\n    for (const [key, value] of Object.entries(params)) {\n      const paramPattern = `{${key}}`;\n      if (this.path.includes(paramPattern)) {\n        this.path = this.path.replace(paramPattern, encodeURIComponent(value as string));\n        delete (this.params as Record<string, unknown>)[key];\n      }\n    }\n    return this;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    if (!metadata.auth) {\n      return this;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n    } = metadata;\n\n    const isApiKey = api_key && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth =\n      oauth_client_id &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url &&\n      client_url &&\n      scope &&\n      token_exchange_method;\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      if (!this.authToken) {\n        const tokenResponse = await axios.post(\n          client_url,\n          {\n            client_id: oauth_client_id,\n            client_secret: oauth_client_secret,\n            scope: scope,\n            grant_type: 'client_credentials',\n          },\n          {\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          },\n        );\n        this.authToken = tokenResponse.data.access_token;\n      }\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n    return this;\n  }\n\n  async execute() {\n    const url = createURL(this.config.domain, this.path);\n    const headers = {\n      ...this.authHeaders,\n      'Content-Type': this.config.contentType,\n    };\n\n    const method = this.config.method.toLowerCase();\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: this.params });\n    } else if (method === 'post') {\n      return axios.post(url, this.params, { headers });\n    } else if (method === 'put') {\n      return axios.put(url, this.params, { headers });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: this.params });\n    } else if (method === 'patch') {\n      return axios.patch(url, this.params, { headers });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${method}`);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n}\n\nexport class ActionRequest {\n  private config: RequestConfig;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n  ) {\n    this.config = new RequestConfig(domain, path, method, operation, isConsequential, contentType);\n  }\n\n  // Add getters to maintain backward compatibility\n  get domain() {\n    return this.config.domain;\n  }\n  get path() {\n    return this.config.basePath;\n  }\n  get method() {\n    return this.config.method;\n  }\n  get operation() {\n    return this.config.operation;\n  }\n  get isConsequential() {\n    return this.config.isConsequential;\n  }\n  get contentType() {\n    return this.config.contentType;\n  }\n\n  createExecutor() {\n    return new RequestExecutor(this.config);\n  }\n\n  // Maintain backward compatibility by delegating to a new executor\n  setParams(params: object) {\n    const executor = this.createExecutor();\n    executor.setParams(params);\n    return executor;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    const executor = this.createExecutor();\n    return executor.setAuth(metadata);\n  }\n\n  async execute() {\n    const executor = this.createExecutor();\n    return executor.execute();\n  }\n}\n\nexport function resolveRef(\n  schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject | RequestBodyObject,\n  components?: OpenAPIV3.ComponentsObject,\n): OpenAPIV3.SchemaObject {\n  if ('$ref' in schema && components) {\n    const refPath = schema.$ref.replace(/^#\\/components\\/schemas\\//, '');\n    const resolvedSchema = components.schemas?.[refPath];\n    if (!resolvedSchema) {\n      throw new Error(`Reference ${schema.$ref} not found`);\n    }\n    return resolveRef(resolvedSchema, components);\n  }\n  return schema as OpenAPIV3.SchemaObject;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/** Function to convert OpenAPI spec to function signatures and request builders */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters) {\n          const paramObj = param as OpenAPIV3.ParameterObject;\n          const resolvedSchema = resolveRef(\n            { ...paramObj.schema } as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n            openapiSpec.components,\n          );\n          parametersSchema.properties[paramObj.name] = resolvedSchema;\n          if (paramObj.required === true) {\n            parametersSchema.required.push(paramObj.name);\n          }\n        }\n      }\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content ?? {})[0];\n        const schema = content?.[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n      }\n\n      const functionSignature = new FunctionSignature(operationId, description, parametersSchema);\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!(operationObj['x-openai-isConsequential'] ?? false), // Custom extension for consequential actions\n        operationObj.requestBody ? 'application/json' : 'application/x-www-form-urlencoded',\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject | { responses: undefined };\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content as MediaTypeObject;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const { conversation, userMessage, endpointOption, isEdited, isContinued } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint, endpointType } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  let server = EndpointURLs[endpointType ?? endpoint];\n\n  if (isEdited && s.isAssistantsEndpoint(endpoint)) {\n    server += '/modify';\n  } else if (isEdited) {\n    server = server.replace('/ask/', '/edit/');\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n  };\n\n  return { server, payload };\n}\n"],"names":["ContentTypes","StepTypes","ToolCallTypes","Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","FilePurpose","actionDelimiter","actionDomainSeparator","hostImageIdSuffix","hostImageNamePrefix","AssistantStreamEvents","defaultOrderQuery","order","limit","AuthType","isUUID","z","string","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","openAI","bedrock","azureOpenAI","anthropic","custom","ImageDetail","getModelKey","endpoint","model","split","getSettingsKeys","endpointKey","modelKey","concat","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","isAgentsEndpoint","isParamEndpoint","endpointType","has","EAgent","imageDetailNumeric","_a","low","auto","high","imageDetailValue","eImageDetailSchema","defaultAssistantFormValues","assistant","id","name","description","instructions","conversation_starters","functions","code_interpreter","image_vision","retrieval","defaultAgentFormValues","_b","agent","model_parameters","tools","provider","projectIds","isCollaborative","execute_code","file_search","ImageVisionTool","_c","type","function","parameters","properties","required","isImageVisionTool","tool","openAISettings","default","temperature","min","max","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","undefined","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","ANTHROPIC_MAX_OUTPUT","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","includes","set","value","legacy","agentsSettings","endpointSettings","_d","google","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","object","authField","label","tPluginSchema","pluginKey","icon","authConfig","array","optional","authenticated","boolean","isButton","tExampleSchema","input","content","output","agentOptionSettings","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","text","generation","isEdited","isCreatedByUser","error","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","coerceNumber","transform","val","trim","parseFloat","DocumentType","lazy","null","record","tConversationSchema","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","artifacts","context","examples","tags","file_ids","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","presetOverride","unknown","stop","greeting","spec","suggestions","systemMessage","jailbreak","jailbreakConversationId","conversationSignature","invocationId","toneStyle","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","tConvoUpdateSchema","tPresetUpdateSchema","tSharedLinkSchema","shareId","isAnonymous","isPublic","isVisible","tConversationTagSchema","_id","tag","count","position","googleSchema","pick","obj","__assign","_e","_f","_g","_h","_j","_k","_l","_m","catch","bingAISchema","chatGPTBrowserSchema","gptPluginsSchema","result","_o","_p","removeNullishValues","newObj","Object","keys","forEach","key","assistantSchema","compactAssistantSchema","agentsSchema","openAISchema","compactGoogleSchema","anthropicSchema","compactChatGPTSchema","compactPluginsSchema","length","bannerId","message","displayFrom","displayTo","compactAgentsSchema","bedrockInputSchema","s.tConversationSchema","s.removeNullishValues","bedrockInputParser","catchall","any","data","knownKeys","additionalFields","typedData","entries","bedrockOutputParser","__spreadArray","shape","supportsFiles","azureAssistants","excelFileTypes","fullMimeTypesList","codeInterpreterMimeTypesList","retrievalMimeTypesList","imageExtRegex","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","codeTypeMapping","c","cs","cpp","md","php","py","rb","tex","js","sh","ts","tar","zip","retrievalMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","checkType","fileType","supportedTypes","some","regex","test","supportedMimeTypesSchema","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","convertStringsToRegex","patterns","reduce","acc","pattern","push","console","mergeFileConfig","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","field","FileSources","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","FileContext","checkOpenAIStorage","source","openai","azure","SettingsViews","defaultSocialLogins","defaultRetrievalModels","fileSourceSchema","getSchemaDefaults","schema","map","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","version","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","actions","fetch","userIdQuery","titleConvo","titleMethod","headers","agentsEndpointSChema","endpointSchema","safeParse","success","values","join","summarize","summaryModel","modelDisplayLabel","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","url","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","textToSpeech","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","stt","KnownEndpoints","FetchTokenConfig","configSchema","cache","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","privacyPolicy","externalUrl","openNewTab","termsOfService","modalAcceptance","modalTitle","modalContent","endpointsMenu","modelSelect","sidePanel","multiConvo","bookmarks","presets","prompts","fileStrategy","local","registration","socialLogins","allowedDomains","speech","rateLimits","modelSpecs","all","gptPlugins","strict","getConfigDefaults","VisionModes","defaultEndpoints","bingAI","chatGPTBrowser","alternateName","ollama","xai","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","filter","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","validateVisionModel","additionalModels","availableModels","visionModel","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","providerEndpointMap","endpointSchemas","getEnabledEndpoints","endpointsEnv","process","env","ENDPOINTS","enabledEndpoints","orderEndpointsConfig","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","index","errorsToString","errors","path","envVarRegex","extractEnvVariable","envVarMatch","match","resolveHeaders","resolvedHeaders","Array","isArray","getFirstDefinedValue","possibleValues","returnValue","_i","possibleValues_1","getNonEmptyValue","possibleValues_2","parseConvo","conversation","Error","convo","parse","secondaryModels","getResponseSender","endpointOption","_mdl","_cgl","_ml","compactEndpointSchemas","parseCompactConvo","parseTextParts","contentParts","contentParts_1","part","TEXT","textValue","SEPARATORS","findLastSeparatorIndex","separators","lastIndex","separators_1","separator","lastIndexOf","ArtifactModes","deprecatedAzureVariables","conflictingAzureVariables","validateAzureGroups","configs","isValid","modelNames","modelGroupMap","groupMap","groupName","rest","__rest","groupDeploymentName","groupVersion","modelDeploymentName","modelVersion","mapModelToAzureConfig","modelConfig","groupConfig","result_1","azureOptions","azureOpenAIApiVersion","azureOpenAIApiKey","apiKeyValue","modelDetails","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","mapGroupToAzureConfig","firstModelName","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","avatar","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","convertJsonSchemaToZod","zodSchema","enum","first","slice","items","itemSchema","fieldSchema","describe","objectSchema","requiredSettingFields","generateDynamicSchema","settings","schemaFields","settings_1","setting","range","minText","maxText","minTags","maxTags","Number","Boolean","String","Enum","warn","ZodArray","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","validateSettingDefinitions","columnsSet","settings_2","columns","code","ZodIssueCode","add","size","next","settings_3","requiredSettingFields_1","settingTypes","component","Tags","Input","Textarea","placeholder","Slider","includeInput","Math","round","Checkbox","Switch","Dropdown","Combobox","columnSpan","floor","optionType","Custom","conversationSchema","zodType","typeName","isNaN","ZodError","SystemRoles","PermissionTypes","Permissions","generateOpenAISchema","customOpenAI","defaults","generateGoogleSchema","customGoogle","QueryKeys","MutationKeys","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","agentPermissionsSchema","multiConvoPermissionsSchema","roleSchema","PROMPTS","BOOKMARKS","AGENTS","MULTI_CONVO","roleDefaults","ADMIN","extend","USER","_q","setAcceptLanguageHeader","axios","common","setTokenHeader","token","shareRoot","shareMessages","createSharedLink","updateSharedLink","keysEndpoint","conversationsRoot","conversations","pageNumber","updateConversation","deleteConversation","search","q","isAvatar","images","queryParams","URLSearchParams","toString","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","getRole","roleName","conversationTags","encodeURIComponent","_post","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","dispatchTokenUpdatedEvent","window","dispatchEvent","CustomEvent","detail","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","config","Promise","status","_retry","err_1","location","href","log","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","abortKey","endpoints.abortRequest","arg","payload","endpoints.addTagToConversation","endpoints.updateConversation","toolId","toolParams","endpoints.agents","endpoints.deleteConversation","endpoints.assistants","endpoints.conversationTags","endpoints.postPrompt","endpoints.createSharedLink","action_id","groupId","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","userId","file_id","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","skip","endpoints.getRole","params","searchQuery","endpoints.search","endpoints.getSharedLinks","endpoints.revokeUserKey","body","updates","endpoints.updatePromptGroup","endpoints.updateSharedLink","endpoints.images","signal","requestConfig","endpoints.userKeyQuery","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","replace","cleanPath","fullURL","URL","schemaTypeHandlers","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","openAPISchemaToZod","FunctionSignature","this","prototype","toObjectTool","RequestConfig","basePath","method","operation","isConsequential","contentType","RequestExecutor","authHeaders","setParams","operationHash","assign","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","authorization_url","client_url","scope","token_exchange_method","api_key","oauth_client_id","oauth_client_secret","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","authToken","client_id","client_secret","grant_type","tokenResponse","access_token","execute","getConfig","ActionRequest","defineProperty","createExecutor","executor","resolveRef","components","refPath","$ref","resolvedSchema","schemas","sanitizeOperationId","openapiToFunction","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","zodSchemas","baseUrl","servers","paths","methods","operationObj","defaultOperationId","operationId","summary","parametersSchema","paramObj","requestBody","apply","functionSignature","actionRequest","validateAndParseOpenAPISpec","specString","parsedSpec","load","httpMethod","responses","statusCode","refName","pop","createPayload","submission","userMessage","isContinued","s.tConvoUpdateSchema","server"],"mappings":"8KAAYA,EASAC,EAKAC,ECEAC,EAQAC,EAqWAC,EAKAC,EAQAC,EAOAC,2rEDjZZ,SAAYR,GACVA,EAAA,KAAA,OACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,MAAA,OACD,CAPD,CAAYA,IAAAA,EAOX,CAAA,IAED,SAAYC,GACVA,EAAA,WAAA,aACAA,EAAA,iBAAA,kBACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAED,SAAYC,GACVA,EAAA,SAAA,WACAA,EAAA,UAAA,YACAA,EAAA,YAAA,cACAA,EAAA,iBAAA,mBAEAA,EAAA,UAAA,WACD,CAPD,CAAYA,IAAAA,EAOX,CAAA,ICLD,SAAYC,GACVA,EAAA,aAAA,eACAA,EAAA,iBAAA,mBACAA,EAAA,YAAA,cACAA,EAAA,UAAA,YACAA,EAAA,SAAA,UACD,CAND,CAAYA,IAAAA,EAMX,CAAA,IAED,SAAYC,GACVA,EAAA,iBAAA,mBACAA,EAAA,aAAA,eACAA,EAAA,YAAA,aACD,CAJD,CAAYA,IAAAA,EAIX,CAAA,IAiWD,SAAYC,GACVA,EAAA,cAAA,gBACAA,EAAA,UAAA,WACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAED,SAAYC,GACVA,EAAA,YAAA,cACAA,EAAA,UAAA,YACAA,EAAA,OAAA,SACAA,EAAA,UAAA,YACAA,EAAA,QAAA,SACD,CAND,CAAYA,IAAAA,EAMX,CAAA,IAED,SAAYC,GACVA,EAAA,KAAA,OACAA,EAAA,WAAA,YACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAID,SAAYC,GACVA,EAAA,OAAA,SACAA,EAAA,YAAA,cACAA,EAAA,gBAAA,kBACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,OAAA,SACAA,EAAA,UAAA,YACAA,EAAA,QAAA,SACD,CATD,CAAYA,IAAAA,EASX,CAAA,IAoDM,IAKKC,EAMAC,EAMAC,EA4DAC,EA7ECC,EAAkB,WAClBC,EAAwB,MACxBC,EAAoB,aACpBC,EAAsB,cAEnC,SAAYP,GACVA,EAAA,YAAA,eACAA,EAAA,MAAA,QACAA,EAAA,KAAA,MACD,CAJD,CAAYA,IAAAA,EAIX,CAAA,IAED,SAAYC,GACVA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,OAAA,QACD,CAJD,CAAYA,IAAAA,EAIX,CAAA,IAED,SAAYC,GACVA,EAAA,YAAA,eACAA,EAAA,gBAAA,mBACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAyDD,SAAYC,GACVA,EAAA,OAAA,SACAA,EAAA,SAAA,YACAA,EAAA,gBAAA,oBACAA,EAAA,WAAA,aACAA,EAAA,iBAAA,mBACD,CAND,CAAYA,IAAAA,EAMX,CAAA,IAEY,IAQDK,UARCC,EAGT,CACFC,MAAO,OACPC,MAAO,MAGT,SAAYH,GACVA,EAAA,cAAA,iBACAA,EAAA,iBAAA,qBACAA,EAAA,gBAAA,oBACAA,EAAA,oBAAA,yBACAA,EAAA,wBAAA,6BACAA,EAAA,mBAAA,uBACAA,EAAA,gBAAA,oBACAA,EAAA,oBAAA,wBACAA,EAAA,mBAAA,uBACAA,EAAA,iBAAA,qBACAA,EAAA,qBAAA,0BACAA,EAAA,wBAAA,8BACAA,EAAA,uBAAA,4BACAA,EAAA,oBAAA,yBACAA,EAAA,uBAAA,4BACAA,EAAA,qBAAA,0BACAA,EAAA,mBAAA,wBACAA,EAAA,qBAAA,yBACAA,EAAA,wBAAA,6BACAA,EAAA,uBAAA,2BACAA,EAAA,wBAAA,4BACAA,EAAA,mBAAA,uBACAA,EAAA,WAAA,OACD,CAxBD,CAAYA,IAAAA,EAwBX,CAAA,IC9jBY,IAEDI,EAFCC,EAASC,EAAEC,SAASC,QAEjC,SAAYJ,GACVA,EAAA,cAAA,gBACAA,EAAA,cAAA,gBACAA,EAAA,eAAA,gBACD,CAJD,CAAYA,IAAAA,EAIX,CAAA,IAEY,IAEDK,EAFCC,EAAiBJ,EAAEK,WAAWP,IAE3C,SAAYK,GACVA,EAAA,YAAA,cACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,eAAA,iBACAA,EAAA,OAAA,SACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,WAAA,aACAA,EAAA,gBAAA,kBACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,QAAA,SACD,CAbD,CAAYA,IAAAA,EAaX,CAAA,IAEY,IASDG,EATCC,EAAiB,IAAIC,IAA6B,CAC7DL,EAAeM,OACfN,EAAeO,OACfP,EAAeQ,QACfR,EAAeS,YACfT,EAAeU,UACfV,EAAeW,UAGjB,SAAYR,GACVA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,UAAA,YACAA,EAAA,OAAA,SACAA,EAAA,KAAA,OACAA,EAAA,UAAA,UACAA,EAAA,YAAA,WACD,CARD,CAAYA,IAAAA,EAQX,CAAA,IAEY,IAiDDS,EAjDCC,EAAc,SAACC,EAAmCC,GAC7D,OAAID,IAAad,EAAeQ,QACvBO,EAAMC,MAAM,KAAK,GAEnBD,CACT,EAEaE,EAAkB,SAACH,EAAmCC,GACjE,IAAMG,EAAcJ,EACdK,EAAWN,EAAYK,EAAaH,GAE1C,MAAO,CADa,GAAAK,OAAGF,EAAe,KAAAE,OAAAD,GACjBD,EACvB,EAIaG,EAAuB,SAACC,GACnC,IAAMR,EAAWQ,QAAAA,EAAa,GAC9B,QAAKR,GAGEA,EAASS,cAAcC,SAASxB,EAAeyB,WACxD,EAIaC,EAAmB,SAACJ,GAC/B,IAAMR,EAAWQ,QAAAA,EAAa,GAC9B,QAAKR,GAGEA,IAAad,EAAeM,MACrC,EAEaqB,EAAkB,SAC7Bb,EACAc,GAEA,QAAIxB,EAAeyB,IAAIf,IAIH,MAAhBc,GACKxB,EAAeyB,IAAID,EAI9B,GAEA,SAAYhB,GACVA,EAAA,IAAA,MACAA,EAAA,KAAA,OACAA,EAAA,KAAA,MACD,CAJD,CAAYA,IAAAA,EAIX,CAAA,QA6SWkB,EA3SCC,IAAkBC,EAAA,CAAA,GAC5BpB,EAAYqB,KAAM,EACnBD,EAACpB,EAAYsB,MAAO,EACpBF,EAACpB,EAAYuB,MAAO,KAGTC,EAAmB,CAC9B,EAAGxB,EAAYqB,IACf,EAAGrB,EAAYsB,KACf,EAAGtB,EAAYuB,MAGJE,EAAqBxC,EAAEK,WAAWU,GAElC0B,EAA6B,CACxCC,UAAW,GACXC,GAAI,GACJC,KAAM,GACNC,YAAa,GACbC,aAAc,GACdC,sBAAuB,GACvB7B,MAAO,GACP8B,UAAW,GACXC,kBAAkB,EAClBC,cAAc,EACdC,WAAW,GAGAC,IAAsBC,EAAA,CACjCC,MAAO,CAAE,EACTX,GAAI,GACJC,KAAM,GACNC,YAAa,GACbC,aAAc,GACd5B,MAAO,GACPqC,iBAAkB,CAAE,EACpBC,MAAO,GACPC,SAAU,CAAE,EACZC,WAAY,GACZC,iBAAiB,IAChB/E,EAAMgF,eAAe,EACtBP,EAACzE,EAAMiF,cAAc,KAGVC,KAAeC,EAAA,CAC1BC,KAAMpF,EAAMqF,WACXrF,EAAMqF,UAAW,CAChBrB,KAAM,eACNC,YAAa,oEACbqB,WAAY,CACVF,KAAM,SACNG,WAAY,CAAE,EACdC,SAAU,QAKHC,GAAoB,SAACC,GAChC,IAAAnC,EAAAkB,EAAA,MAAc,aAAdiB,EAAKN,OAAsC,QAAf7B,EAAAmC,EAAKL,gBAAU,IAAA9B,OAAA,EAAAA,EAAAS,SAAmC,QAA1BS,EAAAS,GAAgBG,gBAAU,IAAAZ,OAAA,EAAAA,EAAAT,KAAK,EAExE2B,GAAiB,CAC5BrD,MAAO,CACLsD,QAAS,UAEXC,YAAa,CACXC,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXK,MAAO,CACLH,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXM,iBAAkB,CAChBJ,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXO,kBAAmB,CACjBL,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXQ,YAAa,CACXR,SAAS,GAEXS,iBAAkB,CAChBT,aAASU,GAEXC,WAAY,CACVX,aAASU,GAEXE,YAAa,CACXZ,QAASzD,EAAYsB,KACrBqC,IAAK,EACLC,IAAK,EACLC,KAAM,IAIGS,GAAiB,CAC5BnE,MAAO,CACLsD,QAAS,2BAEXc,gBAAiB,CACfZ,IAAK,EACLC,IAAK,KACLC,KAAM,EACNJ,QAAS,MAEXC,YAAa,CACXC,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXe,KAAM,CACJb,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,KAEXgB,KAAM,CACJd,IAAK,EACLC,IAAK,GACLC,KAAM,EACNJ,QAAS,KAIPiB,GAAuB,KACvBC,GAA8B,KACvBC,GAAoB,CAC/BzE,MAAO,CACLsD,QAAS,8BAEXC,YAAa,CACXC,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXoB,YAAa,CACXpB,SAAS,GAEXc,gBAAiB,CACfZ,IAAK,EACLC,IAAKc,GACLb,KAAM,EACNJ,QAASiB,GACTI,MAAO,SAACC,GACN,OAAIA,EAAUC,SAAS,qBACdN,GAGF,IACR,EACDO,IAAK,SAACC,EAAeH,GACnB,OAAKA,EAAUC,SAAS,sBAAwBE,EAAQP,GAC/CA,GAGFO,CACR,GAEHV,KAAM,CACJb,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,IAEXgB,KAAM,CACJd,IAAK,EACLC,IAAK,GACLC,KAAM,EACNJ,QAAS,GAEXQ,YAAa,CACXR,SAAS,GAEXS,iBAAkB,CAChBT,aAASU,GAEXgB,OAAQ,CACNZ,gBAAiB,CACfZ,IAAK,EACLC,IAAKe,GACLd,KAAM,EACNJ,QAASkB,MAKFS,GAAiB,CAC5BjF,MAAO,CACLsD,QAAS,sBAEXC,YAAa,CACXC,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXK,MAAO,CACLH,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXM,iBAAkB,CAChBJ,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXO,kBAAmB,CACjBL,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXQ,YAAa,CACXR,SAAS,GAEXS,iBAAkB,CAChBT,aAASU,GAEXC,WAAY,CACVX,aAASU,GAEXE,YAAa,CACXZ,QAASzD,EAAYsB,OAIZ+D,KAAgBC,EAAA,CAAA,GAC1BlG,EAAeO,QAAS6D,GACzB8B,EAAClG,EAAemG,QAASjB,GACzBgB,EAAClG,EAAeU,WAAY8E,GAC5BU,EAAClG,EAAeM,QAAS0F,GACzBE,EAAClG,EAAeQ,SAAUwF,MAGtBG,GAASF,GAAiBjG,EAAemG,QAElCC,GAAuBvG,EAAEK,WAAWF,GAEpCqG,GAA8BxG,EAAEyG,MAAM,CAACF,GAAsBvG,EAAEC,WAE/DyG,GAA0B1G,EAAE2G,OAAO,CAC9CC,UAAW5G,EAAEC,SACb4G,MAAO7G,EAAEC,SACT4C,YAAa7C,EAAEC,WAKJ6G,GAAgB9G,EAAE2G,OAAO,CACpC/D,KAAM5C,EAAEC,SACR8G,UAAW/G,EAAEC,SACb4C,YAAa7C,EAAEC,SACf+G,KAAMhH,EAAEC,SACRgH,WAAYjH,EAAEkH,MAAMR,IAAyBS,WAC7CC,cAAepH,EAAEqH,UAAUF,WAC3BG,SAAUtH,EAAEqH,UAAUF,aAmBXI,GAAiBvH,EAAE2G,OAAO,CACrCa,MAAOxH,EAAE2G,OAAO,CACdc,QAASzH,EAAEC,WAEbyH,OAAQ1H,EAAE2G,OAAO,CACfc,QAASzH,EAAEC,cAMf,SAAYgC,GACVA,EAAA,UAAA,YACAA,EAAA,QAAA,SACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAEY,IAAA0F,GAAsB,CACjCzG,MAAO,CACLsD,QAAS,eAEXC,YAAa,CACXC,IAAK,EACLC,IAAK,EACLC,KAAM,IACNJ,QAAS,GAEXlB,MAAO,CACLkB,QAASvC,EAAOe,UAChB4E,QAAS,CAAC3F,EAAOe,UAAWf,EAAO4F,UAErCC,eAAgB,CACdtD,SAAS,IAIAuD,GAAsB/H,EAAEK,WAAW4B,GAEnC+F,GAAsBhI,EAAE2G,OAAO,CAC1CrD,MAAOtD,EAAEC,SAASuE,QAAQvC,EAAOe,WACjC8E,eAAgB9H,EAAEqH,UAAU7C,QAAQmD,GAAoBG,eAAetD,SACvEtD,MAAOlB,EAAEC,SACTwE,YAAazE,EAAEiI,SAASzD,QAAQmD,GAAoBlD,YAAYD,WAGrD0D,GAAiBlI,EAAE2G,OAAO,CACrCwB,UAAWnI,EAAEC,SACbgB,SAAUjB,EAAEC,SAASkH,WACrBiB,SAAUpI,EAAEC,SAASoI,WAAWlB,WAChCmB,eAAgBtI,EAAEC,SAASoI,WAC3BE,gBAAiBvI,EAAEC,SAASoI,WAC5BG,kBAAmBxI,EAAEC,SAASoI,WAAWlB,WACzCsB,wBAAyBzI,EAAEC,SAASoI,WAAWlB,WAC/CuB,GAAI1I,EAAEC,SAASoI,WAAWlB,WAC1BjG,MAAOlB,EAAEC,SAASoI,WAAWlB,WAC7BwB,MAAO3I,EAAEC,SAASoI,WAAWO,GAAG5I,EAAE6I,QAAQ,aAAarE,QAAQ,YAC/DsE,OAAQ9I,EAAEC,SAASkH,WACnB4B,KAAM/I,EAAEC,SACR+I,WAAYhJ,EAAEC,SAASoI,WAAWlB,WAClC8B,SAAUjJ,EAAEqH,UAAUF,WACtB+B,gBAAiBlJ,EAAEqH,UACnB8B,MAAOnJ,EAAEqH,UAAUF,WACnBiC,UAAWpJ,EACRC,SACAkH,WACA3C,SAAQ,WAAM,OAAA,IAAI6E,MAAOC,iBAC5BC,UAAWvJ,EACRC,SACAkH,WACA3C,SAAQ,WAAM,OAAA,IAAI6E,MAAOC,iBAC5BE,QAASxJ,EAAEqH,UAAUF,WACrBsC,WAAYzJ,EAAEqH,UAAUF,WACxBuC,aAAc1J,EAAEqH,UAAUF,WAC1BwC,cAAe3J,EAAEC,SAASkH,WAE1ByC,UAAW5J,EAAEC,SAASkH,WAEtB0C,QAAS7J,EAAEC,SAASkH,aAqBT2C,GAAe9J,EAAEyG,MAAM,CAACzG,EAAEiI,SAAUjI,EAAEC,WAAW8J,WAAU,SAACC,GACvE,MAAmB,iBAARA,EACa,KAAfA,EAAIC,YAAgB/E,EAAYgF,WAAWF,GAE7CA,CACT,IAUMG,GAA6CnK,EAAEoK,MAAK,WACxD,OAAApK,EAAEyG,MAAM,CACNzG,EAAEqK,OACFrK,EAAEqH,UACFrH,EAAEiI,SACFjI,EAAEC,SACFD,EAAEkH,MAAMlH,EAAEoK,MAAK,WAAM,OAAAD,EAAA,KACrBnK,EAAEsK,OAAOtK,EAAEoK,MAAK,WAAM,OAAAD,EAAA,MANxB,IAUWI,GAAsBvK,EAAE2G,OAAO,CAC1C2B,eAAgBtI,EAAEC,SAASoI,WAC3BpH,SAAUsF,GAAqB8B,WAC/BtG,aAAcwE,GAAqBY,WACnCqD,WAAYxK,EAAEqH,UAAUF,WACxBwB,MAAO3I,EAAEC,SAASoI,WAAWO,GAAG5I,EAAE6I,QAAQ,aAAarE,QAAQ,YAC/DiG,KAAMzK,EAAEC,SAASkH,WACjBuD,SAAU1K,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAC9B3D,MAAOxD,EAAEyG,MAAM,CAACzG,EAAEkH,MAAMJ,IAAgB9G,EAAEkH,MAAMlH,EAAEC,YAAYkH,WAC9DwD,WAAY3K,EAAEC,SAASoI,WAAWlB,WAClCyD,UAAW5K,EAAEC,SAASkH,WACtBjG,MAAOlB,EAAEC,SAASoI,WAAWlB,WAC7B0D,aAAc7K,EAAEC,SAASoI,WAAWlB,WACpC1C,YAAazE,EAAEiI,SAASd,WACxB5B,KAAMvF,EAAEiI,SAASd,WACjB3B,KAAMxF,EAAEiI,SAASd,WACjBtC,MAAO7E,EAAEiI,SAASd,WAClBpC,kBAAmB/E,EAAEiI,SAASd,WAC9BrC,iBAAkB9E,EAAEiI,SAASd,WAC7BoB,gBAAiBvI,EAAEC,SAASkH,WAC5B7B,gBAAiBwE,GAAa3C,WAC9BlC,iBAAkB6E,GAAa3C,WAC/BhC,WAAY2E,GAAa3C,WAEzBvB,YAAa5F,EAAEqH,UAAUF,WACzB2D,OAAQ9K,EAAEC,SAASkH,WAEnB4D,UAAW/K,EAAEC,SAASkH,WAEtB6D,QAAShL,EAAEC,SAASoI,WAAWlB,WAC/B8D,SAAUjL,EAAEkH,MAAMK,IAAgBJ,WAElC+D,KAAMlL,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAC1BiC,UAAWpJ,EAAEC,SACbsJ,UAAWvJ,EAAEC,SAEbkL,SAAUnL,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAE9BnC,YAAahF,EAAEqH,UAAUF,WACzB/B,YAAa5C,EAAmB2E,WAEhCiE,aAAcpL,EAAEC,SAASkH,WAEzBkE,SAAUrL,EAAEC,SAASkH,WAErBmE,OAAQtL,EAAEC,SAASkH,WACnBoE,UAAWzB,GAAa3C,WACxBqE,6BAA8BrB,GAAahD,WAE3CrE,aAAc9C,EAAEC,SAASkH,WACzBsE,wBAAyBzL,EAAEC,SAASkH,WAEpCuE,eAAgB1L,EAAEsK,OAAOtK,EAAE2L,WAAWxE,WACtCyE,KAAM5L,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAE1B0C,QAAS7J,EAAEC,SAASkH,WACpB0E,SAAU7L,EAAEC,SAASkH,WACrB2E,KAAM9L,EAAEC,SAASkH,WAKjB4E,YAAa/L,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAEjC6E,cAAehM,EAAEC,SAASoI,WAAWlB,WAErC8E,UAAWjM,EAAEqH,UAAUF,WAEvB+E,wBAAyBlM,EAAEC,SAASoI,WAAWlB,WAE/CgF,sBAAuBnM,EAAEC,SAASoI,WAAWlB,WAE7CiB,SAAUpI,EAAEC,SAASoI,WAAWlB,WAEhCiF,aAAcpM,EAAEiI,SAASI,WAAWlB,WAEpCkF,UAAWrM,EAAEC,SAASoI,WAAWlB,WAEjCmF,aAActM,EAAEqH,UAAUF,WAE1BoF,aAAcvE,GAAoBK,WAAWlB,WAE7CqF,aAAcxM,EAAEC,SAASoI,WAAWlB,aAGzBsF,GAAgBlC,GAC1BmC,KAAK,CACJpE,gBAAgB,EAChBc,WAAW,EACXG,WAAW,EACXZ,OAAO,IAERgE,MACC3M,EAAE2G,OAAO,CACP2B,eAAgBtI,EAAEC,SAASoI,WAAWlB,WACtCyF,SAAU5M,EAAEC,SAASoI,WAAWlB,WAChCwB,MAAO3I,EAAEC,SAASoI,WAAWlB,WAC7B0F,cAAe7M,EAAEqH,UAAUF,WAC3BvH,MAAOI,EAAEiI,SAASd,WAClBlG,SAAUuF,GAA4B6B,cAI/ByE,GAAqBvC,GAAoBoC,MACpD3M,EAAE2G,OAAO,CACP1F,SAAUuF,GAA4B6B,cAI7B0E,GAAsBxC,GAAoBoC,MACrD3M,EAAE2G,OAAO,CACP1F,SAAUuF,GAA4B6B,cAc7B2E,GAAoBhN,EAAE2G,OAAO,CACxC2B,eAAgBtI,EAAEC,SAClBgN,QAASjN,EAAEC,SACXyK,SAAU1K,EAAEkH,MAAMlH,EAAEC,UACpBiN,YAAalN,EAAEqH,UACf8F,SAAUnN,EAAEqH,UACZ+F,UAAWpN,EAAEqH,UACbsB,MAAO3I,EAAEC,SACTmJ,UAAWpJ,EAAEC,SACbsJ,UAAWvJ,EAAEC,WAIFoN,GAAyBrN,EAAE2G,OAAO,CAC7C2G,IAAKtN,EAAEC,SACPwK,KAAMzK,EAAEC,SACRsN,IAAKvN,EAAEC,SACP4C,YAAa7C,EAAEC,SAASkH,WACxBiC,UAAWpJ,EAAEC,SACbsJ,UAAWvJ,EAAEC,SACbuN,MAAOxN,EAAEiI,SACTwF,SAAUzN,EAAEiI,WAIDyF,GAAenD,GACzBoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZE,cAAc,EACdI,UAAU,EACVxG,aAAa,EACba,iBAAiB,EACjByF,WAAW,EACXxF,MAAM,EACNC,MAAM,EACNqE,SAAS,EACTgC,UAAU,EACVC,MAAM,EACN7G,kBAAkB,IAEnB8E,WAAU,SAAC6D,+BACV,OAAAC,EAAAA,EAAA,CAAA,EACKD,GAAG,CACN1M,MAAgB,UAAT0M,EAAI1M,aAAK,IAAAiB,EAAAA,EAAImE,GAAOpF,MAAMsD,QACjCmG,WAA0B,QAAdtH,EAAAuK,EAAIjD,kBAAU,IAAAtH,EAAAA,EAAI,KAC9BwH,aAAkC,QAApB9G,EAAA6J,EAAI/C,oBAAgB,IAAA9G,EAAAA,EAAA,KAClCkH,SAA0B,QAAhB5E,EAAAuH,EAAI3C,gBAAY,IAAA5E,EAAAA,EAAA,CAAC,CAAEmB,MAAO,CAAEC,QAAS,IAAMC,OAAQ,CAAED,QAAS,MACxEhD,YAAgC,QAAnBqJ,EAAAF,EAAInJ,mBAAe,IAAAqJ,EAAAA,EAAAxH,GAAO7B,YAAYD,QACnDc,wBAAiByI,EAAAH,EAAItI,+BAAmBgB,GAAOhB,gBAAgBd,QAC/De,KAAkB,QAAZyI,EAAAJ,EAAIrI,YAAQ,IAAAyI,EAAAA,EAAA1H,GAAOf,KAAKf,QAC9BgB,KAAc,QAARyI,EAAAL,EAAIpI,YAAI,IAAAyI,EAAAA,EAAI3H,GAAOd,KAAKhB,QAC9BqF,QAAwB,QAAfqE,EAAAN,EAAI/D,eAAW,IAAAqE,EAAAA,OAAAhJ,EACxB2G,iBAAUsC,EAAAP,EAAI/B,6BAAY3G,EAC1B4G,aAAMsC,EAAAR,EAAI9B,yBAAQ5G,EAClBD,iBAAsC,UAApB2I,EAAI3I,wBAAgB,IAAAoJ,EAAAA,OAAInJ,GAE9C,IACCoJ,OAAM,WAAM,MAAC,CACZpN,MAAOoF,GAAOpF,MAAMsD,QACpBmG,WAAY,KACZE,aAAc,KACdI,SAAU,CAAC,CAAEzD,MAAO,CAAEC,QAAS,IAAMC,OAAQ,CAAED,QAAS,MACxDhD,YAAa6B,GAAO7B,YAAYD,QAChCc,gBAAiBgB,GAAOhB,gBAAgBd,QACxCe,KAAMe,GAAOf,KAAKf,QAClBgB,KAAMc,GAAOd,KAAKhB,QAClBqF,aAAS3E,EACT2G,cAAU3G,EACV4G,UAAM5G,EACND,sBAAkBC,MAGTqJ,GAAehE,GACzBoD,KAAK,CACJ1B,WAAW,EACXD,eAAe,EACfhB,SAAS,EACTqB,WAAW,EACXH,yBAAyB,EACzBC,uBAAuB,EACvB/D,UAAU,EACVgE,cAAc,IAEfrC,WAAU,SAAC6D,uBAAQ,cACfA,GAAG,CACN1M,MAAO,GACP+K,UAA4B,QAAjB9J,EAAAyL,EAAI3B,iBAAa,IAAA9J,GAAAA,EAC5B6J,cAAgC,QAAjB3I,EAAAuK,EAAI5B,qBAAa,IAAA3I,EAAAA,EAAI,KACpC2H,QAAwB,QAAfjH,EAAA6J,EAAI5C,eAAW,IAAAjH,EAAAA,EAAA,KACxBsI,UAAwB,UAAbuB,EAAIvB,iBAAS,IAAAhG,EAAAA,EAAI,WAC5B6F,wBAAwD,QAA/B4B,EAAAF,EAAI1B,+BAA2B,IAAA4B,EAAAA,EAAA,KACxD3B,sBAAoD,UAA7ByB,EAAIzB,6BAAyB,IAAA4B,EAAAA,EAAA,KACpD3F,iBAAU4F,EAAAJ,EAAIxF,wBAAY,KAC1BgE,aAAkC,UAApBwB,EAAIxB,oBAAgB,IAAA6B,EAAAA,EAAA,OAEnCK,OAAM,WAAM,MAAC,CACZpN,MAAO,GACP+K,WAAW,EACXD,cAAe,KACfhB,QAAS,KACTqB,UAAW,WACXH,wBAAyB,KACzBC,sBAAuB,KACvB/D,SAAU,KACVgE,aAAc,MAGLoC,GAAuBjE,GACjCoD,KAAK,CACJzM,OAAO,IAER6I,WAAU,SAAC6D,SAAQ,OACfC,EAAAA,EAAA,CAAA,EAAAD,GACH,CAAA1M,MAAgB,QAATiB,EAAAyL,EAAI1M,aAAK,IAAAiB,EAAAA,EAAI,mCAErBmM,OAAM,WAAM,MAAC,CACZpN,MAAO,kCAGEuN,GAAmBlE,GAC7BoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZ6B,cAAc,EACd3B,cAAc,EACdpG,aAAa,EACbsG,WAAW,EACXlG,OAAO,EACPC,kBAAkB,EAClBC,mBAAmB,EACnBvB,OAAO,EACP+I,cAAc,EACd1C,SAAS,EACTgC,UAAU,EACVC,MAAM,EACN7G,kBAAkB,IAEnB8E,WAAU,SAAC6D,mCACJc,EACDb,EAAAA,EAAA,CAAA,EAAAD,IACH1M,MAAgB,UAAT0M,EAAI1M,aAAK,IAAAiB,EAAAA,EAAI,gBACpBqK,aAAgD,QAAlCzI,EAAoB,QAApBV,EAAAuK,EAAIpB,oBAAgB,IAAAnJ,EAAAA,EAAAuK,EAAIjD,kBAAU,IAAA5G,EAAAA,EAAI,KACpD8G,aAA8B,QAAhBxE,EAAAuH,EAAI/C,oBAAY,IAAAxE,EAAAA,EAAI,KAClC5B,YAA4B,QAAfqJ,EAAAF,EAAInJ,mBAAW,IAAAqJ,EAAAA,EAAI,GAChCjJ,cAAOkJ,EAAAH,EAAI/I,qBAAS,EACpBC,yBAAkBkJ,EAAAJ,EAAI9I,gCAAoB,EAC1CC,kBAA4C,QAAzBkJ,EAAAL,EAAI7I,yBAAqB,IAAAkJ,EAAAA,EAAA,EAC5CzK,MAAoB,UAAboK,EAAIpK,aAAS,IAAA0K,EAAAA,EAAA,GACpB3B,aAAkC,UAApBqB,EAAIrB,oBAAgB,IAAA4B,EAAAA,EAAA,CAChC7K,MAAOrB,EAAOe,UACd8E,gBAAgB,EAChB5G,MAAO,gBACPuD,YAAa,GAEfoF,QAAwB,QAAfuE,EAAAR,EAAI/D,eAAW,IAAAuE,EAAAA,OAAAlJ,EACxB2G,iBAAUwC,EAAAT,EAAI/B,6BAAY3G,EAC1B4G,KAAc,UAAR8B,EAAI9B,YAAI,IAAA6C,EAAAA,OAAIzJ,EAClBD,iBAA0C,QAAxB2J,EAAAhB,EAAI3I,wBAAoB,IAAA2J,EAAAA,OAAA1J,IAO5C,OAJsB,MAAlB0I,EAAIjD,YAAyC,KAAnBiD,EAAIjD,aAChC+D,EAAO/D,WAAa,MAGf+D,CACT,IACCJ,OAAM,WAAM,MAAC,CACZpN,MAAO,gBACPsL,aAAc,KACd3B,aAAc,KACdpG,YAAa,GACbI,MAAO,EACPC,iBAAkB,EAClBC,kBAAmB,EACnBvB,MAAO,GACP+I,aAAc,CACZjJ,MAAOrB,EAAOe,UACd8E,gBAAgB,EAChB5G,MAAO,gBACPuD,YAAa,GAEfoF,aAAS3E,EACT2G,cAAU3G,EACV4G,UAAM5G,EACND,sBAAkBC,MAGhB,SAAU2J,GAAuDjB,GACrE,IAAMkB,EAAMjB,EAAA,CAAA,EAAoBD,GAShC,OAPCmB,OAAOC,KAAKF,GAA2BG,SAAQ,SAACC,GAC/C,IAAMjJ,EAAQ6I,EAAOI,GACjBjJ,gBACK6I,EAAOI,EAElB,IAEOJ,CACT,CAEO,IAAMK,GAAkB5E,GAC5BoD,KAAK,CACJzM,OAAO,EACPkK,cAAc,EACdtI,cAAc,EACdiI,WAAW,EACXF,cAAc,EACdhB,SAAS,EACTgC,UAAU,EACVC,MAAM,IAEP/B,WAAU,SAAC6D,qBAAQ,OACfC,EAAAA,EAAA,GAAAD,GACH,CAAA1M,MAAoB,QAAbiB,EAAAyL,EAAI1M,aAAS,IAAAiB,EAAAA,EAAAoC,GAAerD,MAAMsD,QACzC4G,qBAAc/H,EAAAuK,EAAIxC,iCAAgBlG,EAClCpC,aAA8B,UAAhB8K,EAAI9K,oBAAY,IAAAiB,EAAAA,OAAImB,EAClC2F,aAA8B,QAAhBxE,EAAAuH,EAAI/C,oBAAY,IAAAxE,EAAAA,EAAI,KAClCwD,QAAoB,QAAXiE,EAAAF,EAAI/D,eAAO,IAAAiE,EAAAA,OAAI5I,EACxB2G,SAAsB,QAAZkC,EAAAH,EAAI/B,gBAAQ,IAAAkC,EAAAA,OAAI7I,EAC1B4G,KAAkB,QAAZkC,EAAAJ,EAAI9B,YAAQ,IAAAkC,EAAAA,OAAA9I,OAEnBoJ,OAAM,WAAM,MAAC,CACZpN,MAAOqD,GAAerD,MAAMsD,QAC5B4G,kBAAclG,EACdpC,kBAAcoC,EACd2F,aAAc,KACdhB,aAAS3E,EACT2G,cAAU3G,EACV4G,UAAM5G,MAGGkK,GAAyB7E,GACnCoD,KAAK,CACJzM,OAAO,EACPkK,cAAc,EACdtI,cAAc,EACd+H,cAAc,EACdE,WAAW,EACXlB,SAAS,EACTgC,UAAU,EACVC,MAAM,IAGP/B,UAAU8E,IACVP,OAAM,WAAM,OAAG,KAELe,GAAe9E,GACzBoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZlG,aAAa,EACbI,OAAO,EACPC,kBAAkB,EAClBC,mBAAmB,EACnBC,aAAa,EACbI,aAAa,EACbiG,UAAU,EACVvI,cAAc,EACd+H,cAAc,EACdhB,SAAS,EACTgC,UAAU,EACV5G,kBAAkB,IAEnB8E,WAAU,SAAC6D,iCAAQ,OACfC,EAAAA,EAAA,CAAA,EAAAD,GACH,CAAA1M,cAAOiB,EAAAyL,EAAI1M,qBAASiF,GAAejF,MAAMsD,QACzCmG,WAA0B,QAAdtH,EAAAuK,EAAIjD,kBAAU,IAAAtH,EAAAA,EAAI,KAC9BoB,YAAgC,QAAnBV,EAAA6J,EAAInJ,mBAAe,IAAAV,EAAAA,EAAA,EAChCc,MAAoB,QAAbwB,EAAAuH,EAAI/I,aAAS,IAAAwB,EAAAA,EAAA,EACpBvB,iBAAsC,QAApBgJ,EAAAF,EAAI9I,wBAAgB,IAAAgJ,EAAAA,EAAI,EAC1C/I,kBAAwC,QAArBgJ,EAAAH,EAAI7I,yBAAiB,IAAAgJ,EAAAA,EAAI,EAC5C/I,YAC6B,kBAApB4I,EAAI5I,YAA4B4I,EAAI5I,YAAcmB,GAAenB,YAAYR,QACtFY,oBAAa4I,EAAAJ,EAAIxI,2BAAerE,EAAYsB,KAC5CgJ,SAAsB,QAAZ4C,EAAAL,EAAIvC,gBAAQ,IAAA4C,EAAAA,OAAI/I,EAC1BpC,aAAkC,QAApBoL,EAAAN,EAAI9K,oBAAgB,IAAAoL,EAAAA,OAAAhJ,EAClC2F,aAAkC,QAApBsD,EAAAP,EAAI/C,oBAAgB,IAAAsD,EAAAA,EAAA,KAClCtE,gBAASuE,EAAAR,EAAI/D,4BAAW3E,EACxB2G,SAAsB,UAAZ+B,EAAI/B,gBAAQ,IAAAwC,EAAAA,OAAInJ,EAC1BD,iBAA0C,QAAxB0J,EAAAf,EAAI3I,wBAAoB,IAAA0J,EAAAA,OAAAzJ,OAE3CoJ,OAAM,WAAM,MAAC,CACZpN,MAAOiF,GAAejF,MAAMsD,QAC5BmG,WAAY,KACZlG,YAAa,EACbI,MAAO,EACPC,iBAAkB,EAClBC,kBAAmB,EACnBC,YAAamB,GAAenB,YAAYR,QACxCY,YAAarE,EAAYsB,KACzBgJ,cAAUnG,EACVpC,kBAAcoC,EACd2F,aAAc,KACdhB,aAAS3E,EACT2G,cAAU3G,EACVD,sBAAkBC,MAGToK,GAAe/E,GACzBoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZ6B,cAAc,EACd3B,cAAc,EACdpG,aAAa,EACbI,OAAO,EACPC,kBAAkB,EAClBC,mBAAmB,EACnBC,aAAa,EACb+F,WAAW,EACX3F,aAAa,EACbwG,MAAM,EACN/B,SAAS,EACTgC,UAAU,EACVC,MAAM,EACN7G,kBAAkB,EAClBE,YAAY,IAEb4E,WAAU,SAAC6D,GAAgC,OAAAiB,GAAoBjB,MAC/DU,OAAM,WAAM,OAAG,KAELiB,GAAsBhF,GAChCoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZE,cAAc,EACdI,UAAU,EACVxG,aAAa,EACba,iBAAiB,EACjByF,WAAW,EACXxF,MAAM,EACNC,MAAM,EACNqE,SAAS,EACTgC,UAAU,EACVC,MAAM,EACN7G,kBAAkB,IAEnB8E,WAAU,SAAC6D,GACV,IAAMkB,EAAMjB,EAAA,CAAA,EAAgCD,GAc5C,OAbIkB,EAAOrK,cAAgB6B,GAAO7B,YAAYD,gBACrCsK,EAAOrK,YAEZqK,EAAOxJ,kBAAoBgB,GAAOhB,gBAAgBd,gBAC7CsK,EAAOxJ,gBAEZwJ,EAAOvJ,OAASe,GAAOf,KAAKf,gBACvBsK,EAAOvJ,KAEZuJ,EAAOtJ,OAASc,GAAOd,KAAKhB,gBACvBsK,EAAOtJ,KAGTqJ,GAAoBC,EAC7B,IACCR,OAAM,WAAM,OAAG,KAELkB,GAAkBjF,GAC5BoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZE,cAAc,EACdpG,aAAa,EACba,iBAAiB,EACjBC,MAAM,EACNC,MAAM,EACNR,aAAa,EACbY,aAAa,EACbmF,WAAW,EACXlB,SAAS,EACTgC,UAAU,EACVC,MAAM,EACN7G,kBAAkB,IAEnB8E,WAAU,SAAC6D,GAAQ,OAAAiB,GAAoBjB,MACvCU,OAAM,WAAM,OAAG,KAELmB,GAAuBlF,GACjCoD,KAAK,CACJzM,OAAO,IAER6I,WAAU,SAAC6D,GAEV,OAAOiB,GADKhB,EAAA,CAAA,EAAgCD,GAE9C,IACCU,OAAM,WAAM,OAAG,KAELoB,GAAuBnF,GACjCoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZ6B,cAAc,EACd3B,cAAc,EACdpG,aAAa,EACbI,OAAO,EACPC,kBAAkB,EAClBC,mBAAmB,EACnBvB,OAAO,EACP+I,cAAc,EACd1C,SAAS,EACTgC,UAAU,EACVC,MAAM,EACN7G,kBAAkB,IAEnB8E,WAAU,SAAC6D,SACJkB,EAAMjB,EAAA,CAAA,EAAgCD,GAoC5C,OAnC0B,OAAtBkB,EAAOnE,mBACFmE,EAAOnE,WAEY,OAAxBmE,EAAOtC,qBACFsC,EAAOtC,aAEY,OAAxBsC,EAAOjE,qBACFiE,EAAOjE,aAEW,KAAvBiE,EAAOrK,oBACFqK,EAAOrK,YAEK,IAAjBqK,EAAOjK,cACFiK,EAAOjK,MAEgB,IAA5BiK,EAAOhK,yBACFgK,EAAOhK,iBAEiB,IAA7BgK,EAAO/J,0BACF+J,EAAO/J,kBAEa,aAAzB5C,EAAA2M,EAAOtL,4BAAOmM,gBACTb,EAAOtL,MAIdsL,EAAOvC,cACPuC,EAAOvC,aAAajJ,QAAUrB,EAAOe,YACE,IAAvC8L,EAAOvC,aAAazE,gBACU,kBAA9BgH,EAAOvC,aAAarL,OACgB,IAApC4N,EAAOvC,aAAa9H,oBAEbqK,EAAOvC,aAGTsC,GAAoBC,EAC7B,IACCR,OAAM,WAAM,OAAG,KAEItO,EAAE2G,OAAO,CAC7BiJ,SAAU5P,EAAEC,SACZ4P,QAAS7P,EAAEC,SACX6P,YAAa9P,EAAEC,SACf8P,UAAW/P,EAAEC,SACbmJ,UAAWpJ,EAAEC,SACbsJ,UAAWvJ,EAAEC,SACbkN,SAAUnN,EAAEqH,YAIP,UAAM2I,GAAsBzF,GAChCoD,KAAK,CACJ7B,MAAM,EAENjC,SAAS,EACTgC,UAAU,EACVR,UAAU,EACVrG,aAAa,EACblC,cAAc,EACd2I,yBAAyB,IAE1B1B,UAAU8E,IACVP,OAAM,WAAM,MAAC,CAAE,CAAC,ICjlCN2B,GAAqBC,GAC/BvC,KAAK,CAEJhD,YAAY,EACZE,cAAc,EACd7F,aAAa,EACb6E,SAAS,EACTgC,UAAU,EACVC,MAAM,EACNxG,iBAAiB,EACjBL,kBAAkB,EAClB8F,WAAW,EAEXO,QAAQ,EACRR,QAAQ,EACR5J,OAAO,EACPqK,WAAW,EACX9G,aAAa,EACbc,MAAM,EACNqG,MAAM,EAENpG,MAAM,EACNgG,8BAA8B,IAE/BzB,UAAUoG,IACV7B,OAAM,WAAM,OAAG,KAIL8B,GAAqBF,GAC/BvC,KAAK,CAEJhD,YAAY,EACZE,cAAc,EACd7F,aAAa,EACb6E,SAAS,EACTgC,UAAU,EACVC,MAAM,EACNf,WAAW,EACXzF,iBAAiB,EACjBL,kBAAkB,EAElBqG,QAAQ,EACRpK,OAAO,EACPqK,WAAW,EACX9G,aAAa,EACbc,MAAM,EACNqG,MAAM,EAENpG,MAAM,EACNgG,8BAA8B,IAE/B6E,SAASrQ,EAAEsQ,OACXvG,WAAU,SAACwG,GACV,IAAMC,EAAY,CAChB,aACA,eACA,cACA,UACA,WACA,OACA,kBACA,YACA,+BACA,SACA,QACA,YACA,cACA,OACA,QAGIC,EAA4C,CAAA,EAC5CC,EAAYH,EA0BlB,OAxBAxB,OAAO4B,QAAQD,GAAWzB,SAAQ,SAAC9M,OAAC+M,EAAG/M,EAAA,GAAE8D,EAAK9D,EAAA,GACvCqO,EAAUzK,SAASmJ,KACV,SAARA,EACFuB,EAAwB,MAAIxK,EAE5BwK,EAAiBvB,GAAOjJ,SAEnByK,EAAUxB,GAErB,IAEIH,OAAOC,KAAKyB,GAAkBd,OAAS,IACzCe,EAAUlF,6BACLqC,EAAAA,EAAA,CAAA,EAAE6C,EAAUlF,8BAAwE,CAAA,GACpFiF,SAI2BvL,IAA9BwL,EAAUpL,gBACZoL,EAAUnF,UAAYmF,EAAUpL,qBACCJ,IAAxBwL,EAAUnF,YACnBmF,EAAUpL,gBAAkBoL,EAAUnF,WAGjC4E,GAAsBO,EAC/B,IACCpC,OAAM,WAAM,OAAG,KAELsC,GAAsB,SAACL,GAClC,IAAMC,EAAgBK,EAAAA,EAAA,GAAA9B,OAAOC,KAAKkB,GAAsBY,QAAM,GAAA,CAAE,OAAQ,aAClEpC,EAAkC,CAAA,EAqCxC,OAlCAK,OAAO4B,QAAQJ,GAAMtB,SAAQ,SAAC9M,OAAC+M,EAAG/M,EAAA,GAAE8D,EAAK9D,EAAA,GACnCqO,EAAUzK,SAASmJ,KACrBR,EAAOQ,GAAOjJ,EAElB,IAI+C,iBAAtCsK,EAAK/E,8BAC0B,OAAtC+E,EAAK/E,8BAELuD,OAAO4B,QAAQJ,EAAK/E,8BAAyDyD,SAC3E,SAAC9M,OAAC+M,EAAG/M,EAAA,GAAE8D,EAAK9D,EAAA,GACNqO,EAAUzK,SAASmJ,KACT,UAARA,EACFR,EAAa,KAAIzI,EAEjByI,EAAOQ,GAAOjJ,EAGpB,SAKqBf,IAArBwJ,EAAOnD,gBAAsDrG,IAA3BwJ,EAAOpJ,gBAC3CoJ,EAAOpJ,gBAAkBoJ,EAAOnD,eACIrG,IAA3BwJ,EAAOpJ,sBAAsDJ,IAArBwJ,EAAOnD,YACxDmD,EAAOnD,UAAYmD,EAAOpJ,wBAIrBoJ,EAAOlD,6BAEPkD,CACT,EC7IaqC,KAAa5O,GAAA,CAAA,GACvBhC,EAAeO,SAAS,EACzByB,GAAChC,EAAemG,SAAS,EACzBnE,GAAChC,EAAeyB,aAAa,EAC7BO,GAAChC,EAAe6Q,kBAAkB,EAClC7O,GAAChC,EAAeM,SAAS,EACzB0B,GAAChC,EAAeS,cAAc,EAC9BuB,GAAChC,EAAeU,YAAY,EAC5BsB,GAAChC,EAAeW,SAAS,EACzBqB,GAAChC,EAAeQ,UAAU,MAGfsQ,GAAiB,CAC5B,2BACA,sBACA,wBACA,yBACA,sBACA,6BACA,kBACA,oBACA,qEAGWC,GAAiBL,EAAA,CAC5B,WACA,aACA,kBACA,0EACA,YACA,cACA,mBACA,gBACA,kBACA,aACA,4EACA,gBACA,uBACA,cACA,aACA,aACA,WACA,WACA,aACA,kBACA,YACA,YACA,oBACA,yBACA,kBACA,mBACGI,OAGQE,GAA4BN,EAAA,CACvC,WACA,aACA,kBACA,0EACA,YACA,cACA,mBACA,gBACA,kBACA,aACA,4EACA,gBACA,uBACA,cACA,aACA,aACA,WACA,aACA,kBACA,YACA,YACA,oBACA,yBACA,kBACA,mBACGI,OAGQG,GAAyB,CACpC,WACA,aACA,0EACA,YACA,cACA,mBACA,gBACA,kBACA,aACA,4EACA,gBACA,uBACA,cACA,aACA,cAGWC,GAAgB,8BAEhBC,GACX,wJAEWC,GACX,kIAEWC,GACX,wLAEWC,GAAiB,+BAEjBC,GAAqB,CAChCH,GACAD,GACAE,GACAC,IAGWE,GAA2B,CACtCJ,GACAD,GACAE,GACAC,IAGWG,GAA6C,CACxDC,EAAG,WACHC,GAAI,gBACJC,IAAK,aACLC,GAAI,gBACJC,IAAK,aACLC,GAAI,gBACJC,GAAI,cACJC,IAAK,aACLC,GAAI,kBACJC,GAAI,mBACJC,GAAI,yBACJC,IAAK,oBACLC,IAAK,mBAGMC,GAAqB,CAChC,0GACA,6HAGWC,GAAW,QAEXC,GAAY,SAACC,GAAuB,OAAAA,EAAKF,EAAS,EAEzDG,GAAmBF,GAAU,KAC7BG,GAAuB,CAC3BC,UAAW,GACXC,cAAeH,GACfI,eAAgBJ,GAChBpB,mBAAkBA,GAClByB,UAAU,GAGCC,GAAa,CACxBC,WAAShQ,GAAA,CAAA,EACPA,GAAClD,EAAeyB,YAAamR,GAC7B1P,GAAClD,EAAe6Q,iBAAkB+B,GAClC1P,GAAClD,EAAeM,QAASsS,GACzB1P,GAAAmB,QAAS,CACPwO,UAAW,GACXC,cAAeH,GACfI,eAAgBJ,GAChBpB,mBAAkBA,GAClByB,UAAU,GAEb9P,IACDiQ,oBAAqBR,GACrBS,gBAAiBX,GAAU,GAC3BY,UAAW,SAAUC,EAAkBC,GACrC,YADqC,IAAAA,IAAAA,EAA6ChC,IAC3EgC,EAAeC,MAAK,SAACC,GAAU,OAAAA,EAAMC,KAAKJ,EAAX,GACvC,GAGGK,GAA2B9T,EAC9BkH,MAAMlH,EAAEsQ,OACRnJ,WACA4M,QACC,SAACC,GACC,OAAKA,GAGEA,EAAUC,OACf,SAACC,GAAa,OAAAA,aAAoBC,QAA8B,iBAAbD,CAAqB,GAE5E,GACA,CACErE,QAAS,uDAIFuE,GAA2BpU,EAAE2G,OAAO,CAC/CwM,SAAUnT,EAAEqH,UAAUF,WACtB6L,UAAWhT,EAAEiI,SAASvD,IAAI,GAAGyC,WAC7B8L,cAAejT,EAAEiI,SAASvD,IAAI,GAAGyC,WACjC+L,eAAgBlT,EAAEiI,SAASvD,IAAI,GAAGyC,WAClCuK,mBAAoBoC,GAAyB3M,aAGlCkN,GAAmBrU,EAAE2G,OAAO,CACvC0M,UAAWrT,EAAEsK,OAAO8J,IAA0BjN,WAC9CmM,oBAAqBtT,EAAEiI,SAASvD,IAAI,GAAGyC,WACvCoM,gBAAiBvT,EAAEiI,SAASvD,IAAI,GAAGyC,aAIxBmN,GAAwB,SAACC,GACpC,OAAAA,EAASC,QAAO,SAACC,EAAeC,GAC9B,IACE,IAAMd,EAAQ,IAAIO,OAAOO,GACzBD,EAAIE,KAAKf,EACV,CAAC,MAAOzK,GACPyL,QAAQzL,MAAM,iCAA0BuL,EAAO,cAChD,CACD,OAAOD,CACR,GAAE,GARH,EAUI,SAAUI,GAAgBC,GAC9B,IAAMC,EAAe3B,GACrB,IAAK0B,EACH,OAAOC,EAWT,QARoC7P,IAAhC4P,EAAQxB,sBACVyB,EAAazB,oBAAsBV,GAAUkC,EAAQxB,2BAGvBpO,IAA5B4P,EAAQvB,kBACVwB,EAAaxB,gBAAkBX,GAAUkC,EAAQvB,mBAG9CuB,EAAQzB,UACX,OAAO0B,iBAGE7F,GACT,IAAM8F,EAAmBF,EAAQzB,UAAiDnE,GAE7E6F,EAAa1B,UAAUnE,KAC1B6F,EAAa1B,UAAUnE,GAAO,IAGhC,IAAM+F,EAAiBF,EAAa1B,UAAUnE,GAE9C,IAAiC,IAA7B8F,EAAgB7B,gBAClB8B,EAAe9B,UAAW,EAC1B8B,EAAejC,UAAY,EAC3BiC,EAAehC,cAAgB,EAC/BgC,EAAe/B,eAAiB,EAChC+B,EAAevD,mBAAqB,mBAIAxM,IAAlC8P,EAAgB/B,gBAClBgC,EAAehC,cAAgBL,GAAUoC,EAAgB/B,qBAGpB/N,IAAnC8P,EAAgB9B,iBAClB+B,EAAe/B,eAAiBN,GAAUoC,EAAgB9B,iBAGzC,CAAC,aACTjE,SAAQ,SAACiG,QACahQ,IAA3B8P,EAAgBE,KAClBD,EAAeC,GAASF,EAAgBE,GAE5C,IAEIF,EAAgBtD,qBAClBuD,EAAevD,mBAAqB4C,GAClCU,EAAgBtD,sBAnCtB,IAAK,IAAMxC,KAAO4F,EAAQzB,YAAfnE,GAwCX,OAAO6F,CACT,CC1Qa,ICrBDI,GDqBCC,GAAmBpV,EAAE2G,OAAO,CACvC/D,KAAM5C,EAAEC,SACR4G,MAAO7G,EAAEC,SACToV,OAAQ5I,GACR7M,MAAOI,EAAEiI,SAASd,WAClB3C,QAASxE,EAAEqH,UAAUF,WACrBtE,YAAa7C,EAAEC,SAASkH,WACxBmO,eAAgBtV,EAAEqH,UAAUF,WAC5BoO,iBAAkBvV,EAAEqH,UAAUF,WAC9B0C,QAAS7J,EAAEyG,MAAM,CAACzG,EAAEC,SAAUsG,KAAuBY,WACrDqO,SAAUpV,EAAe+G,aAGdsO,GAAoBzV,EAAE2G,OAAO,CACxC+O,QAAS1V,EAAEqH,UAAU7C,SAAQ,GAC7BmR,WAAY3V,EAAEqH,UAAU7C,SAAQ,GAChCoR,KAAM5V,EAAEkH,MAAMkO,IAAkBjO,cCrClC,SAAYgO,GACVA,EAAA,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,MAAA,QACAA,EAAA,OAAA,SACAA,EAAA,GAAA,KACAA,EAAA,SAAA,WACAA,EAAA,aAAA,cACD,CARD,CAAYA,KAAAA,GAQX,CAAA,IAEM,IAGKU,2BAHCC,GAAqB,SAACC,GACjC,OAAAA,IAAWZ,GAAYa,QAAUD,IAAWZ,GAAYc,KAAxD,GAEF,SAAYJ,GACVA,EAAA,OAAA,SACAA,EAAA,QAAA,UACAA,EAAA,OAAA,SACAA,EAAA,WAAA,aACAA,EAAA,aAAA,eACAA,EAAA,iBAAA,mBACAA,EAAA,kBAAA,oBACAA,EAAA,mBAAA,qBACAA,EAAA,SAAA,WACAA,EAAA,UAAA,YACAA,EAAA,OAAA,SACAA,EAAA,aAAA,eACAA,EAAA,QAAA,UACAA,EAAA,MAAA,OACD,CAfD,CAAYA,KAAAA,GAeX,CAAA,ICrBM,IAwBKK,GAxBCC,GAAsB,CAAC,SAAU,WAAY,SAAU,SAAU,WAEjEC,GAAyB,CACpC,SACA,wBACA,aACA,qBACA,UACA,oBACA,oBACA,oBACA,cACA,yBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,cACA,aACA,eAGF,SAAYF,GACVA,EAAA,QAAA,UACAA,EAAA,SAAA,UACD,CAHD,CAAYA,KAAAA,GAGX,CAAA,IAEY,IAAAG,GAAmBrW,EAAEK,WAAW8U,IAmBvC,SAAUmB,GACdC,GAEA,IAAMzF,EAAQyF,EAAOzF,MACfH,EAAU5B,OAAO4B,QAAQG,GAAO0F,KAAI,SAACrU,OAAC+M,EAAG/M,EAAA,GAAE8D,EAAK9D,EAAA,GACpD,OAAI8D,aAAiBjG,EAAEyW,WAEd,CAACvH,EAAKjJ,EAAMyQ,KAAKC,gBAEnB,CAACzH,OAAKhK,EACf,IAGA,OAAO6J,OAAO6H,YAAYjG,EAC5B,CAEO,IA4DKkG,GAQAC,GApECC,GAAoB/W,EAC9B2G,OAAO,CACNqQ,eAAgBhX,EAAEC,SAASkH,WAC3B8P,QAASjX,EAAEC,SAASkH,WACpBvF,WAAY5B,EAAEqH,UAAUF,aAEzByB,GAAG5I,EAAEqH,WAIK6P,GAAkBlX,EAAE2G,OAAO,CACtCwQ,OAAQnX,EAAEC,SACVmX,WAAYpX,EAAEqH,UAAUF,WACxBkQ,aAAcrX,EAAEC,SAASkH,WACzB6P,eAAgBhX,EAAEC,SAASkH,WAC3BvF,WAAY5B,EAAEqH,UAAUF,WACxBmQ,UAAWtX,EAAEsK,OAAOtK,EAAEsQ,OAAOnJ,WAC7BoQ,WAAYvX,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAChCqQ,YAAaxX,EAAEqH,UAAUF,WACzB8P,QAASjX,EAAEC,SAASkH,WACpBsQ,QAASzX,EAAEC,SAASkH,WACpBuQ,kBAAmB1X,EAAEsK,OAAOtK,EAAEsQ,OAAOnJ,aAK1BwQ,GAAmB3X,EAC7B2G,OAAO,CACNiR,MAAO5X,EAAEC,SACT4X,OAAQ7X,EAAEsK,OAAOtK,EAAEC,SAAU8W,MAE9B3S,WACA0T,IAAIZ,IAEMa,GAA0B/X,EAAEkH,MAAMyQ,IAAkBjT,IAAI,IA0BrE,SAAYmS,GACVA,EAAA,iBAAA,mBACAA,EAAA,aAAA,eACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,MAAA,OACD,CAND,CAAYA,KAAAA,GAMX,CAAA,IAED,SAAYC,GACVA,EAAA,wBAAA,0BACAA,EAAA,gBAAA,kBACAA,EAAA,aAAA,eACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UACAA,EAAA,MAAA,OACD,CAPD,CAAYA,KAAAA,GAOX,CAAA,QA2PWkB,GAzPCC,KAAwB9V,GAAA,CAAA,GAClChC,EAAeyB,YAAa,EAC7BO,GAAChC,EAAe6Q,iBAAkB,MAGvBkH,GAAqBlY,EAAE2G,OAAO,CACzCwR,WAAYnY,EAAEiI,SAASd,WACvBsQ,QAASzX,EAAEC,SAASkH,WACpBiR,YAAapY,EAAEC,SAASkH,WACxBkR,WAAYrY,EAAEC,SAASkH,aAKZmR,GAAwBJ,GAAmBvL,MACtD3M,EAAE2G,OAAO,CACP4R,iBAAkBvY,EAAEkH,MAAMlH,EAAEC,UAAUkH,cAI7BqR,GAA0BN,GAAmBvL,MACxD3M,EAAE2G,OAAO,CAEP8R,eAAgBzY,EAAEqH,UAAUF,WAC5BuR,eAAgB1Y,EAAEiI,SAASd,WAC3BwR,UAAW3Y,EAAEiI,SAASd,WACtB8P,QAASjX,EAAEyG,MAAM,CAACzG,EAAEC,SAAUD,EAAEiI,WAAWzD,QAAQ,GACnDoU,aAAc5Y,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GAAGyC,WACzC0R,YAAa7Y,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GAAGyC,WACxC2R,kBAAmB9Y,EAAEqH,UAAUF,WAC/B4R,gBAAiB/Y,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GAAGyC,WAAW3C,QAAQ4R,IAC/D4C,aAAchZ,EACXkH,MAAMlH,EAAEK,WAAWwW,KACnB1P,WACA3C,QAAQ,CACPqS,GAAa5T,iBACb4T,GAAa3T,aACb2T,GAAa1T,UACb0T,GAAaoC,QACbpC,GAAarT,QAGjB2T,OAAQnX,EAAEC,SAASkH,WACnB0Q,OAAQ7X,EACL2G,OAAO,CACNnC,QAASxE,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GACjCwU,MAAOlZ,EAAEqH,UAAUF,WACnBgS,YAAanZ,EAAEqH,UAAUF,aAE1BA,WACHiS,WAAYpZ,EAAEqH,UAAUF,WACxBkS,YAAarZ,EAAEyG,MAAM,CAACzG,EAAE6I,QAAQ,cAAe7I,EAAE6I,QAAQ,eAAe1B,WACxEmS,QAAStZ,EAAEsK,OAAOtK,EAAEsQ,OAAOnJ,cAMlBoS,GAAuBrB,GAAmBvL,MACrD3M,EAAE2G,OAAO,CAEP8R,eAAgBzY,EAAEqH,UAAUF,WAC5BuR,eAAgB1Y,EAAEiI,SAASd,WAC3BwR,UAAW3Y,EAAEiI,SAASd,WACtB8P,QAASjX,EAAEyG,MAAM,CAACzG,EAAEC,SAAUD,EAAEiI,WAAWzD,QAAQ,GACnDoU,aAAc5Y,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GAAGyC,WACzC0R,YAAa7Y,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GAAGyC,WACxC2R,kBAAmB9Y,EAAEqH,UAAUF,WAC/B4R,gBAAiB/Y,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GAAGyC,WAAW3C,QAAQ4R,IAC/D4C,aAAchZ,EACXkH,MAAMlH,EAAEK,WAAWwW,KACnB1P,WACA3C,QAAQ,CACPqS,GAAa5T,iBACb4T,GAAa3T,aACb2T,GAAa1T,UACb0T,GAAaoC,QACbpC,GAAarT,QAGjB2T,OAAQnX,EAAEC,SAASkH,WACnB0Q,OAAQ7X,EACL2G,OAAO,CACNnC,QAASxE,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GACjCwU,MAAOlZ,EAAEqH,UAAUF,WACnBgS,YAAanZ,EAAEqH,UAAUF,aAE1BA,WACHiS,WAAYpZ,EAAEqH,UAAUF,WACxBkS,YAAarZ,EAAEyG,MAAM,CAACzG,EAAE6I,QAAQ,cAAe7I,EAAE6I,QAAQ,eAAe1B,WACxEmS,QAAStZ,EAAEsK,OAAOtK,EAAEsQ,OAAOnJ,cAMlBqS,GAAiBtB,GAAmBvL,MAC/C3M,EAAE2G,OAAO,CACP/D,KAAM5C,EAAEC,SAAS8T,QAAO,SAAC9N,GAAU,OAACM,GAAqBkT,UAAUxT,GAAOyT,OAAvC,GAAgD,CACjF7J,QAAS,wEAAAtO,OAAwEwN,OAAO4K,OACtFxZ,GACAyZ,KAAK,SAETzC,OAAQnX,EAAEC,SACVwX,QAASzX,EAAEC,SACX4X,OAAQ7X,EAAE2G,OAAO,CACfnC,QAASxE,EAAEkH,MAAMlH,EAAEC,UAAUyE,IAAI,GACjCwU,MAAOlZ,EAAEqH,UAAUF,WACnBgS,YAAanZ,EAAEqH,UAAUF,aAE3BiS,WAAYpZ,EAAEqH,UAAUF,WACxBkS,YAAarZ,EAAEyG,MAAM,CAACzG,EAAE6I,QAAQ,cAAe7I,EAAE6I,QAAQ,eAAe1B,WACxE0S,UAAW7Z,EAAEqH,UAAUF,WACvB2S,aAAc9Z,EAAEC,SAASkH,WACzBqQ,YAAaxX,EAAEqH,UAAUF,WACzB4S,kBAAmB/Z,EAAEC,SAASkH,WAC9BmS,QAAStZ,EAAEsK,OAAOtK,EAAEsQ,OAAOnJ,WAC3BmQ,UAAWtX,EAAEsK,OAAOtK,EAAEsQ,OAAOnJ,WAC7BoQ,WAAYvX,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAChC6S,YAAaha,EAAEiI,SAASd,WACxB8S,eAAgBja,EAAEqH,UAAUF,WAC5B+S,iBAAkBla,EAAEC,SAASkH,cAMpBgT,GAAsBna,EAChC2G,OAAO,CACNyT,OAAQrC,GACRsC,QAASra,EAAEqH,UAAUF,WACrBvF,WAAY5B,EAAEqH,UAAUF,aAEzB2Q,IACC0B,GACG7L,KAAK,CACJwK,YAAY,EACZiB,YAAY,EACZC,aAAa,EACbhB,YAAY,EACZwB,WAAW,EACXC,cAAc,EACdE,aAAa,IAEdM,WAMDC,GAAkBva,EAAE2G,OAAO,CAC/B6T,IAAKxa,EAAEC,SAASkH,WAChBgQ,OAAQnX,EAAEC,SACViB,MAAOlB,EAAEC,SACTwa,OAAQza,EAAEkH,MAAMlH,EAAEC,YAGdya,GAAuB1a,EAAE2G,OAAO,CACpC0Q,aAAcrX,EAAEC,SAChBkX,OAAQnX,EAAEC,SACV+W,eAAgBhX,EAAEC,SAClB0a,WAAY3a,EAAEC,SACdiB,MAAOlB,EAAEC,SACTwa,OAAQza,EAAEkH,MAAMlH,EAAEC,YAGd2a,GAAsB5a,EAAE2G,OAAO,CACnC6T,IAAKxa,EAAEC,SAASkH,WAChB0T,aAAc7a,EAAEC,SAASkH,WACzBgQ,OAAQnX,EAAEC,SACViB,MAAOlB,EAAEC,SACTwa,OAAQza,EAAEkH,MAAMlH,EAAEC,UAClB6a,eAAgB9a,EACb2G,OAAO,CACNoU,iBAAkB/a,EAAEiI,SAASd,WAC7B6T,UAAWhb,EAAEiI,SAASd,WACtB8T,MAAOjb,EAAEiI,SAASd,WAClB+T,kBAAmBlb,EAAEqH,UAAUF,aAEhCA,WACHgU,kCAAmCnb,EAAEkH,MAAMlH,EAAEC,UAAUkH,aAGnDiU,GAAmBpb,EAAE2G,OAAO,CAChC6T,IAAKxa,EAAEC,SACPkX,OAAQnX,EAAEC,SAASkH,WACnBsT,OAAQza,EAAEkH,MAAMlH,EAAEC,UAClBob,QAASrb,EAAEC,WAGPqb,GAAYtb,EAAE2G,OAAO,CACzBqP,OAAQuE,GAAgBpT,WACxBvG,YAAa8Z,GAAqBvT,WAClCoU,WAAYX,GAAoBzT,WAChCqU,QAASJ,GAAiBjU,aAGtBsU,GAAkBzb,EAAE2G,OAAO,CAC/B6T,IAAKxa,EAAEC,SAASkH,WAChBgQ,OAAQnX,EAAEC,SACViB,MAAOlB,EAAEC,WAGLyb,GAAuB1b,EAAE2G,OAAO,CACpC0Q,aAAcrX,EAAEC,SAChBkX,OAAQnX,EAAEC,SACV+W,eAAgBhX,EAAEC,SAClB0a,WAAY3a,EAAEC,WAGV0b,GAAY3b,EAAE2G,OAAO,CACzBqP,OAAQyF,GAAgBtU,WACxBvG,YAAa8a,GAAqBvU,aAG9ByU,GAAY5b,EACf2G,OAAO,CACNkV,iBAAkB7b,EAAEqH,UAAUF,WAC9B2U,aAAc9b,EAAEqH,UAAUF,WAC1B4U,aAAc/b,EACXqH,UACAF,WACAyB,GACC5I,EAAE2G,OAAO,CACPqV,UAAWhc,EAAEC,SAASkH,WACtB8U,YAAajc,EAAEC,SAASkH,WACxB+U,oBAAqBlc,EAAEqH,UAAUF,WACjCgV,aAAcnc,EAAEiI,SAASd,WACzBiV,aAAcpc,EAAEiI,SAASd,cAG5BA,WACHkV,aAAcrc,EACXqH,UACAF,WACAyB,GACC5I,EAAE2G,OAAO,CACP2V,UAAWtc,EAAEC,SAASkH,WACtBoV,MAAOvc,EAAEC,SAASkH,WAClBqV,YAAaxc,EAAEC,SAASkH,WACxBsV,kBAAmBzc,EAAEqH,UAAUF,WAC/BuV,aAAc1c,EAAEiI,SAASd,WACzBwV,SAAU3c,EAAEqH,UAAUF,cAGzBA,aAEJA,YAEH,SAAY6Q,GACVA,EAAA,YAAA,cACAA,EAAA,OAAA,SACAA,EAAA,IAAA,MACAA,EAAA,IAAA,KACD,CALD,CAAYA,KAAAA,GAKX,CAAA,IAEY,IAmCD4E,GAnCCC,GAAkB7c,EAAE2G,OAAO,CACtCmW,YAAa9c,EACV2G,OAAO,CACNoW,MAAO/c,EAAEiI,SAASd,WAClB6V,kBAAmBhd,EAAEiI,SAASd,WAC9B8V,QAASjd,EAAEiI,SAASd,WACpB+V,oBAAqBld,EAAEiI,SAASd,aAEjCA,WACHgW,oBAAqBnd,EAClB2G,OAAO,CACNoW,MAAO/c,EAAEiI,SAASd,WAClB6V,kBAAmBhd,EAAEiI,SAASd,WAC9B8V,QAASjd,EAAEiI,SAASd,WACpB+V,oBAAqBld,EAAEiI,SAASd,aAEjCA,WACHiW,IAAKpd,EACF2G,OAAO,CACNoW,MAAO/c,EAAEiI,SAASd,WAClB6V,kBAAmBhd,EAAEiI,SAASd,WAC9B8V,QAASjd,EAAEiI,SAASd,WACpB+V,oBAAqBld,EAAEiI,SAASd,aAEjCA,WACHkW,IAAKrd,EACF2G,OAAO,CACNoW,MAAO/c,EAAEiI,SAASd,WAClB6V,kBAAmBhd,EAAEiI,SAASd,WAC9B8V,QAASjd,EAAEiI,SAASd,WACpB+V,oBAAqBld,EAAEiI,SAASd,aAEjCA,cAGL,SAAYyV,GACVA,EAAA,IAAA,MACAA,EAAA,KAAA,OACAA,EAAA,KAAA,MACD,CAJD,CAAYA,KAAAA,GAIX,CAAA,IAEY,IA6FDU,GAmBAC,GAhHCC,GAAexd,EAAE2G,OAAO,CACnCsQ,QAASjX,EAAEC,SACXwd,MAAOzd,EAAEqH,UAAU7C,SAAQ,GAC3BkZ,iBAAkB1d,EAAEqH,UAAUF,WAC9BwW,gBAAiB3d,EAAEK,WAAWuc,IAAkBpY,QAAQoY,GAAiBgB,KACzEC,cAAe7d,EAAEkH,MAAMlH,EAAEC,UAAUkH,WACnC2W,cAAe9d,EAAEkH,MAAMlH,EAAEC,UAAUkH,WACnC4W,UAAW/d,EACR2G,OAAO,CACNqX,cAAehe,EACZ2G,OAAO,CACNsX,YAAaje,EAAEC,SAASkH,WACxB+W,WAAYle,EAAEqH,UAAUF,aAEzBA,WACHgX,eAAgBne,EACb2G,OAAO,CACNsX,YAAaje,EAAEC,SAASkH,WACxB+W,WAAYle,EAAEqH,UAAUF,WACxBiX,gBAAiBpe,EAAEqH,UAAUF,WAC7BkX,WAAYre,EAAEC,SAASkH,WACvBmX,aAActe,EAAEC,SAAS2I,GAAG5I,EAAEkH,MAAMlH,EAAEC,WAAWkH,aAElDA,WACHoX,cAAeve,EAAEqH,UAAUF,WAC3BqX,YAAaxe,EAAEqH,UAAUF,WACzBjD,WAAYlE,EAAEqH,UAAUF,WACxBsX,UAAWze,EAAEqH,UAAUF,WACvBuX,WAAY1e,EAAEqH,UAAUF,WACxBwX,UAAW3e,EAAEqH,UAAUF,WACvByX,QAAS5e,EAAEqH,UAAUF,WACrB0X,QAAS7e,EAAEqH,UAAUF,WACrB1G,OAAQT,EAAEqH,UAAUF,aAErB3C,QAAQ,CACP+Z,eAAe,EACfC,aAAa,EACbta,YAAY,EACZua,WAAW,EACXG,SAAS,EACTF,YAAY,EACZC,WAAW,EACXE,SAAS,EACTpe,QAAQ,IAEZqe,aAAczI,GAAiB7R,QAAQ2Q,GAAY4J,OACnDC,aAAchf,EACX2G,OAAO,CACNsY,aAAcjf,EAAEkH,MAAMlH,EAAEC,UAAUkH,WAClC+X,eAAgBlf,EAAEkH,MAAMlH,EAAEC,UAAUkH,aAErC3C,QAAQ,CAAEya,aAAc9I,KAC3BgJ,OAAQnf,EACL2G,OAAO,CACNyW,IAAK9B,GAAUnU,WACfkW,IAAK1B,GAAUxU,WACfyU,UAAWA,GAAUzU,aAEtBA,WACHiY,WAAYvC,GAAgB1V,WAC5BiM,WAAYiB,GAAiBlN,WAC7BkY,WAAY5J,GAAkBtO,WAC9BkM,UAAWrT,EACR2G,QAAMtD,GAAA,CACLic,IAAKpH,GAAmB/Q,YACxB9D,GAAClD,EAAeO,QAASwX,GAAmB/Q,WAC5C9D,GAAClD,EAAemG,QAAS4R,GAAmB/Q,WAC5C9D,GAAClD,EAAeU,WAAYqX,GAAmB/Q,WAC/C9D,GAAClD,EAAeof,YAAarH,GAAmB/Q,WAChD9D,GAAClD,EAAeS,aAAcuZ,GAAoBhT,WAClD9D,GAAClD,EAAe6Q,iBAAkBwH,GAAwBrR,WAC1D9D,GAAClD,EAAeyB,YAAa4W,GAAwBrR,WACrD9D,GAAClD,EAAeM,QAAS8Y,GAAqBpS,WAC9C9D,GAAClD,EAAeW,QAASd,EAAEkH,MAAMsS,GAAec,WAAWnT,WAC3D9D,GAAClD,EAAeQ,SAAUuX,GAAmB/Q,WAC7C9D,KACDmc,SACAzL,QAAO,SAACxD,GAAS,OAAAxB,OAAOC,KAAKuB,GAAMZ,OAAS,IAAG,CAC9CE,QAAS,qDAEV1I,aAGQsY,GAAoB,WAAM,OAAAnJ,GAAkBkH,GAAc,GAUvE,SAAYF,GACVA,EAAA,SAAA,WACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,UAAA,YACAA,EAAA,SAAA,WACAA,EAAA,KAAA,OACAA,EAAA,YAAA,cACAA,EAAA,QAAA,UACAA,EAAA,IAAA,MACAA,EAAA,OAAA,SACAA,EAAA,WAAA,aACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,eAAA,cACAA,EAAA,MAAA,QACAA,EAAA,IAAA,KACD,CAjBD,CAAYA,KAAAA,GAiBX,CAAA,IAED,SAAYC,GACVA,EAAA,WAAA,YACD,CAFD,CAAYA,KAAAA,GAEX,CAAA,IAEY,IAgNDmC,GAhNCC,GAAqC,CAChDxf,EAAeO,OACfP,EAAeyB,WACfzB,EAAe6Q,gBACf7Q,EAAeS,YACfT,EAAeM,OACfN,EAAeyf,OACfzf,EAAe0f,eACf1f,EAAeof,WACfpf,EAAemG,OACfnG,EAAeU,UACfV,EAAeW,OACfX,EAAeQ,SAGJmf,KAAa/b,GAAA,CAAA,GACvB5D,EAAeO,QAAS,SACzBqD,GAAC5D,EAAeyB,YAAa,aAC7BmC,GAAC5D,EAAeM,QAAS,SACzBsD,GAAC5D,EAAe6Q,iBAAkB,mBAClCjN,GAAC5D,EAAeS,aAAc,eAC9BmD,GAAC5D,EAAeyf,QAAS,OACzB7b,GAAC5D,EAAe0f,gBAAiB,UACjC9b,GAAC5D,EAAeof,YAAa,UAC7Bxb,GAAC5D,EAAemG,QAAS,SACzBvC,GAAC5D,EAAeU,WAAY,YAC5BkD,GAAC5D,EAAeW,QAAS,SACzBiD,GAAC5D,EAAeQ,SAAU,cAC1BoD,GAACuZ,GAAeyC,QAAS,SACzBhc,GAACuZ,GAAe0C,KAAM,UAGlBC,GAAqB,CACzB,cACA,SACA,gBACA,qBACA,cACA,yBACA,qBACA,sBACA,qBACA,qBACA,yBACA,oBACA,QACA,aACA,iBACA,aACA,sBAoBWC,GAAgB,CAC3B,4CACA,4CACA,2CACA,yCACA,wCACA,0CACA,sBACA,wBACA,8BAGA,wBACA,6BACA,0BACA,0BACA,+BACA,gCACA,iCACA,kCACA,mCACA,mCACA,qCACA,kCACA,kCACA,kCACA,2BAGA,4BACA,+BACA,kCAGWC,KAAa9Z,GAAA,CAAA,GACvBlG,EAAe6Q,iBAAkBiP,GAClC5Z,GAAClG,EAAeyB,eAAc,qBAAwBqe,IAAmB,GACzE5Z,GAAClG,EAAeM,QAASwf,GACzB5Z,GAAClG,EAAemG,QAAS,CACvB,aACA,oBACA,aACA,iBACA,iBACA,qBACA,aACA,iBACA,eACA,aACA,aACA,kBAEFD,GAAClG,EAAeU,WArEY,CAC5B,4BACA,6BACA,6BACA,2BACA,yBACA,2BACA,0BACA,aACA,WACA,aACA,WACA,gBACA,mBACA,yBAwDAwF,GAAClG,EAAeO,QAAMmQ,EAAAA,EAAA,CACpB,qBACGoP,IAAkB,GAAA,CACrB,uBACA,8BACA,2BACD,GACD5Z,GAAClG,EAAeQ,SAAUuf,OAOtBE,GAAeD,GAAchgB,EAAeO,QAErC2f,KAAmBvS,GAAA,CAC9BwS,QAAS,KACRngB,EAAeO,QAAS0f,GACzBtS,GAAC3N,EAAeyB,YAAawe,GAAaG,QATd,SAACC,GAC7B,MAAO,mBAAmB3M,KAAK2M,KAAS,mBAAmB3M,KAAK2M,EAClE,IAQE1S,GAAC3N,EAAeM,QAAS2f,GACzBtS,GAAC3N,EAAeof,YAAaa,GAC7BtS,GAAC3N,EAAeS,aAAcwf,GAC9BtS,GAAC3N,EAAeyf,QAAS,CAAC,SAAU,UACpC9R,GAAC3N,EAAe0f,gBAAiB,CAAC,+BAClC/R,GAAC3N,EAAemG,QAAS6Z,GAAchgB,EAAemG,QACtDwH,GAAC3N,EAAeU,WAAYsf,GAAchgB,EAAeU,WACzDiN,GAAC3N,EAAeQ,SAAUwf,GAAchgB,EAAeQ,aAG5C8f,KAAY1S,GAAA,CAAA,GACtB5N,EAAeO,QAAS,mBAAYP,EAAeO,QACpDqN,GAAC5N,EAAeyf,QAAS,mBAAYzf,EAAeyf,QACpD7R,GAAC5N,EAAemG,QAAS,mBAAYnG,EAAemG,QACpDyH,GAAC5N,EAAeW,QAAS,mBAAYX,EAAeW,QACpDiN,GAAC5N,EAAeU,WAAY,mBAAYV,EAAeU,WACvDkN,GAAC5N,EAAeof,YAAa,mBAAYpf,EAAeof,YACxDxR,GAAC5N,EAAeS,aAAc,mBAAYT,EAAeS,aACzDmN,GAAC5N,EAAe0f,gBAAiB,mBAAY1f,EAAe0f,gBAC5D9R,GAAC5N,EAAe6Q,iBAAkB,0BAClCjD,GAAC5N,EAAeyB,YAAa,0BAC7BmM,GAAC5N,EAAeM,QAAS,eAAQN,EAAeM,OAAa,SAC7DsN,GAAC5N,EAAeQ,SAAU,eAAQR,EAAeQ,QAAc,aAGpD+f,GAAmB,IAAIlgB,IAA6B,CAC/DL,EAAeof,WACfpf,EAAeU,UACfV,EAAemG,OACfnG,EAAeO,OACfP,EAAeS,YACfT,EAAeW,OACfX,EAAeM,OACfN,EAAeQ,UAGJggB,KAAoB3S,GAAA,CAAA,GAC9B7N,EAAeW,SAAS,EACzBkN,GAAC7N,EAAeO,SAAS,EACzBsN,GAAC7N,EAAeU,YAAY,EAC5BmN,GAAC7N,EAAeof,aAAa,EAC7BvR,GAAC7N,EAAeyB,aAAa,EAC7BoM,GAAC7N,EAAeM,SAAS,EACzBuN,GAAC7N,EAAe6Q,kBAAkB,EAClChD,GAAC7N,EAAeS,cAAc,EAC9BoN,GAAC7N,EAAeQ,UAAU,MAGfigB,GAAe,CAC1B,SACA,cACA,cACA,eACA,QACA,YACA,oBACA,WACA,aACA,aACA,YACA,kBACA,uBACA,uBACA,uBACA,wBAOI,SAAUC,GAAoB1e,OAClCjB,EAAKiB,EAAAjB,MACLmC,EAAAlB,EAAA2e,iBAAAA,aAAmB,GAAEzd,EACrB0d,EAAe5e,EAAA4e,gBAMf,QAAK7f,IAIS,wBAAVA,MAIA6f,IAAoBA,EAAgBhb,SAAS7E,KAI1C0f,GAAarf,OAAOuf,GAAkBnN,MAAK,SAACqN,GAAgB,OAAA9f,EAAM6E,SAASib,EAAY,KAChG,EA3BA,SAAYtB,GACVA,EAAA,WAAA,aACAA,EAAA,OAAA,QACD,CAHD,CAAYA,KAAAA,GAGX,CAAA,IA0BM,IAKKuB,GAcAC,GAaAC,GA4EAC,GA8CAC,GAsCAC,GAsBAC,GAkBAC,GA+BAC,GAWAC,GAoBAC,GA6BAC,GAqCAC,GAYAC,GAuBAC,GA3YCC,GAAgB,IAAIxhB,IAAI,CAAC,QAAS,SAAU,sBAKzD,SAAYygB,GAIVA,EAAA,cAAA,eAIAA,EAAA,aAAA,aACD,CATD,CAAYA,KAAAA,GASX,CAAA,IAKD,SAAYC,GACVA,EAAAA,EAAA,SAAA,MAAA,WACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,YAAA,KAAA,cACAA,EAAAA,EAAA,aAAA,KAAA,eACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,WAAA,KAAA,aACAA,EAAAA,EAAA,eAAA,KAAA,gBACD,CARD,CAAYA,KAAAA,GAQX,CAAA,IAKD,SAAYC,GAIVA,EAAA,aAAA,cAIAA,EAAA,MAAA,QAIAA,EAAA,QAAA,UAIAA,EAAA,UAAA,WAKAA,EAAA,MAAA,QAIAA,EAAA,cAAA,eAIAA,EAAA,cAAA,eAIAA,EAAA,eAAA,gBAIAA,EAAA,gBAAA,kBAIAA,EAAA,aAAA,cAIAA,EAAA,cAAA,eAIAA,EAAA,WAAA,YAIAA,EAAA,gBAAA,iBAIAA,EAAA,KAAA,OAKAA,EAAA,gBAAA,kBAIAA,EAAA,WAAA,YAIAA,EAAA,SAAA,UACD,CAvED,CAAYA,KAAAA,GAuEX,CAAA,IAKD,SAAYC,GAIVA,EAAA,kBAAA,oBAIAA,EAAA,sBAAA,wBAIAA,EAAA,cAAA,gBAIAA,EAAA,IAAA,MAIAA,EAAA,UAAA,YAIAA,EAAA,UAAA,YAIAA,EAAA,qBAAA,uBAIAA,EAAA,mBAAA,qBAIAA,EAAA,aAAA,eAIAA,EAAA,gBAAA,iBACD,CAzCD,CAAYA,KAAAA,GAyCX,CAAA,IAKD,SAAYC,GAIVA,EAAA,YAAA,cAIAA,EAAA,iBAAA,mBAIAA,EAAA,iBAAA,mBAIAA,EAAA,YAAA,cAIAA,EAAA,WAAA,aAIAA,EAAA,aAAA,eAIAA,EAAA,gBAAA,wBAIAA,EAAA,mBAAA,oBACD,CAjCD,CAAYA,KAAAA,GAiCX,CAAA,IAKD,SAAYC,GAIVA,EAAA,mBAAA,qBAMAA,EAAA,eAAA,gBACD,CAXD,CAAYA,KAAAA,GAWX,CAAA,IAWD,SAAYC,GAIVA,EAAAA,EAAA,IAAA,IAAA,MAIAA,EAAAA,EAAA,KAAA,KAAA,OAIAA,EAAAA,EAAA,WAAA,IAAA,YACD,CAbD,CAAYA,KAAAA,GAaX,CAAA,IAKD,SAAYC,GAIVA,EAAA,QAAA,UAIAA,EAAA,KAAA,OAIAA,EAAA,OAAA,SAIAA,EAAA,KAAA,OAIAA,EAAA,KAAA,OAIAA,EAAA,QAAA,UAIAA,EAAA,SAAA,UACD,CA7BD,CAAYA,KAAAA,GA6BX,CAAA,IAED,SAAYC,GAIVA,EAAA,OAAA,SAIAA,EAAA,aAAA,aACD,CATD,CAAYA,KAAAA,GASX,CAAA,IAED,SAAYC,GAIVA,EAAA,OAAA,SAIAA,EAAA,aAAA,cAIAA,EAAA,WAAA,aAIAA,EAAA,QAAA,SACD,CAjBD,CAAYA,KAAAA,GAiBX,CAAA,IAGD,SAAYC,GAEVA,EAAA,QAAA,SAEAA,EAAA,eAAA,QAEAA,EAAA,UAAA,uCAEAA,EAAA,UAAA,MAEAA,EAAA,OAAA,SAEAA,EAAAA,EAAA,sBAAA,IAAA,wBAEAA,EAAA,cAAA,gBAEAA,EAAA,eAAA,KAEAA,EAAAA,EAAA,oBAAA,IAAA,sBAEAA,EAAAA,EAAA,oBAAA,GAAA,sBAEAA,EAAA,UAAA,QAEAA,EAAAA,EAAA,mBAAA,GAAA,qBAEAA,EAAA,oBAAA,UACD,CA3BD,CAAYA,KAAAA,GA2BX,CAAA,IAED,SAAYC,GAEVA,EAAA,UAAA,WAEAA,EAAA,iBAAA,wBAEAA,EAAA,UAAA,mBAEAA,EAAA,WAAA,oBAEAA,EAAA,WAAA,oBAEAA,EAAA,UAAA,mBAEAA,EAAA,gBAAA,gBAEAA,EAAA,eAAA,iBAEAA,EAAA,gBAAA,aAEAA,EAAA,aAAA,cAEAA,EAAA,qBAAA,sBAEAA,EAAA,qBAAA,gBAEAA,EAAA,WAAA,aAEAA,EAAA,YAAA,cAEAA,EAAA,qBAAA,qBAEAA,EAAA,yBAAA,wBAEAA,EAAA,mBAAA,kBACD,CAnCD,CAAYA,KAAAA,GAmCX,CAAA,IAED,SAAYC,GAEVA,EAAA,YAAA,aAEAA,EAAA,iBAAA,kBAEAA,EAAA,aAAA,EACD,CAPD,CAAYA,KAAAA,GAOX,CAAA,IAKD,SAAYC,GAIVA,EAAA,QAAA,2BAIAA,EAAA,UAAA,OAIAA,EAAA,YAAA,SAIAA,EAAA,aAAA,UAIAA,EAAA,cAAA,QACD,CArBD,CAAYA,KAAAA,GAqBX,CAAA,IAED,SAAYC,GACVA,EAAA,IAAA,gBACAA,EAAA,WAAA,wBACAA,EAAA,YAAA,yBACAA,EAAA,eAAA,2BACD,CALD,CAAYA,KAAAA,GAKX,CAAA,cAEYE,KAAmBhU,GAAA,CAAA,GAC7B9N,EAAeO,QAASP,EAAeO,OACxCuN,GAAC9N,EAAeQ,SAAUR,EAAeQ,QACzCsN,GAAC9N,EAAeS,aAAcT,EAAeO,OAC7CuN,GAAC9N,EAAeU,WAAYV,EAAeU,cCnpCvCqhB,KAAe/f,GAAA,CAAA,GAClBhC,EAAeO,QAAS4O,GACzBnN,GAAChC,EAAeS,aAAc0O,GAC9BnN,GAAChC,EAAeW,QAASwO,GACzBnN,GAAChC,EAAemG,QAASoH,GACzBvL,GAAChC,EAAeyf,QAASrR,GACzBpM,GAAChC,EAAeU,WAAY2O,GAC5BrN,GAAChC,EAAe0f,gBAAiBrR,GACjCrM,GAAChC,EAAeof,YAAa9Q,GAC7BtM,GAAChC,EAAeyB,YAAauN,GAC7BhN,GAAChC,EAAe6Q,iBAAkB7B,GAClChN,GAAChC,EAAeM,QAASuP,GACzB7N,GAAChC,EAAeQ,SAAUsP,gBAQZkS,WACRxC,EAA6B,CACjCxf,EAAeO,OACfP,EAAeM,OACfN,EAAeyB,WACfzB,EAAe6Q,gBACf7Q,EAAeS,YACfT,EAAemG,OACfnG,EAAeyf,OACfzf,EAAe0f,eACf1f,EAAeof,WACfpf,EAAeU,UACfV,EAAeQ,SAGXyhB,EAAwC,QAAzBjgB,EAAAkgB,QAAQC,IAAIC,iBAAa,IAAApgB,EAAAA,EAAA,GAC1CqgB,EAAmB7C,EAOvB,OANIyC,IACFI,EAAmBJ,EAChBjhB,MAAM,KACNof,QAAO,SAACtf,GAAa,OAAAA,EAASgJ,UAC9BuM,KAAI,SAACvV,GAAa,OAAAA,EAASgJ,MAAM,KAE/BuY,CACT,CAGM,SAAUC,GAAqBC,GACnC,IAAKA,EACH,MAAO,GAET,IAAMF,EAAmBL,KACnBQ,EAAe5T,OAAOC,KAAK0T,GAC3BE,EAAqBJ,EAAiBK,QAAQ1iB,EAAeW,QACnE,OAAO6hB,EAAanO,QAClB,SAACsO,EAAiEC,GAChE,IAAMC,IAAaD,KAAsB5iB,GAEzC,IADkBqiB,EAAiBzc,SAASgd,KACzBC,EACjB,OAAOF,EAGT,IAAMG,EAAQT,EAAiBK,QAAQE,GAavC,OAXIC,EACFF,EAAkBC,GAAmBlV,EAAA,CACnCjO,MAAOgjB,GAAsB,EAAIA,EAAqB,MAClDF,EAAgBK,IAEbL,EAAgBK,KACzBD,EAAkBC,GAAmBlV,EAAAA,EAAA,CAAA,EAChC6U,EAAgBK,IACnB,CAAAnjB,MAAOqjB,KAGJH,CACR,GACD,CAAE,EAEN,CAGM,SAAUI,GAAeC,GAC7B,OAAOA,EACJ3M,KAAI,SAACrN,GACJ,IAAM+L,EAAQ/L,EAAMia,KAAKxJ,KAAK,KACxB/J,EAAU1G,EAAM0G,QAEtB,MAAO,GAAGtO,OAAA2T,EAAU,MAAA3T,OAAAsO,EACtB,IACC+J,KAAK,IACV,CAEO,IAAMyJ,GAAc,aAGrB,SAAUC,GAAmBrd,GACjC,IAAMsd,EAActd,EAAMud,MAAMH,IAChC,OAAIE,GAEKlB,QAAQC,IAAIiB,EAAY,KAE1Btd,CACT,CAGM,SAAUwd,GAAenK,GAC7B,IAAMoK,EAAe7V,EAAA,CAAA,EAASyL,QAAAA,EAAW,CAAA,GAQzC,OANIA,GAA8B,iBAAZA,IAAyBqK,MAAMC,QAAQtK,IAC3DvK,OAAOC,KAAKsK,GAASrK,SAAQ,SAACC,GAC5BwU,EAAgBxU,GAAOoU,GAAmBhK,EAAQpK,GACpD,IAGKwU,CACT,CAEM,SAAUG,GAAqBC,GAEnC,IADA,IAAIC,EACgBC,EAAA,EAAAC,EAAcH,EAAdE,WAAAA,IAAgB,CAA/B,IAAM/d,EAAKge,EAAAD,GACd,GAAI/d,EAAO,CACT8d,EAAc9d,EACd,KACD,CACF,CACD,OAAO8d,CACT,CAEM,SAAUG,GAAiBJ,GAC/B,IAAoB,IAAAE,EAAA,EAAAG,EAAcL,EAAdE,WAAAA,IAAgB,CAA/B,IAAM/d,EAAKke,EAAAH,GACd,GAAI/d,GAA0B,KAAjBA,EAAMgE,OACjB,OAAOhE,CAEV,CAEH,CAOO,IAAMme,GAAa,SAACjiB,WACzBlB,EAAQkB,EAAAlB,SACRc,EAAYI,EAAAJ,aACZsiB,EAAYliB,EAAAkiB,aACZP,EAAc3hB,EAAA2hB,eASVvN,EAAS2L,GAAgBjhB,GAE7B,IAAKsV,IAAWxU,EACd,MAAM,IAAIuiB,MAAM,4BAAqBrjB,KAC3BsV,GAAUxU,IACpBwU,EAAS2L,GAAgBngB,IAO3B,IAAMwiB,EAAQhO,aAAM,EAANA,EAAQiO,MAAMH,GACtBhe,EAA8Byd,QAAAA,EAAkB,CAAA,EAA9CjM,EAAMxR,EAAAwR,OAAE4M,oBAUhB,OARI5M,GAAU0M,IACZA,EAAMrjB,MAAwC,QAAhCmC,EAAAwgB,GAAqBhM,UAAW,IAAAxU,EAAAA,EAAAkhB,EAAMrjB,OAGlDujB,IAAmBF,aAAA,EAAAA,EAAOhY,gBAC5BgY,EAAMhY,aAAarL,gBAAQ2iB,GAAqBY,kBAAoBF,EAAMhY,aAAarL,OAGlFqjB,CACT,EAEaG,GAAoB,SAACC,SAEvBtW,EAOLsW,EAAczjB,MANhBD,EAME0jB,EAAc1jB,SALhBc,EAKE4iB,EAAc5iB,aAJG6iB,EAIjBD,EAAc5K,kBAHF8K,EAGZF,eAFUG,EAEVH,aADF1Y,EACE0Y,YAEEzjB,EAAQmN,QAAAA,EAAM,GACd0L,EAAoB6K,QAAAA,EAAQ,GAC5BpY,EAAeqY,QAAAA,EAAQ,GACvBla,EAAama,QAAAA,EAAO,GAC1B,MACE,CACE3kB,EAAeO,OACfP,EAAeQ,QACfR,EAAeof,WACfpf,EAAeS,YACfT,EAAe0f,gBACf9Z,SAAS9E,GAEPuL,IAEO7B,IAEAzJ,GAAS,UAAU2S,KAAK3S,GAC1B,KACEA,GAASA,EAAM6E,SAAS,SAC1B,UACE7E,GAASA,EAAM6E,SAAS,UAC1B,SACE7E,GAASA,EAAM6E,SAAS,SAC1B,QACE7E,GAASA,EAAM6E,SAAS,WAC1B,UAE6C,UAA9C+Z,GAAc7e,UAAgC,IAAAkB,EAAAA,EAAI,YAGxDlB,IAAad,EAAeyf,QACT,IAAd3T,EAAqB,SAAW,SAGrChL,IAAad,EAAeU,UACvB8J,GAAc,SAGnB1J,IAAad,EAAeQ,QACvBgK,GAAcmV,GAAc7e,GAGjCA,IAAad,EAAemG,OAC1BqE,IAEOzJ,GAASA,EAAM6E,SAAS,UAC1B,SACE7E,GAASA,EAAM6E,SAAS,QAC1B,QAGF,SAGL9E,IAAad,EAAeW,QAAUiB,IAAiB5B,EAAeW,OACpE6J,IAEO6B,IAEAtL,GAASA,EAAM6E,SAAS,WAC1B,UACE7E,GAASA,EAAM6E,SAAS,SAC1B,UACE7E,GAASA,EAAM6E,SAAS,UAC1B,SACE7E,GAASA,EAAM6E,SAAS,SAC1B,QACEgU,GAIJ,OAGF,EACT,EAaMgL,KAAsB1hB,GAAA,CAAA,GACzBlD,EAAeO,QAAS4O,GACzBjM,GAAClD,EAAeS,aAAc0O,GAC9BjM,GAAClD,EAAeW,QAASwO,GACzBjM,GAAClD,EAAeyB,YAAawN,GAC7B/L,GAAClD,EAAe6Q,iBAAkB5B,GAClC/L,GAAClD,EAAeM,QAASuP,GACzB3M,GAAClD,EAAemG,QAASiJ,GACzBlM,GAAClD,EAAeQ,SAAUsP,GAE1B5M,GAAClD,EAAeyf,QAASrR,GACzBlL,GAAClD,EAAeU,WAAY2O,GAC5BnM,GAAClD,EAAe0f,gBAAiBpQ,GACjCpM,GAAClD,EAAeof,YAAa7P,OAGlBsV,GAAoB,SAAC7iB,SAChClB,EAAQkB,EAAAlB,SACRc,EAAYI,EAAAJ,aACZsiB,EAAYliB,EAAAkiB,aACZP,EAAc3hB,EAAA2hB,eASd,IAAK7iB,EACH,MAAM,IAAIqjB,MAAM,8BAAuBrjB,IAGzC,IAAIsV,EAASwO,GAAuB9jB,GAEpC,IAAKsV,IAAWxU,EACd,MAAM,IAAIuiB,MAAM,4BAAqBrjB,KAC3BsV,GAAUxU,IACpBwU,EAASwO,GAAuBhjB,IAGlC,IAAMwiB,EAAQhO,EAAOiO,MAAMH,GAEnBxM,GAAWiM,QAAAA,EAAkB,CAAE,GAAAjM,OAUvC,OARIA,GAAU0M,IACZA,EAAMrjB,MAAwC,QAAhCmC,EAAAwgB,GAAqBhM,UAAW,IAAAxU,EAAAA,EAAAkhB,EAAMrjB,OAO/CqjB,CACT,EAEM,SAAUU,GAAeC,GAG7B,IAFA,IAAIxW,EAAS,GAEMsV,EAAA,EAAAmB,EAAYD,EAAZlB,WAAAA,IAAc,CAA5B,IAAMoB,EAAID,EAAAnB,GACb,GAAIoB,EAAKphB,OAASvF,EAAa4mB,KAAM,CACnC,IAAMC,EAAiC,iBAAdF,EAAKrc,KAAoBqc,EAAKrc,KAAOqc,EAAKrc,KAAK9C,MAGtEyI,EAAOiB,OAAS,GAChB2V,EAAU3V,OAAS,GACW,MAA9BjB,EAAOA,EAAOiB,OAAS,IACN,MAAjB2V,EAAU,KAEV5W,GAAU,KAEZA,GAAU4W,CACX,CACF,CAED,OAAO5W,CACT,CAEa,IAAA6W,GAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,OAE9D,SAAAC,GAAuBzc,EAAc0c,QAAA,IAAAA,IAAAA,EAAuBF,IAE1E,IADA,IAAIG,GAAa,EACO1B,EAAA,EAAA2B,EAAUF,EAAVzB,WAAAA,IAAY,CAA/B,IAAM4B,EAASD,EAAA3B,GACZf,EAAQla,EAAK8c,YAAYD,GAC3B3C,EAAQyC,IACVA,EAAYzC,EAEf,CACD,OAAOyC,CACT,CC3Ya,ICXDI,GDWCC,GAA2B,CAEtC,CAAE7W,IAAK,6BAA8BrM,YAAa,2BAClD,CAAEqM,IAAK,sBAAuBrM,YAAa,kBAC3C,CACEqM,IAAK,qCACLrM,YAAa,yCAEf,CAAEqM,IAAK,gBAAiBrM,YAAa,kCACrC,CAAEqM,IAAK,iCAAkCrM,YAAa,wCACtD,CACEqM,IAAK,mCACLrM,YAAa,0CAEf,CAAEqM,IAAK,2BAA4BrM,YAAa,sCAChD,CACEqM,IAAK,+CACLrM,YAAa,sDAEf,CACEqM,IAAK,8CACLrM,YAAa,qDAEf,CACEqM,IAAK,oBACLrM,YAAa,4BAIJmjB,GAA4B,CACvC,CACE9W,IAAK,iBAEP,CACEA,IAAK,oBAIH,SAAU+W,GAAoBC,eAC9BC,GAAU,EACRC,EAAuB,GACvBC,EAAqC,CAAA,EACrCC,EAA2B,CAAA,EAC3BnD,EAAgC,GAEhCzU,EAASqJ,GAAwB0B,UAAUyM,GACjD,GAAKxX,EAAOgL,QAIV,IAAoB,IAAAsK,EAAA,EAAAlW,EAAAY,EAAO6B,KAAPyT,EAAWlW,EAAA6B,OAAXqU,IAAa,CAA5B,IAAMpM,EAAK9J,EAAAkW,GAELuC,EAUL3O,EAAKA,MATPT,EASES,EAAKT,OARPpJ,EAQE6J,EAAKP,aARPA,OAAY,IAAAtJ,EAAG,GAAEA,EACjBC,EAOE4J,EAAKZ,eAPPA,OAAc,IAAAhJ,EAAG,GAAEA,EACnBC,EAME2J,EANUX,QAAZA,OAAU,IAAAhJ,EAAA,GAAEA,EACZC,EAKE0J,EALUH,QAAZA,OAAU,IAAAvJ,EAAA,GAAEA,EACZwJ,EAIEE,EAJeF,kBACjBG,EAGED,EAHIC,OACN1J,EAEEyJ,EAFgBR,WAAlBA,OAAa,IAAAjJ,GAAKA,EACfqY,EACDC,EAAA7O,EAXE,CAAA,QAAA,SAAA,eAAA,iBAAA,UAAA,UAAA,oBAAA,SAAA,eAaN,GAAI0O,EAASC,GAEX,OADApD,EAAOxO,KAAK,0CAAmC4R,EAAS,mCACjD,CAAEJ,SAAS,EAAOC,WAAUA,EAAEC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,GAGtE,GAAI/L,IAAeK,EAEjB,OADA0L,EAAOxO,KAAK,iBAAU4R,EAAS,qDACxB,CAAEJ,SAAS,EAAOC,WAAUA,EAAEC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,GAGtE,IAAK9L,IAAiBD,EAIpB,OAHA+L,EAAOxO,KACL,iBAAU4R,EAAS,qEAEd,CAAEJ,SAAS,EAAOC,WAAUA,EAAEC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,GAetE,IAAK,IAAMrd,KAZXwgB,EAASC,GAAU1Y,EAAA,CACjBsJ,OAAMA,EACNE,aAAYA,EACZL,eAAcA,EACdC,QAAOA,EACPQ,QAAOA,EACPC,kBAAiBA,EACjBG,OAAMA,EACNT,WAAUA,GACPoP,GAGmB5O,EAAMC,OAAQ,CACpCuO,EAAWzR,KAAK7O,GAChB,IAAM5E,EAAQ0W,EAAMC,OAAO/R,GAE3B,GAAIugB,EAAcvgB,GAIhB,OAHAqd,EAAOxO,KACL,0CAAmC7O,EAAS,iDAEvC,CAAEqgB,SAAS,EAAOC,WAAUA,EAAEC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,GAGtE,GAAI/L,EACFiP,EAAcvgB,GAAa,CACzB8R,MAAO2O,OAFX,CAOA,IAAMG,EAA0C,QAApBvkB,EAAAyV,EAAMZ,sBAAc,IAAA7U,EAAAA,EAAI,GAC9CwkB,EAA4B,QAAbtjB,EAAAuU,EAAMX,eAAO,IAAA5T,EAAAA,EAAI,GACtC,GAAqB,kBAAVnC,EAAqB,CAE9B,IAAKwlB,IAAwBC,EAI3B,OAHAxD,EAAOxO,KACL,UAAApT,OAAUuE,EAAwB,gBAAAvE,OAAAglB,EAAoD,8CAEjF,CAAEJ,SAAS,EAAOC,WAAUA,EAAEC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,GAGtEkD,EAAcvgB,GAAa,CACzB8R,MAAO2O,EAEV,KAAM,CACL,IAAMK,EAA0C,QAApB7iB,EAAA7C,EAAM8V,sBAAc,IAAAjT,EAAAA,EAAI,GAC9C8iB,EAA4B,QAAbxgB,EAAAnF,EAAM+V,eAAO,IAAA5Q,EAAAA,EAAI,GAEtC,IAAMugB,IAAwBF,IAA0BG,IAAiBF,EAIvE,OAHAxD,EAAOxO,KACL,UAAApT,OAAUuE,EAAwB,gBAAAvE,OAAAglB,EAA6D,uDAE1F,CAAEJ,SAAS,EAAOC,WAAUA,EAAEC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,GAGtEkD,EAAcvgB,GAAa,CACzB8R,MAAO2O,EAIV,CAhCA,CAiCF,CACF,MAhGDJ,GAAU,EACVhD,EAAOxO,KAAKuO,GAAexU,EAAOvF,MAAMga,SAkG1C,MAAO,CAAEgD,QAAOA,EAAEC,aAAYC,cAAaA,EAAEC,SAAQA,EAAEnD,OAAMA,EAC/D,CAgBM,SAAU2D,GAAsB3kB,iBACpC2D,cACAugB,EAAalkB,EAAAkkB,cACbC,EAAQnkB,EAAAmkB,SAIFS,EAAcV,EAAcvgB,GAClC,IAAKihB,EACH,MAAM,IAAIzC,MAAM,uBAAgBxe,EAAS,kCAG3C,IAAMkhB,EAAcV,EAASS,EAAYnP,OACzC,IAAKoP,EACH,MAAM,IAAI1C,MACR,UAAU/iB,OAAAwlB,EAAYnP,MAAqB,iBAAArW,OAAAuE,EAAwC,kCAIvF,IAAMuR,EAAuC,QAAxBhU,EAAA2jB,EAAY3P,oBAAY,IAAAhU,EAAAA,EAAI,GAEjD,IAAKgU,IAA2C,IAA3B2P,EAAY5P,WAC/B,MAAM,IAAIkN,MACR,UAAA/iB,OAAUwlB,EAAYnP,MAAqE,mEAI/F,IAAMH,EAA6B,QAAnB1T,EAAAijB,EAAYvP,eAAO,IAAA1T,EAAAA,EAAI,GACvC,IAA+B,IAA3BijB,EAAY5P,aAAwBK,EACtC,MAAM,IAAI6M,MACR,UAAA/iB,OAAUwlB,EAAYnP,MAAuE,qEAIjG,IAA+B,IAA3BoP,EAAY5P,WAAqB,CACnC,IAAM6P,EAA4B,CAChCC,aAAc,CACZC,sBAAuB7D,GAA0C,QAAvBjd,EAAA2gB,EAAY/P,eAAW,IAAA5Q,EAAAA,EAAA,IACjE+gB,kBAAmB9D,GAAmB0D,EAAY7P,SAEpDM,QAAS6L,GAAmB7L,GAC5BL,YAAY,GAGRiQ,EAAcJ,EAAOC,aAAaE,kBACxC,GAA2B,iBAAhBC,GAA4BhE,GAAYxP,KAAKwT,GACtD,MAAM,IAAI/C,MAAM,oDAA6C+C,EAAW,qBAO1E,OAJIL,EAAYtP,oBACduP,EAAO3N,QAAU0N,EAAYtP,mBAGxBuP,CACR,CAED,IAAK5P,EACH,MAAM,IAAIiN,MACR,UAAA/iB,OAAUwlB,EAAYnP,MAAqE,mEAI/F,IAAM0P,EAAeN,EAAYnP,OAAO/R,GAClCkI,EACoB,iBAAjBsZ,EACH,CACAtQ,eAA+C,UAA/BsQ,EAAatQ,sBAAkB,IAAAlJ,EAAAA,EAAAkZ,EAAYhQ,eAC3DC,QAAiC,UAAxBqQ,EAAarQ,eAAW,IAAAlJ,EAAAA,EAAAiZ,EAAY/P,SAE7C,CACAD,eAAgBgQ,EAAYhQ,eAC5BC,QAAS+P,EAAY/P,SARnBhJ,EAAmBD,EAAAgJ,eAAnBA,OAAc,IAAA/I,EAAG,GAAEA,EAAEC,EAAAF,EAAAiJ,QAAAA,OAAU,IAAA/I,EAAA,KAWvC,IAAK8I,IAAmBC,EACtB,MAAM,IAAIqN,MACR,UAAA/iB,OAAUuE,EAAwB,gBAAAvE,OAAAwlB,EAAYnP,iDAAwCZ,EAAc,oBAAAzV,OAAmB0V,EAAO,QAWlI,IAPA,IAAMiQ,EAA6B,CACjCE,kBAAmB9D,GAAmB0D,EAAY7P,QAClDoQ,2BAA4BjE,GAAmBjM,GAC/CmQ,6BAA8BlE,GAAmBtM,GACjDmQ,sBAAuB7D,GAAmBrM,IAGG+M,EAAA,EAA3B7V,EAAAY,OAAO4K,OAAOuN,GAAdlD,EAAA7V,EAAAwB,OAAAqU,IAA6B,CAA5C,IAAM/d,EAAKkI,EAAA6V,GACd,GAAqB,iBAAV/d,GAAsBod,GAAYxP,KAAK5N,GAChD,MAAM,IAAIqe,MAAM,oDAA6Cre,EAAK,oBAErE,CAED,IAAMyI,EAA4B,CAAEwY,aAAYA,GAUhD,OARIzP,IACF/I,EAAO+I,QAAU6L,GAAmB7L,IAGlCuP,EAAYtP,oBACdhJ,EAAO4K,QAAU0N,EAAYtP,mBAGxBhJ,CACT,CAEM,SAAU+Y,GAAsBtlB,mBACpCokB,EAASpkB,EAAAokB,UAMHS,EALE7kB,EAAAmkB,SAKqBC,GAC7B,IAAKS,EACH,MAAM,IAAI1C,MAAM,uBAAgBiC,EAAS,kCAG3C,IAAMlP,EAAuC,QAAxBhU,EAAA2jB,EAAY3P,oBAAY,IAAAhU,EAAAA,EAAI,GAC3C+T,EAAmC,QAAtBrT,EAAAijB,EAAY5P,kBAAU,IAAArT,GAAAA,EACnC0T,EAA6B,QAAnBpR,EAAA2gB,EAAYvP,eAAO,IAAApR,EAAAA,EAAI,GAEvC,IAAKgR,IAAiBD,EACpB,MAAM,IAAIkN,MACR,iBAAUiC,EAAS,mEAIvB,GAAInP,IAAeK,EACjB,MAAM,IAAI6M,MACR,iBAAUiC,EAAS,qEAIvB,IAAM1O,EAAS9I,OAAOC,KAAKgY,EAAYnP,QACvC,GAAsB,IAAlBA,EAAOlI,OACT,MAAM,IAAI2U,MAAM,iBAAUiC,EAAS,2CAIrC,IAAMmB,EAAiB7P,EAAO,GACxByP,EAAeN,EAAYnP,OAAO6P,GAElCR,EAA6B,CACjCC,sBAAuB7D,GAA0C,QAAvBxV,EAAAkZ,EAAY/P,eAAW,IAAAnJ,EAAAA,EAAA,IACjEsZ,kBAAmB9D,GAAmB0D,EAAY7P,QAClDoQ,2BAA4BjE,GAAmBjM,IAIjD,GAAID,EACF,OACEvJ,EAAA,CAAAqZ,aAAYA,EACZzP,QAAS6L,GAAmB7L,GAC5BL,YAAY,GACR4P,EAAYtP,mBAAqB,CAAE4B,QAAS0N,EAAYtP,oBAI1D,IAAAzJ,EACoB,iBAAjBqZ,EACH,CACAtQ,eAA+C,UAA/BsQ,EAAatQ,sBAAkB,IAAAjJ,EAAAA,EAAAiZ,EAAYhQ,eAC3DC,QAAiC,UAAxBqQ,EAAarQ,eAAW,IAAAjJ,EAAAA,EAAAgZ,EAAY/P,SAE7C,CACAD,eAAgBgQ,EAAYhQ,eAC5BC,QAAS+P,EAAY/P,SARnB/I,EAAmBD,EAAA+I,eAAnBA,OAAc,IAAA9I,EAAG,GAAEA,EAAEC,EAAAF,EAAAgJ,QAAAA,OAAU,IAAA9I,EAAA,KAWvC,IAAK6I,IAAmBC,EACtB,MAAM,IAAIqN,MACR,UAAA/iB,OAAUmmB,EAAc,gBAAAnmB,OAAeglB,EAAS,wDAAAhlB,OAAuDyV,EAAc,oBAAAzV,OAAmB0V,EAAO,QAInJiQ,EAAaM,6BAA+BlE,GAAmBtM,GAC/DkQ,EAAaC,sBAAwB7D,GAAmBrM,GAExD,IAAMvI,EAA4B,CAAEwY,aAAYA,GAUhD,OARIzP,IACF/I,EAAO+I,QAAU6L,GAAmB7L,IAGlCuP,EAAYtP,oBACdhJ,EAAO4K,QAAU0N,EAAYtP,mBAGxBhJ,CACT,EC5WA,SAAYoX,GACVA,EAAA,QAAA,UACAA,EAAA,SAAA,WACAA,EAAA,OAAA,QACD,CAJD,CAAYA,KAAAA,GAIX,CAAA,IAEM,ICqBK6B,GAWAC,GAQAC,GDxCCC,GAAQ,iLAQRC,GAAY,w/DAyDZC,GAAc,ogJA4IdC,GAAQ,yxDA6DRC,GAAS,08CAkDTC,GAAQ,62CAsCRC,GAAa,0zFAqHbC,GAAS,orEAyDTC,GAAW,w+FAkEXC,GAAO,8/DAgFPC,GAAW,i0MAsQXC,GAAW,ytCA8BXC,GAAc,yUAWdC,GAAS,4iIA0HTC,GAAS,4oGAsHTC,GAAe,gpPAwMfC,GAAY,gwCA6BZthB,GAAQ,28BAyBRX,GAAQ,2uBAyBRkiB,GAAU,2iRA6OVC,GAAiB,ozKAkIjBC,GAAa,+yFAuHbC,GAAU,gzCA+BVC,GAAW,20BA2BXC,GAAa,klDA4CbC,GAAS,23LAgKTzD,GAAY,6yBA+BZ0D,GAAW,+SAgBXC,GAAS,otCA4BTC,GAAkB,4zCA6BlBC,GAAQ,+7FAuHRC,GAAO,gnEAuDPC,GAAW,05BA0BXC,GAAQ,uzKAiIRC,GAAU,sxBAmCVC,GAAc,iwDA6DdC,GAAS,grDA6CTC,GAAU,0tCA8BVC,GAAW,4+HAiMXC,GAAmB,CAC9BpC,MAAOA,GACPC,UAAWA,GACXC,YAAaA,GACbC,MAAOA,GACPC,OAAQA,GACRC,MAAOA,GACPC,WAAYA,GACZC,OAAQA,GACRC,SAAUA,GACVC,KAAMA,GACNC,SAAUA,GACVC,SAAUA,GACVC,YAAaA,GACbC,OAAQA,GACRC,OAAQA,GACRC,aAAcA,GACdC,UAAWA,GACXthB,MAAOA,GACPX,MAAOA,GACPkiB,QAASA,GACTC,eAAgBA,GAChBC,WAAYA,GACZC,QAASA,GACTC,SAAUA,GACVC,WAAYA,GACZC,OAAQA,GACRzD,UAAWA,GACX0D,SAAUA,GACVC,OAAQA,GACRC,gBAAiBA,GACjBC,MAAOA,GACPC,KAAMA,GACNC,SAAUA,GACVC,MAAOA,GACPC,QAASA,GACTC,YAAaA,GACbC,OAAQA,GACRC,QAASA,GACTC,SAAUA,IAGCE,GAA4B,CACvCrC,MAAOA,GACPI,OAAQA,GACRG,OAAQA,GACRE,KAAMA,GACNE,SAAUA,GACVjhB,MAAOA,GACPX,MAAOA,GACPuiB,WAAYA,GACZC,OAAQA,GACRM,SAAUA,IEhhGN,SAAUS,GAAuB7T,SACjC8T,EAGJ,GAAoB,WAAhB9T,EAAOvS,KACT,GAAI2f,MAAMC,QAAQrN,EAAO+T,OAAS/T,EAAO+T,KAAK3a,OAAS,EAAG,CAClD,IAAAtM,EAAmBkT,EAAO+T,KAAzBC,EAAKlnB,EAAA,GAAKmjB,EAAInjB,EAAAmnB,MAAA,GACrBH,EAAYrqB,EAAEsqB,KAAKzZ,EAAC,CAAA0Z,GAAU/D,GAA8B,GAC7D,MACC6D,EAAYrqB,EAAEC,cAEX,GAAoB,WAAhBsW,EAAOvS,KAChBqmB,EAAYrqB,EAAEiI,cACT,GAAoB,YAAhBsO,EAAOvS,KAChBqmB,EAAYrqB,EAAEqH,eACT,GAAoB,UAAhBkP,EAAOvS,WAAqCkB,IAAjBqR,EAAOkU,MAAqB,CAChE,IAAMC,EAAaN,GAAuB7T,EAAOkU,OACjDJ,EAAYrqB,EAAEkH,MAAMwjB,EACrB,MAAM,GAAoB,WAAhBnU,EAAOvS,KAAmB,CAInC,IAHA,IAAM8M,EAAmC,CAAA,EACnC3M,EAA8B,QAAjBhC,EAAAoU,EAAOpS,kBAAU,IAAAhC,EAAAA,EAAI,GAEa6hB,EAAA,EAA1BjgB,EAAAgL,OAAO4B,QAAQxM,GAAf6f,EAAAjgB,EAAA4L,OAAAqU,IAA4B,CAA5C,IAAA3d,OAAC6I,EAAG7I,EAAA,GAAEJ,EAAKI,EAAA,GAChBskB,EAAcP,GAAuBnkB,GAChB,MAArBA,EAAMpD,aAA6C,KAAtBoD,EAAMpD,cACrC8nB,EAAcA,EAAYC,SAAS3kB,EAAMpD,cAE3CiO,EAAM5B,GAAOyb,CACd,CAED,IAAIE,EAAe7qB,EAAE2G,OAAOmK,GAE5B,GAAI6S,MAAMC,QAAQrN,EAAOnS,WAAamS,EAAOnS,SAASuL,OAAS,EAAG,CAChE,IAAM2K,EAAUvL,OAAO6H,YACrB7H,OAAO4B,QAAQG,GAAO0F,KAAI,SAACrU,SAAC+M,EAAG/M,EAAA,GAAE8D,EAAK9D,EAAA,GAAM,MAAA,CAC1C+M,GACmC,aAAnC7L,EAAAkT,EAAOnS,+BAAU2B,SAASmJ,IAAgBjJ,EAAQA,EAAMkB,WACzD,KAEH0jB,EAAe7qB,EAAE2G,OAAO2T,EACzB,MACCuQ,EAAeA,EAAavQ,UAE9B+P,EAAYQ,CACb,MACCR,EAAYrqB,EAAE2L,UAQhB,OAJ0B,MAAtB4K,EAAO1T,aAA8C,KAAvB0T,EAAO1T,cACvCwnB,EAAYA,EAAUO,SAASrU,EAAO1T,cAGjCwnB,CACT,EDtCA,SAAY1C,GACVA,EAAA,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,OAAA,SACAA,EAAA,SAAA,WACAA,EAAA,OAAA,SACAA,EAAA,SAAA,WACAA,EAAA,SAAA,WACAA,EAAA,KAAA,MACD,CATD,CAAYA,KAAAA,GASX,CAAA,IAED,SAAYC,GACVA,EAAA,OAAA,SACAA,EAAA,QAAA,UACAA,EAAA,OAAA,SACAA,EAAA,KAAA,OACAA,EAAA,MAAA,OACD,CAND,CAAYA,KAAAA,GAMX,CAAA,IAED,SAAYC,GACVA,EAAA,aAAA,eACAA,EAAA,MAAA,QACAA,EAAA,OAAA,QACD,CAJD,CAAYA,KAAAA,GAIX,CAAA,IA2CD,IAAMiD,GAAwB,CAAC,MAAO,OAAQ,aAUxC,SAAUC,GAAsBC,GAGpC,IAFA,IAAMC,EAAgD,CAAA,EAEhCjH,EAAA,EAAAkH,EAAQF,EAARhH,WAAAA,IAAU,CAA3B,IAAMmH,EAAOD,EAAAlH,GAEd9U,EASEic,EAAOjc,IARTlL,EAQEmnB,EAREnnB,KACK2S,EAOPwU,UANFC,EAMED,EAAOC,MALTxjB,EAKEujB,EALKvjB,QACPyjB,EAIEF,UAHFG,EAGEH,EAAOG,QAFTC,EAEEJ,EAFKI,QACPC,EACEL,UAEJ,GAAInnB,IAAS4jB,GAAa6D,OAc1B,GAAIznB,IAAS4jB,GAAa8D,QAU1B,GAAI1nB,IAAS4jB,GAAa+D,OAgB1B,GAAI3nB,IAAS4jB,GAAagE,KAe1B,GAAI5nB,IAAS4jB,GAAajE,MAiB1B/O,QAAQiX,KAAK,oCAA6B7nB,QAjB1C,CACMuS,EAAsBvW,EAAEkH,MAAMlH,EAAEC,SAAS2I,GAAG5I,EAAEiI,WAC9CsjB,GAAWhV,aAAkBuV,IAC/BvV,EAASA,EAAO7R,IAAI6mB,IAElBC,GAAWjV,aAAkBuV,IAC/BvV,EAASA,EAAO5R,IAAI6mB,IAGlB7U,GAAgBgN,MAAMC,QAAQjN,KAChCJ,EAASA,EAAO/R,QAAQmS,IAG1BsU,EAAa/b,GAAOqH,CAErB,KA9BD,CACE,IAAK3O,GAA8B,IAAnBA,EAAQ+H,OAAc,CACpCiF,QAAQiX,KAAK,uDAAgD3c,EAAG,OAChE,QACD,CAEKqH,EAASvW,EAAEsqB,KAAK1iB,GAEpBqjB,EAAa/b,GADa,iBAAjByH,EACWJ,EAAO/R,QAAQmS,GAEfJ,CAGvB,KA7BD,CACE,IAAIA,EAASvW,EAAEC,SACXorB,IACF9U,EAASA,EAAO7R,IAAI2mB,IAElBC,IACF/U,EAASA,EAAO5R,IAAI2mB,IAGpBL,EAAa/b,GADa,iBAAjByH,EACWJ,EAAO/R,QAAQmS,GAEfJ,CAGvB,KAxBD,CACE,IAAMA,EAASvW,EAAEqH,UAEf4jB,EAAa/b,GADa,kBAAjByH,EACWJ,EAAO/R,QAAQmS,GAEfJ,CAGvB,KAtBD,CACE,IAAIA,EAASvW,EAAEiI,SACXmjB,IAEF7U,GADAA,EAASA,EAAO7R,IAAI0mB,EAAM1mB,MACVC,IAAIymB,EAAMzmB,MAG1BsmB,EAAa/b,GADa,iBAAjByH,EACWJ,EAAO/R,QAAQmS,GAEfJ,CAGvB,CA6DF,CAED,OAAOvW,EAAE2G,OAAOskB,EAClB,CAEA,IAAMc,GAA2D,CAC/DC,UAAW,SACXC,UAAW,SACXC,WAAY,WAaR,SAAUC,GAA2BnB,GAIzC,UAHM7H,EAAqB,GAErBiJ,EAAa,IAAI5rB,IACDwjB,EAAA,EAAAqI,EAAQrB,EAARhH,WAAAA,IAAU,MACN9e,KADfimB,EAAOkB,EAAArI,IACJsI,UACNnB,EAAQmB,QAhBC,GAgBuBnB,EAAQmB,QAf/B,EAgBXnJ,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,4CAAqCsb,EAAQjc,IAAwB,sBAAA3N,OAnBrE,EAmBuF,SAAAA,OAlBvF,EAkBoG,KAC7G6hB,KAAM,CAAC,aAGTgJ,EAAWK,IAAItB,EAAQmB,SAG5B,CAID,IAFA,IAAMA,EAA8B,IAApBF,EAAWM,KAAaN,EAAWzS,SAASgT,OAAO1mB,MAAQ,EAErD5C,EAAA,EAAAupB,EAAQ5B,EAAR3nB,WAAAA,IAAU,CAC9B,IADG,IAAM8nB,EAAOyB,EAAAvpB,GACIU,EAAA,EAAA8oB,EAAqB/B,GAArB/mB,WAAAA,IAAuB,CAAtC,IAAMmR,EAAK2X,EAAA9oB,QACoCmB,IAA9CimB,EAAQjW,IACViO,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,0BAA0BtO,OAAA2T,0BAAqBiW,EAAQjc,IAAM,KACtEkU,KAAM,CAAClO,IAGZ,CAGD,IAAM4X,EAAe/d,OAAO4K,OAAOiO,IAyMnC,GAxMKkF,EAAa/mB,SAASolB,EAAQnnB,OACjCmf,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,4BAAAtO,OAA4B4pB,EAAQjc,IAAG,qBAAA3N,OAAoBurB,EAAalT,KAC/E,MACE,KACJwJ,KAAM,CAAC,WAMR+H,EAAQ4B,YAAcpF,GAAeqF,MAAQ7B,EAAQnnB,OAAS4jB,GAAajE,OAC3EwH,EAAQ4B,YAAcpF,GAAeqF,MAAQ7B,EAAQnnB,OAAS4jB,GAAajE,QAE5ER,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,8BAAAtO,OAA8B4pB,EAAQjc,IAA2B,0BAC1EkU,KAAM,CAAC,UAIP+H,EAAQ4B,YAAcpF,GAAeqF,YACf9nB,IAApBimB,EAAQI,SAAyBJ,EAAQI,QAAU,GACrDpI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAA4B,2BAClFkU,KAAM,CAAC,kBAGale,IAApBimB,EAAQK,SAAyBL,EAAQK,QAAU,GACrDrI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAA4B,2BAClFkU,KAAM,CAAC,aAGP+H,EAAQ3mB,UAAYmf,MAAMC,QAAQuH,EAAQ3mB,UAC5C2e,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAAwB,uBAC9EkU,KAAM,CAAC,aAGP+H,EAAQ3mB,SAAW2mB,EAAQK,SAAYL,EAAQ3mB,QAAemL,OAASwb,EAAQK,SACjFrI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,4CAAqCsb,EAAQjc,IAA0B,wBAAA3N,OAAA4pB,EAAQK,QAAe,UACvGpI,KAAM,CAAC,aAGP+H,EAAQ3mB,SAAW2mB,EAAQI,SAAYJ,EAAQ3mB,QAAemL,OAASwb,EAAQI,SACjFpI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,4CAAqCsb,EAAQjc,IAA2B,yBAAA3N,OAAA4pB,EAAQI,QAAe,UACxGnI,KAAM,CAAC,aAGN+H,EAAQ3mB,UACX2mB,EAAQ3mB,QAAU,KAKpB2mB,EAAQ4B,YAAcpF,GAAesF,OACrC9B,EAAQ4B,YAAcpF,GAAeuF,WAEjC/B,EAAQnnB,OAAS4jB,GAAa6D,QAAUN,EAAQ4B,YAAcpF,GAAeuF,UAC/E/J,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,kCAAAtO,OAAkC4pB,EAAQjc,IAA4B,2BAC/EkU,KAAM,CAAC,eAMWle,IAApBimB,EAAQE,cACYnmB,IAApBimB,EAAQG,SACRH,EAAQE,QAAUF,EAAQG,SAE1BnI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,eAAAtO,OAAe4pB,EAAQjc,IAA8C,6CAC9EkU,KAAM,CAAC+H,EAAQjc,IAAK,UAAW,aAI9Bic,EAAQgC,cACXhC,EAAQgC,YAAc,KAItBhC,EAAQ4B,YAAcpF,GAAeyF,SACnCjC,EAAQnnB,OAAS4jB,GAAa6D,QAAWN,EAAQC,OACnDjI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,gCAAAtO,OAAgC4pB,EAAQjc,IAA0C,yCAC3FkU,KAAM,CAAC,WAKT+H,EAAQnnB,OAAS4jB,GAAagE,QAC5BT,EAAQvjB,SAAWujB,EAAQvjB,QAAQ+H,OAjJpB,IAmJjBwT,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,gCAAgCtO,OAAA4pB,EAAQjc,IAAG,uBAAA3N,OArJrC,EAqJoG,2BACnH6hB,KAAM,CAAC,aAIX+H,EAAQkC,aACNlC,EAAQnnB,OAAS4jB,GAAa6D,iBAAStpB,EAAAgpB,EAAQkC,+BAG/ClC,EAAQ4B,YAAcpF,GAAeyF,QAAUjC,EAAQnnB,OAAS4jB,GAAa6D,aACvDvmB,IAApBimB,EAAQ3mB,SAAyB2mB,EAAQC,QAE3CD,EAAQ3mB,QAAU8oB,KAAKC,OAAOpC,EAAQC,MAAM1mB,IAAMymB,EAAQC,MAAMzmB,KAAO,IAKzEwmB,EAAQ4B,YAAcpF,GAAe6F,UACrCrC,EAAQ4B,YAAcpF,GAAe8F,SAEjCtC,EAAQvjB,SAAWujB,EAAQvjB,QAAQ+H,OAAS,GAC9CwT,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,yCAAAtO,OAAyC4pB,EAAQjc,IAA4B,2BACtFkU,KAAM,CAAC,aAIN+H,EAAQ3mB,SAAW2mB,EAAQnnB,OAAS4jB,GAAa8D,UACpDP,EAAQ3mB,SAAU,IAIlB2mB,EAAQ4B,YAAcpF,GAAe+F,aAClCvC,EAAQvjB,SAAWujB,EAAQvjB,QAAQ+H,OAtLnB,IAuLnBwT,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,kCAAkCtO,OAAA4pB,EAAQjc,IAAG,uBAAA3N,OAzLrC,EAyLwF,aACzG6hB,KAAM,CAAC,cAIN+H,EAAQ3mB,SAAW2mB,EAAQvjB,SAAWujB,EAAQvjB,QAAQ+H,OAAS,IAClEwb,EAAQ3mB,QAAU2mB,EAAQvjB,QAAQ,KAIlCujB,EAAQ4B,YAAcpF,GAAegG,aAClCxC,EAAQvjB,SAAWujB,EAAQvjB,QAAQ+H,OAnMnB,IAoMnBwT,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,kCAAkCtO,OAAA4pB,EAAQjc,IAAG,uBAAA3N,OAtMrC,EAsMwF,aACzG6hB,KAAM,CAAC,cAGN+H,EAAQ3mB,SAAW2mB,EAAQvjB,SAAWujB,EAAQvjB,QAAQ+H,OAAS,IAClEwb,EAAQ3mB,QAAU2mB,EAAQvjB,QAAQ,KAKjCujB,EAAQyC,aACXzC,EAAQyC,WAAaN,KAAKO,MAAMvB,EAAU,IAIvCnB,EAAQtkB,QACXskB,EAAQtkB,MAAQskB,EAAQjc,KAKxBic,EAAQ4B,YAAcpF,GAAesF,OACrC9B,EAAQ4B,YAAcpF,GAAeuF,gBAEbhoB,IAApBimB,EAAQE,SAAyBF,EAAQE,QAAU,GACrDlI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAA4B,2BAClFkU,KAAM,CAAC,kBAGale,IAApBimB,EAAQG,SAAyBH,EAAQG,QAAU,GACrDnI,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAA4B,2BAClFkU,KAAM,CAAC,cAMT+H,EAAQ2C,aAAejG,GAAYkG,OAAQ,CAC7C,IAAMC,EAAqBzjB,GAAoBuG,MAAMqa,EAAQjc,KAC7D,GAAK8e,EAME,CACL,IAAMC,EAAUD,EAAmBtX,KAAKwX,UACVnC,GAAqBkC,IAAY,QACjC9C,EAAQnnB,MACpCmf,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,kBAAWsb,EAAQjc,IAAwB,sBAAA3N,OAAA4pB,EAAQ2C,WAAiE,yDAC7H1K,KAAM,CAAC,eAGZ,MAfCD,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,kBAAWsb,EAAQjc,IAAwB,sBAAA3N,OAAA4pB,EAAQ2C,WAAqD,6CACjH1K,KAAM,CAAC,eAaZ,CAGG+H,EAAQnnB,OAAS4jB,GAAa6D,QAAU0C,MAAMhD,EAAQ3mB,UACxD2e,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAAwB,uBAC9EkU,KAAM,CAAC,aAIP+H,EAAQnnB,OAAS4jB,GAAa8D,SAAsC,kBAApBP,EAAQ3mB,SAC1D2e,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAAyB,wBAC/EkU,KAAM,CAAC,aAKR+H,EAAQnnB,OAAS4jB,GAAa+D,QAAUR,EAAQnnB,OAAS4jB,GAAagE,MAC5C,iBAApBT,EAAQ3mB,SAEf2e,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OAAqC4pB,EAAQjc,IAAwB,uBAC9EkU,KAAM,CAAC,aAKT+H,EAAQnnB,OAAS4jB,GAAagE,MAC9BT,EAAQvjB,UACPujB,EAAQvjB,QAAQ7B,SAASolB,EAAQ3mB,UAElC2e,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAAtO,OACP4pB,EAAQjc,IACwB,mCAAA3N,OAAA4pB,EAAQvjB,QAAQgS,KAAK,MAAS,MAChEwJ,KAAM,CAAC,aAKT+H,EAAQnnB,OAAS4jB,GAAa6D,QAC9BN,EAAQC,OACmB,iBAApBD,EAAQ3mB,UACd2mB,EAAQ3mB,QAAU2mB,EAAQC,MAAM1mB,KAAOymB,EAAQ3mB,QAAU2mB,EAAQC,MAAMzmB,MAExEwe,EAAOxO,KAAK,CACV4X,KAAMC,EAAa1rB,OACnB+O,QAAS,qCAAqCtO,OAAA4pB,EAAQjc,2CAAkCic,EAAQC,MAAM1mB,IAAQ,MAAAnD,OAAA4pB,EAAQC,MAAMzmB,IAAO,MACnIye,KAAM,CAAC,YAGZ,CAED,GAAID,EAAOxT,OAAS,EAClB,MAAM,IAAIye,EAASjL,EAEvB,CAEO,iDE3gBKkL,GAcAC,GAsBAC,GFueCC,GAAuB,SAACC,GACnC,IAAMC,EAAgB7gB,EAAAA,EAAA,CAAA,EAAAnN,IAAW+tB,GACjC,OAAOlkB,GACJoD,KAAK,CACJzM,OAAO,EACPsL,cAAc,EACd3B,cAAc,EACdpG,aAAa,EACbI,OAAO,EACPC,kBAAkB,EAClBC,mBAAmB,EACnBC,aAAa,EACbI,aAAa,EACbH,kBAAkB,IAEnB8E,WAAU,SAAC6D,yBAAQ,OACfC,EAAAA,EAAA,GAAAD,GACH,CAAA1M,MAAgB,QAATiB,EAAAyL,EAAI1M,aAAK,IAAAiB,EAAAA,EAAIusB,EAASxtB,MAAMsD,QACnCgI,aAAkC,QAApBnJ,EAAAuK,EAAIpB,oBAAgB,IAAAnJ,EAAAA,EAAA,KAClCwH,aAAkC,QAApB9G,EAAA6J,EAAI/C,oBAAgB,IAAA9G,EAAAA,EAAA,KAClCU,YAA4B,QAAf4B,EAAAuH,EAAInJ,mBAAW,IAAA4B,EAAAA,EAAIqoB,EAASjqB,YAAYD,QACrDK,MAAgB,QAATiJ,EAAAF,EAAI/I,aAAK,IAAAiJ,EAAAA,EAAI4gB,EAAS7pB,MAAML,QACnCM,iBAAsC,UAApB8I,EAAI9I,wBAAgB,IAAAiJ,EAAAA,EAAI2gB,EAAS5pB,iBAAiBN,QACpEO,0BAAmBiJ,EAAAJ,EAAI7I,iCAAqB2pB,EAAS3pB,kBAAkBP,QACvEQ,YAC6B,kBAApB4I,EAAI5I,YAA4B4I,EAAI5I,YAAc0pB,EAAS1pB,YAAYR,QAChFY,YAA4B,QAAf6I,EAAAL,EAAIxI,mBAAW,IAAA6I,EAAAA,EAAIygB,EAAStpB,YAAYZ,QACrDS,iBAA0C,QAAxBiJ,EAAAN,EAAI3I,wBAAoB,IAAAiJ,EAAAA,OAAAhJ,OAE3CoJ,OAAM,WAAM,MAAC,CACZpN,MAAOwtB,EAASxtB,MAAMsD,QACtBgI,aAAc,KACd3B,aAAc,KACdpG,YAAaiqB,EAASjqB,YAAYD,QAClCK,MAAO6pB,EAAS7pB,MAAML,QACtBM,iBAAkB4pB,EAAS5pB,iBAAiBN,QAC5CO,kBAAmB2pB,EAAS3pB,kBAAkBP,QAC9CQ,YAAa0pB,EAAS1pB,YAAYR,QAClCY,YAAaspB,EAAStpB,YAAYZ,QAClCS,sBAAkBC,EAClB,GACN,EAEaypB,GAAuB,SAACC,GACnC,IAAMF,EAAgB7gB,EAAAA,EAAA,CAAA,EAAAvH,IAAWsoB,GACjC,OAAOrkB,GACJoD,KAAK,CACJzM,OAAO,EACPyJ,YAAY,EACZE,cAAc,EACdI,UAAU,EACVxG,aAAa,EACba,iBAAiB,EACjBC,MAAM,EACNC,MAAM,EACNP,kBAAkB,IAEnB8E,WAAU,SAAC6D,yBACV,OACKC,EAAAA,EAAA,GAAAD,GACH,CAAA1M,MAAgB,QAATiB,EAAAyL,EAAI1M,aAAK,IAAAiB,EAAAA,EAAIusB,EAASxtB,MAAMsD,QACnCmG,WAA8B,QAAlBtH,EAAAuK,EAAIjD,kBAAc,IAAAtH,EAAAA,EAAA,KAC9BwH,aAAkC,QAApB9G,EAAA6J,EAAI/C,oBAAgB,IAAA9G,EAAAA,EAAA,KAClCkH,SAAsB,QAAZ5E,EAAAuH,EAAI3C,gBAAQ,IAAA5E,EAAAA,EAAI,CAAC,CAAEmB,MAAO,CAAEC,QAAS,IAAMC,OAAQ,CAAED,QAAS,MACxEhD,YAA4B,QAAfqJ,EAAAF,EAAInJ,mBAAW,IAAAqJ,EAAAA,EAAI4gB,EAASjqB,YAAYD,QACrDc,gBAAwC,QAAvByI,EAAAH,EAAItI,uBAAmB,IAAAyI,EAAAA,EAAA2gB,EAASppB,gBAAgBd,QACjEe,KAAkB,QAAZyI,EAAAJ,EAAIrI,YAAQ,IAAAyI,EAAAA,EAAA0gB,EAASnpB,KAAKf,QAChCgB,KAAc,QAARyI,EAAAL,EAAIpI,YAAI,IAAAyI,EAAAA,EAAIygB,EAASlpB,KAAKhB,QAChCS,iBAA0C,QAAxBiJ,EAAAN,EAAI3I,wBAAoB,IAAAiJ,EAAAA,OAAAhJ,GAE9C,IACCoJ,OAAM,WAAM,MAAC,CACZpN,MAAOwtB,EAASxtB,MAAMsD,QACtBmG,WAAY,KACZE,aAAc,KACdI,SAAU,CAAC,CAAEzD,MAAO,CAAEC,QAAS,IAAMC,OAAQ,CAAED,QAAS,MACxDhD,YAAaiqB,EAASjqB,YAAYD,QAClCc,gBAAiBopB,EAASppB,gBAAgBd,QAC1Ce,KAAMmpB,EAASnpB,KAAKf,QACpBgB,KAAMkpB,EAASlpB,KAAKhB,QACpBS,sBAAkBC,EAClB,GACN,GE7lBA,SAAYmpB,GAIVA,EAAA,MAAA,QAIAA,EAAA,KAAA,MACD,CATD,CAAYA,KAAAA,GASX,CAAA,IAKD,SAAYC,GAIVA,EAAA,QAAA,UAIAA,EAAA,UAAA,YAIAA,EAAA,OAAA,SAIAA,EAAA,YAAA,aACD,CAjBD,CAAYA,KAAAA,GAiBX,CAAA,IAKD,SAAYC,GACVA,EAAA,cAAA,gBACAA,EAAA,IAAA,MACAA,EAAA,OAAA,SACAA,EAAA,OAAA,SACAA,EAAA,KAAA,OACAA,EAAA,YAAA,cACAA,EAAA,MAAA,OACD,CARD,CAAYA,KAAAA,GAQX,CAAA,IAEY,ICnDDM,GAkDAC,GDCCC,GAA0B/uB,EAAE2G,SAAMxE,GAAA,CAAA,GAC5CosB,GAAYS,eAAgBhvB,EAAEqH,UAAU7C,SAAQ,GACjDrC,GAACosB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,GACvCrC,GAACosB,GAAYW,QAASlvB,EAAEqH,UAAU7C,SAAQ,QAI/B2qB,GAA4BnvB,EAAE2G,SAAMtD,GAAA,CAAA,GAC9CkrB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,QAG5B4qB,GAAyBpvB,EAAE2G,SAAM5C,GAAA,CAAA,GAC3CwqB,GAAYS,eAAgBhvB,EAAEqH,UAAU7C,SAAQ,GACjDT,GAACwqB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,GACvCT,GAACwqB,GAAYW,QAASlvB,EAAEqH,UAAU7C,SAAQ,QAI/B6qB,GAA8BrvB,EAAE2G,SAAMN,GAAA,CAAA,GAChDkoB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,QAG5B8qB,GAAatvB,EAAE2G,SAAMmH,GAAA,CAChClL,KAAM5C,EAAEC,WACPquB,GAAgBiB,SAAUR,GAC3BjhB,GAACwgB,GAAgBkB,WAAYL,GAC7BrhB,GAACwgB,GAAgBmB,QAASL,GAC1BthB,GAACwgB,GAAgBoB,aAAcL,QAwCpBM,GA/Bc3vB,EAAE2G,SAAMoH,GAAA,CAAA,GAChCsgB,GAAYuB,OAAQN,GAAWO,SAAM7hB,GAAA,CACpCpL,KAAM5C,EAAE6I,QAAQwlB,GAAYuB,SAC3BtB,GAAgBiB,SAAUR,GAAwBc,SAAM5hB,GAAA,CAAA,GACtDsgB,GAAYS,eAAgBhvB,EAAEqH,UAAU7C,SAAQ,GACjDyJ,GAACsgB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,GACvCyJ,GAACsgB,GAAYW,QAASlvB,EAAEqH,UAAU7C,SAAQ,GAE1CyJ,KACFD,GAACsgB,GAAgBkB,WAAYL,GAA0BU,SAAM3hB,GAAA,CAAA,GAC1DqgB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,GACvC0J,KACFF,GAACsgB,GAAgBmB,QAASL,GAAuBS,SAAM1hB,GAAA,CAAA,GACpDogB,GAAYS,eAAgBhvB,EAAEqH,UAAU7C,SAAQ,GACjD2J,GAACogB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,GACvC2J,GAACogB,GAAYW,QAASlvB,EAAEqH,UAAU7C,SAAQ,GAE1C2J,KACFH,GAACsgB,GAAgBoB,aAAcL,GAA4BQ,SAAMzhB,GAAA,CAAA,GAC9DmgB,GAAYU,KAAMjvB,EAAEqH,UAAU7C,SAAQ,GACvC4J,KACFJ,KACFD,GAACsgB,GAAYyB,MAAOR,GAAWO,SAAMxhB,GAAA,CACnCzL,KAAM5C,EAAE6I,QAAQwlB,GAAYyB,QAC3BxB,GAAgBiB,SAAUR,GAC3B1gB,GAACigB,GAAgBkB,WAAYL,GAC7B9gB,GAACigB,GAAgBmB,QAASL,GAC1B/gB,GAACigB,GAAgBoB,aAAcL,GAC/BhhB,UAG2CmW,QAAK7V,GAAA,CAAA,GACjD0f,GAAYuB,SAAKhhB,GAAA,CAChBhM,KAAMyrB,GAAYuB,QACjBtB,GAAgBiB,SAAU,CAAE,EAC7B3gB,GAAC0f,GAAgBkB,WAAY,CAAE,EAC/B5gB,GAAC0f,GAAgBmB,QAAS,CAAE,EAC5B7gB,GAAC0f,GAAgBoB,aAAc,CAAE,EAClC9gB,IACDD,GAAC0f,GAAYyB,QAAIC,GAAA,CACfntB,KAAMyrB,GAAYyB,OACjBxB,GAAgBiB,SAAU,CAAE,EAC7BQ,GAACzB,GAAgBkB,WAAY,CAAE,EAC/BO,GAACzB,GAAgBmB,QAAS,CAAE,EAC5BM,GAACzB,GAAgBoB,aAAc,CAAE,EAClCK,SElIG,SAAUC,GAAwB/pB,GACtCgqB,EAAMvB,SAASpV,QAAQ4W,OAAO,mBAAqBjqB,CACrD,CAEM,SAAUkqB,GAAeC,GAC7BH,EAAMvB,SAASpV,QAAQ4W,OAAsB,cAAI,UAAYE,CAC/D,EDRA,SAAYvB,GACVA,EAAA,SAAA,WACAA,EAAA,eAAA,iBACAA,EAAA,YAAA,cACAA,EAAA,iBAAA,mBACAA,EAAA,sBAAA,wBACAA,EAAA,oBAAA,sBACAA,EAAA,aAAA,eACAA,EAAA,cAAA,gBACAA,EAAA,KAAA,OACAA,EAAA,KAAA,OACAA,EAAA,OAAA,SACAA,EAAA,QAAA,UACAA,EAAA,UAAA,YACAA,EAAA,QAAA,UACAA,EAAA,cAAA,gBACAA,EAAA,WAAA,aACAA,EAAA,iBAAA,mBACAA,EAAA,cAAA,gBACAA,EAAA,WAAA,aACAA,EAAA,UAAA,YACAA,EAAA,OAAA,SACAA,EAAA,MAAA,QACAA,EAAA,wBAAA,0BACAA,EAAA,MAAA,QACAA,EAAA,WAAA,aACAA,EAAA,MAAA,QACAA,EAAA,SAAA,WACAA,EAAA,UAAA,YACAA,EAAA,WAAA,aACAA,EAAA,QAAA,UACAA,EAAA,cAAA,gBACAA,EAAA,UAAA,YACAA,EAAA,aAAA,eACAA,EAAA,OAAA,SACAA,EAAA,mBAAA,qBACAA,EAAA,QAAA,UACAA,EAAA,OAAA,SACAA,EAAA,aAAA,eACAA,EAAA,gBAAA,kBACAA,EAAA,YAAA,cACAA,EAAA,WAAA,aACAA,EAAA,cAAA,gBACAA,EAAA,MAAA,QACAA,EAAA,iBAAA,mBACAA,EAAA,OAAA,SACAA,EAAA,UAAA,YACAA,EAAA,OAAA,QACD,CAhDD,CAAYA,KAAAA,GAgDX,CAAA,IAED,SAAYC,GACVA,EAAA,WAAA,aACAA,EAAA,WAAA,aACAA,EAAA,aAAA,eACAA,EAAA,aAAA,eACAA,EAAA,WAAA,aACAA,EAAA,aAAA,eACAA,EAAA,aAAA,eACAA,EAAA,aAAA,eACAA,EAAA,sBAAA,wBACAA,EAAA,kBAAA,oBACAA,EAAA,aAAA,eACAA,EAAA,kBAAA,oBACAA,EAAA,aAAA,eACAA,EAAA,kBAAA,oBACAA,EAAA,WAAA,aACAA,EAAA,WAAA,YACD,CAjBD,CAAYA,KAAAA,GAiBX,CAAA,IEjEM,IASMpkB,GAAW,SAACpC,EAAwBH,GAC/C,MAAA,iBAAiB5G,OAAA+G,GAAiB/G,OAAA4G,EAAY,IAAI5G,OAAA4G,GAAc,GAAhE,EAEIkoB,GAAY,aACLC,GAAgB,SAACrjB,GAAoB,MAAA,GAAA1L,OAAG8uB,GAAa,KAAA9uB,OAAA0L,EAAS,EAG9DsjB,GAAmBF,GACnBG,GAAmBH,GAE1BI,GAAe,YAYRC,GAAoB,cAEpBC,GAAgB,SAACC,EAAoBpmB,EAAsBU,GACtE,MAAA,UAAGwlB,GAAiB,gBAAAnvB,OAAeqvB,GAAUrvB,QAC5B,IAAfiJ,EAAsB,mBAAqB,WAC1CU,aAAI,EAAJA,EAAMsL,KAAI,SAACjJ,GAAQ,MAAA,SAAAhM,OAASgM,MAAOqM,KAAK,IAF3C,EAQWiX,GAAqB,WAAM,MAAA,GAAAtvB,OAAGmvB,GAAiB,YAE/CI,GAAqB,WAAM,MAAA,GAAAvvB,OAAGmvB,GAAiB,WAM/CK,GAAS,SAACC,EAAWJ,GAChC,MAAA,iBAAiBrvB,OAAAyvB,EAAgB,gBAAAzvB,OAAAqvB,EAAjC,EAyCW/R,GAAU,WAAM,MAAA,gBAEhBjd,GAAa,SAACO,GACzB,IAAAkB,EAAAlB,EAAAihB,KAAAA,OAAI,IAAA/f,EAAG,GAAEA,EACTuE,EAAOzF,EAAAyF,QACPqP,YACAhW,EAAQkB,EAAAlB,SASJuZ,GAAmB,IARfrY,EAAA8uB,SAQsB,GAAA1vB,OAAG2vB,oBAAwB,oBAAoB3vB,OAAA0V,GAa7E,GAXImM,GAAiB,KAATA,IACV5I,GAAO,IAAAjZ,OAAI6hB,IAGTniB,IACF2G,EACKiG,EAAAA,EAAA,CAAA,EAACjG,QAAAA,EAAW,CAAA,GAAG,CAClB3G,SAAQA,KAIR2G,GAAWmH,OAAOC,KAAKpH,GAAS+H,OAAS,EAAG,CAC9C,IAAMwhB,EAAc,IAAIC,gBAAgBxpB,GAAmCypB,WAC3E7W,GAAO,IAAAjZ,OAAI4vB,EACZ,CAED,OAAO3W,CACT,EAEa/Z,GAAS,SAAC0B,GAAE,IAAAkB,EAAAlB,EAAAihB,KAAAA,OAAI,IAAA/f,EAAG,GAAEA,EAAEuE,EAAOzF,EAAAyF,QACrC4S,EAAM,cAMV,GAJI4I,GAAiB,KAATA,IACV5I,GAAO,IAAAjZ,OAAI6hB,IAGTxb,GAAWmH,OAAOC,KAAKpH,GAAS+H,OAAS,EAAG,CAC9C,IAAMwhB,EAAc,IAAIC,gBAAgBxpB,GAAmCypB,WAC3E7W,GAAO,IAAAjZ,OAAI4vB,EACZ,CAED,OAAO3W,CACT,EAIa0W,GAAS,WAAM,MAAA,GAAG3vB,OAFJ,aAEW,YAIzB4d,GAAS,WAAM,MAAA,GAAG5d,OANJ,aAMW,YAIzB8a,GAAe,WAAM,MAAA,GAAG9a,OAAA4d,KAAQ,SAQhCmS,GAAiB,SAAChkB,GAAgB,MAAA,GAAG/L,OArErB,eAqEyC,YAAAA,OAAA+L,EAAK,EAoB9DikB,GAAY,SAACjkB,GAAgB,MAAA,GAAG/L,OAzFhB,eAyF6B,KAAAA,OAAA+L,EAAK,EAKlDkkB,GAAa3S,GAEb4S,GAAoBH,GAMpBI,GAAoBJ,GAYpBK,GAAU,SAACC,GAAqB,MAAA,GAAArwB,OADlB,aAC4B,KAAAA,OAAIqwB,EAASlwB,cAAe,EAKtEmwB,GAAmB,SAACtkB,GAC/B,MAAA,mBAAmB,MAAPA,GAAeA,EAAM,WAAIukB,mBAAmBvkB,IAAS,GAAjE,ECvMF,SAAewkB,GAAMvX,EAAajK,sFACf,KAAA,EAAA,MAAA,CAAA,EAAM0f,EAAM+B,KAAKxX,EAAKyX,KAAKC,UAAU3hB,GAAO,CAC3D+I,QAAS,CAAE,eAAgB,8BAE7B,MAAO,CAAA,EAHUnX,EAEfgwB,OACc5hB,YACjB,CA2CD,IAAI6hB,IAAe,EACfC,GAAoF,GAElFC,GAAe,SAACC,GACpB,OAAAR,GDY0B,SAACQ,GAC3B,MAAA,oBAAoBhxB,QAAU,IAAVgxB,EAAiB,cAAgB,GAArD,CCbMC,CAAuBD,GAA7B,EAEIE,GAA4B,SAACrC,GACjCD,GAAeC,GACfsC,OAAOC,cAAc,IAAIC,YAAY,eAAgB,CAAEC,OAAQzC,IACjE,EAEM0C,GAAe,SAAC3pB,EAA0BinB,QAAA,IAAAA,IAAAA,EAA2B,MACzEiC,GAAYpjB,SAAQ,SAAC8jB,GACf5pB,EACF4pB,EAAKC,OAAO7pB,GAEZ4pB,EAAKE,QAAQ7C,EAEjB,IACAiC,GAAc,EAChB,EAEApC,EAAMiD,aAAaC,SAASC,KAC1B,SAACD,GAAa,OAAAA,CAAQ,IACtB,SAAOhqB,GAAK,OAAAkqB,OAAA,OAAA,OAAA,GAAA,+EAEV,GADMC,EAAkBnqB,EAAMoqB,QACzBpqB,EAAMgqB,SACT,MAAA,CAAA,EAAOK,QAAQR,OAAO7pB,IAGpB,GAA0B,MAA1BA,EAAMgqB,SAASM,QAAmBH,EAAgBI,OAAlD,MAAwD,CAAA,EAAA,IAItD,GAHJ9e,QAAQiX,KAAK,+BACbyH,EAAgBI,QAAS,GAErBtB,GAAA,MAAY,CAAA,EAAA,oBAEE,6BAAA,CAAA,EAAM,IAAIoB,SAAQ,SAACP,EAASD,GACxCX,GAAY1d,KAAK,CAAEse,QAAOA,EAAED,OAAMA,GACnC,YAEM,OAJD5C,EAAQrsB,EAEZouB,OACFmB,EAAgBha,QAAuB,cAAI,UAAY8W,EAChD,CAAA,EAAMH,EAAMqD,IAAnB,KAAA,EAAA,MAAA,CAAA,EAAOvvB,iBAEP,kBAAA,CAAA,EAAOyvB,QAAQR,OAAOW,WAI1BvB,IAAe,mBAGI,iCAAA,CAAA,EAAME,IAEiC,aAAtDnwB,EAAAmxB,EAAgB9Y,0BAAKzU,SAAS,8BAK5B,OAPEotB,EAAWpvB,EAGhBouB,QAEK/B,EAA2B,QAAnB/sB,EAAA8vB,aAAA,EAAAA,EAAU/C,aAAS,IAAA/sB,EAAAA,EAAA,KAG/BiwB,EAAgBha,QAAuB,cAAI,UAAY8W,EACvDqC,GAA0BrC,GAC1B0C,GAAa,KAAM1C,GACZ,CAAA,EAAMH,EAAMqD,KAJZ,CAAA,EAAA,GAIP,KAAA,EAAA,MAAA,CAAA,EAAOvvB,iBACE2uB,OAAOkB,SAASC,KAAK9tB,SAAS,UACvC6O,QAAQkf,IACN,gEAAAvyB,OAAgE+xB,EAAgB9Y,MAGlFkY,OAAOkB,SAASC,KAAO,iDAIzB,kBADAf,GAAaiB,EAAmB,MAChC,CAAA,EAAOP,QAAQR,OAAOe,mBAEtB3B,IAAe,MAInB,KAAA,GAAA,MAAA,CAAA,EAAOoB,QAAQR,OAAO7pB,OACvB,GAAA,IAGH,IAAe6qB,GAAA,CACbC,IA1IF,SAAuBzZ,EAAa5S,6FACjB,MAAM,CAAA,EAAAqoB,EAAMgE,IAAIzZ,EAAU3M,EAAA,CAAA,EAAAjG,YAC3C,MAAO,CAAA,EADUzF,EAAoCgwB,OACrC5hB,YACjB,EAwIC2jB,YAtIF,SAA+B1Z,EAAa5S,6FACnC,MAAM,CAAA,EAAAqoB,EAAMgE,IAAIzZ,EAAU3M,EAAA,CAAA,EAAAjG,KAAjC,KAAA,EAAA,MAAA,CAAA,EAAOzF,gBACR,EAqIC6vB,KAAMD,GACNoC,cA7HF,SAA8B3Z,EAAa4Z,EAAoBxsB,sFAC5C,KAAA,EAAA,MAAA,CAAA,EAAMqoB,EAAM+B,KAAKxX,EAAK4Z,EAClCvmB,EAAAA,EAAA,CAAA,EAAAjG,GACH,CAAA0R,QAAS,CAAE,eAAgB,kCAE7B,MAAO,CAAA,EAJUnX,EAGfgwB,OACc5hB,YACjB,EAwHC8jB,QAtHF,SAAwB7Z,EAAa4Z,EAAoBxsB,6FACtC,MAAM,CAAA,EAAAqoB,EAAM+B,KAAKxX,EAAK4Z,EAClCvmB,EAAAA,EAAA,CAAA,EAAAjG,GACH,CAAA0R,QAAS,CAAE,eAAgB,uBAC3Bgb,aAAc,yBAEhB,MAAO,CAAA,EALUnyB,EAIfgwB,OACc5hB,YACjB,EAgHCgkB,IA9GF,SAAoB/Z,EAAajK,sFACd,KAAA,EAAA,MAAA,CAAA,EAAM0f,EAAMsE,IAAI/Z,EAAKyX,KAAKC,UAAU3hB,GAAO,CAC1D+I,QAAS,CAAE,eAAgB,8BAE7B,MAAO,CAAA,EAHUnX,EAEfgwB,OACc5hB,YACjB,EA0GCikB,OAxGF,SAA0Bha,sFACP,KAAA,EAAA,MAAA,CAAA,EAAMyV,EAAMuE,OAAOha,WACpC,MAAO,CAAA,EADUrY,EAAuBgwB,OACxB5hB,YACjB,EAsGCkkB,kBApGF,SAAqCja,EAAa5S,6FAC/B,MAAM,CAAA,EAAAqoB,EAAMuE,OAAOha,EAAU3M,EAAA,CAAA,EAAAjG,YAC9C,MAAO,CAAA,EADUzF,EAAuCgwB,OACxC5hB,YACjB,EAkGCmkB,MAhGF,SAAsBla,EAAajK,sFAChB,KAAA,EAAA,MAAA,CAAA,EAAM0f,EAAMyE,MAAMla,EAAKyX,KAAKC,UAAU3hB,GAAO,CAC5D+I,QAAS,CAAE,eAAgB,8BAE7B,MAAO,CAAA,EAHUnX,EAEfgwB,OACc5hB,YACjB,EA4FC+hB,aAAYA,GACZG,0BAAyBA,0EC7IzBxxB,EACA0zB,EACA9kB,GAEA,OAAOmkB,GAAQhC,KFcW,SAAC/wB,GAAqB,MAAA,YAAYM,OAAAN,EAAgB,UEdxD2zB,CAAuB3zB,GAAW,CAAE4zB,IAAK,CAAEF,SAAQA,EAAE9kB,QAAOA,IAClF,yBAutBE,OAAOmkB,GAAQhC,KFxgBoB,yBEygBrC,uBApBgB,SACd1pB,EACAwsB,GAEA,OAAOd,GAAQO,IF7fmB,SAACjsB,GACnC,MAAA,GAAG/G,OAAAswB,KAAkB,WAAAtwB,OAAU+G,EAA/B,CE4fmBysB,CAA+BzsB,GAAiBwsB,EACrE,sBAjHM,SACJA,GAEA,OAAOd,GAAQhC,KAAKgD,KAAgC,CAAEH,IAAKC,GAC7D,WAlTwB,SAAqB3yB,OAC3C8yB,EAAM9yB,EAAA8yB,OACNC,EAAU/yB,EAAA+yB,WAKV,OAAOlB,GAAQhC,KACbmD,GAAiB,CACf/R,KAAM,SAAS7hB,OAAA0zB,EAAa,WAE9BC,EAEJ,mCAkPE,OAAOlB,GAAQhC,KAAKoD,KAAgC,CAAEP,IAAK,CAAE,GAC/D,cAzK2B,SAAC1yB,OAAKoO,EAAIkW,EAAAtkB,EAAT,IAC1B,OAAO6xB,GAAQhC,KAAKmD,GAAiB,CAAA,GAAK5kB,EAC5C,kBApN+B,SAACpO,GAC9B,IAAA8U,EAAO9U,EAAA8U,QACJ1G,EAAIkW,EAAAtkB,EAFuB,aAI9B,OAAO6xB,GAAQhC,KAAKqD,GAAqB,CAAEpe,YAAY1G,EACzD,wBAggBM,SACJukB,GAEA,OAAOd,GAAQhC,KAAKsD,KAA8BR,EACpD,eAxmBM,SAAuBA,GAC3B,OAAOd,GAAQhC,KF1CY,eE0Cc8C,EAC3C,eAsiBM,SAAuBA,GAC3B,OAAOd,GAAQhC,KAAKuD,KAAwBT,EAC9C,mBArlBM,SAA2BA,GAC/B,OAAOd,GAAQhC,KAAKwD,GAA4BV,EAClD,eAuU4B,SAAO3yB,GACjC,IAAAiJ,EAAYjJ,EAAAiJ,aACZqqB,EAAStzB,EAAAszB,UACTv0B,EAAKiB,EAAAjB,MACL+V,EAAO9U,EAAA8U,QACPhW,EAAQkB,EAAAlB,8EAER,MAAA,CAAA,EAAA+yB,GAAQQ,OACNa,GAAqB,CACnBjS,KAAM,WAAW7hB,OAAA6J,cAAgBqqB,EAAS,KAAAl0B,OAAIL,GAC9C+V,QAAOA,EACPhW,SAAQA,yBAmCa,SAACkB,GAAE,IAAAkJ,EAAQlJ,EAAAkJ,SACpC,OAAO2oB,GAAQQ,OACbW,GAAiB,CACf/R,KAAM/X,IAGZ,oBAkCiC,SAAOlJ,OACtCkJ,EAAQlJ,EAAAkJ,SACRoqB,EAAStzB,EAAAszB,+EAET,MAAA,CAAA,EAAAzB,GAAQQ,OACNW,GAAiB,CACf/R,KAAM,WAAA7hB,OAAW8J,EAAQ,KAAA9J,OAAIk0B,8BAhPJ,SAACtzB,OAC9BiJ,EAAYjJ,EAAAiJ,aACZlK,EAAKiB,EAAAjB,MACLD,EAAQkB,EAAAlB,SACRgW,EAAO9U,EAAA8U,QAEP,OAAO+c,GAAQQ,OACba,GAAqB,CACnBjS,KAAMhY,EACNxD,QAAS,CAAE1G,QAAOD,YAClBgW,QAAOA,IAGb,qBA4TM,SAA6B6d,GAEjC,OAAOd,GAAQhC,KAAKoD,KAAgC,CAAEP,IAAKC,GAC7D,wBA0JM,SAAgCvnB,GACpC,OAAOymB,GAAQQ,OAAOc,GAA2B/nB,GACnD,cAjM2B,SAAOunB,GAKjC,OAAAzB,OAAA,OAAA,OAAA,GAAA,sCACC,MAAA,CAAA,EAAAW,GAAQS,kBFxYiB,aEwYoB,CAC3ClkB,KAAMukB,yBAhbJ,SAAuBD,GAC3B,OAAOb,GAAQhC,KFhDiB,sBEgDc6C,EAChD,eAwiBM,SAAuBC,GAC3B,OAAOd,GAAQQ,OF/cW,SAACryB,OAAEmL,EAAGnL,EAAAmL,IAAEooB,EAAOvzB,EAAAuzB,QACzC,MAAO,GAAAn0B,OAzGoB,eAyGR,KAAAA,OAAI+L,EAAe,aAAA/L,OAAAm0B,EACxC,CE6cwBC,CAAuBb,GAC/C,oBAYM,SAA4BnyB,GAChC,OAAOqxB,GAAQQ,OAAOoB,GAA4BjzB,GACpD,mBArmBM,SAA2BsK,GAC/B,OAAO+mB,GAAQQ,OAAOqB,GAAwB5oB,GAChD,wBApCE,OAAO+mB,GAAQQ,OFpBe,mBEqBhC,mBAmhBM,SAA2BM,GAC/B,OAAOd,GAAQhC,KFhgBqB,GAAAzwB,OAAGmvB,GAAiB,SEggBNoE,EACpD,WA6DM,SAAmBA,GACvB,OAAOd,GAAQhC,KFvkBa,GAAAzwB,OAAGmvB,GAAiB,cEukBNoE,EAC5C,iBA/b8B,WAC5B,OAAOd,GAAQC,IFvHgB,iBEwHjC,wBAoME,OAAOD,GAAQC,IACbkB,GAAiB,CACf/R,KAAM,YAGZ,eAyB4B,SAACjhB,GAAE,IAAAkJ,EAAQlJ,EAAAkJ,SACrC,OAAO2oB,GAAQC,IACbkB,GAAiB,CACf/R,KAAM/X,IAGZ,gCAgOE,OAAO2oB,GAAQC,IFjbuB,GAAG1yB,OA9Gd,eA8GuB,QEkbpD,mBAtbgC,SAACY,GAC/B,IAAAlB,aACAmK,EAAYjJ,EAAAiJ,aACZ6L,EAAO9U,EAAA8U,QAMP,OAAO+c,GAAQC,IACboB,GAAqB,CACnBjS,KAAMhY,EACNnK,SAAQA,EACRgW,QAAOA,IAGb,mBA+CM,SAA2B9U,OAC/BlB,EAAQkB,EAAAlB,SACRgW,EAAO9U,EAAA8U,QAKP,OAAK6e,EAAuB70B,GAGrB+yB,GAAQC,IACboB,GAAqB,CACnBjS,KAAM,YACNnM,QAAOA,EACPrP,QAAS,CAAE3G,SAAQA,GACnBA,SAAUA,KAPLuyB,QAAQP,QAAQ,GAU3B,yBAuKsC,WACpC,OAAOe,GAAQC,IACbkB,GAAiB,CACf/R,KAAM,UAGZ,sBAjSmC,WACjC,OAAO4Q,GAAQC,IF5EY,eE6E7B,oBAsHiC,SAC/BxyB,EACAwV,GAEA,IAAImM,EAAO,GACX,GAAI0S,EAAuBr0B,GAAY,CAErC2hB,EAAOiS,GAAqB,CAC1BjS,KAAM,QACNniB,SAHeQ,EAIfwV,QAASA,QAAAA,EAAW8e,GAJLt0B,IAMlB,MACC2hB,EAAO+R,GAAiB,CACtB/R,KAAM,UAIV,OAAO4Q,GAAQC,IAAI7Q,EACrB,uBA6bE,OAAO4Q,GAAQC,IF3gBW,cE4gB5B,2BAvEE,OAAOD,GAAQC,IF7dkB,kBE8dnC,wBA9JqC,SAAOzZ,GAAW,OAAA6Y,OAAA,OAAA,OAAA,GAAA,sCACrD,MAAA,CAAA,EAAOW,GAAQE,YAAY1Z,EAAK,CAC9B8Z,aAAc,OACdhb,QAAS,CACP0c,OAAQ,0DAkFR,SAA8BrzB,GAClC,OAAOqxB,GAAQC,IFzjBe,SAACtxB,GAAe,MAAA,GAAApB,OAAGmvB,GAAqB,KAAAnvB,OAAAoB,EAAI,CEyjBvDszB,CAA2BtzB,GAChD,iCAiGE,OAAOqxB,GAAQC,IAAIqB,KACrB,mBAxGM,SAA2B1E,GAC/B,OAAOoD,GAAQC,IAAIiC,GAAwBtF,GAC7C,wBAnDqC,WACnC,OAAOoD,GAAQC,IF3Y0B,GAAG1yB,OAAA4d,KAAQ,eE4YtD,6BAlX0C,WACxC,OAAO6U,GAAQC,IF7H4B,iCE8H7C,gBA6J6B,WAC3B,OAAOD,GAAQC,IAAI,GAAA1yB,OF1MM,aE0MuB,WAClD,kBAqK+B,SAAO40B,EAAgBC,GAAe,OAAA/C,OAAA,OAAA,OAAA,GAAA,sCACnE,MAAA,CAAA,EAAOW,GAAQE,YAAY,UFjXF,aEiXmC,cAAA3yB,OAAA40B,EAAU,KAAA50B,OAAA60B,GAAW,CAC/E9B,aAAc,OACdhb,QAAS,CACP0c,OAAQ,+CA/KU,WACtB,OAAOhC,GAAQC,IFtMU,aEuM3B,iBA3M8B,WAC5B,OAAOD,GAAQC,IFjEgB,mBEkEjC,uBA/GM,SAA+B3rB,GACnC,MAAuB,QAAnBA,EACKkrB,QAAQP,QAAQ,IAElBe,GAAQC,IAAIoC,GAAmB/tB,GACxC,YAkJyB,WAAA,OAAA+qB,OAAA,OAAA,OAAA,GAAA,sCACvB,MAAO,CAAA,EAAAW,GAAQC,IFvHW,6CE8B1B,OAAOD,GAAQC,IFtCY,eEuC7B,YAohBM,SAAoBtxB,GACxB,OAAOqxB,GAAQC,IAAIqC,GAAoB3zB,GACzC,iBAgBM,SAAyBA,GAC7B,OAAOqxB,GAAQC,IAAIsC,GAAyB5zB,GAC9C,kBARM,SACJ4d,GAEA,OAAOyT,GAAQC,IF9dyB,SAAC1T,GACzC,IAAI/F,EAAM,GAAAjZ,OAxEiB,0BAyE3B,GAAIwN,OAAOC,KAAKuR,GAAQ5Q,OAAS,EAAG,CAClC,IAAMwhB,EAAc,IAAIC,gBAAgB7Q,GAAkC8Q,WAC1E7W,GAAO,IAAAjZ,OAAI4vB,EACZ,CACD,OAAO3W,CACT,CEudqBgc,CAAqCjW,GAC1D,aAZM,SAAqBA,GACzB,OAAOyT,GAAQC,IF3coB,SAAC1T,GACpC,IAAI/F,EAjFuB,eAkF3B,GAAIzL,OAAOC,KAAKuR,GAAQ5Q,OAAS,EAAG,CAClC,IAAMwhB,EAAc,IAAIC,gBAAgB7Q,GAAkC8Q,WAC1E7W,GAAO,IAAAjZ,OAAI4vB,EACZ,CACD,OAAO3W,CACT,CEocqBic,CAAgClW,GACrD,mBAgDM,SACJmW,GAEA,OAAO1C,GAAQC,KFpfgBp0B,EEofe62B,EAAU72B,MFpfV82B,EEofiBD,EAAUC,KFnfzE,UA5F2B,wCA4FE92B,EAAK,UAAA0B,OAASo1B,KADb,IAAC92B,EAAe82B,CEqfhD,UAGM,SAAkB/E,GACtB,OAAOoC,GAAQC,IAAI2C,GAAkBhF,GACvC,8BApkBE,OAAOoC,GAAQC,IFxDkB,qBEyDnC,gBA7DM,SAAwBhnB,GAC5B,OAAO+mB,GAAQC,IAAI4B,GAAwB5oB,GAC7C,oBAdM,SAA4BA,GAChC,OAAO+mB,GAAQC,IAAI4B,GAAwB5oB,GAC7C,mBAsIgC,WAC9B,OAAO+mB,GAAQC,IFpFW,cEqF5B,eA0J4B,SAAC4C,GAC3B,OAAO7C,GAAQC,IACbkB,GAAiB,CACf/R,KAAM,cACNxb,QAASivB,IAGf,qBA/NE,OAAO7C,GAAQC,IFhHS,YEiH1B,4BAGE,OAAOD,GAAQC,IFlHY,eEmH7B,0BA6mBE,OAAOD,GAAQC,IFrgBc,kBEsgB/B,yBApbsC,SACpC4C,GAEA,OAAO7C,GAAQC,IACbkB,GAAiB,CACf/R,KAAM,SAAA7hB,OAASs1B,EAAO5B,OAAa,WAGzC,YA6OyB,WACvB,OAAOjB,GAAQC,IFzYuB,GAAG1yB,OAAA8a,KAAc,WE0YzD,yBAwLE,OAAO2X,GAAQC,IF/tBW,UEguB5B,0BA5PuC,SAAC1jB,GACtC,OAAOyjB,GAAQG,cFvbuB,GAAA5yB,OAAGmvB,GAAiB,WEubGngB,EAC/D,aAlD0B,SAACsmB,GACzB,OAAO7C,GAAQC,IACbkB,GAAiB,CACfvtB,QAASivB,IAGf,iBAjM8B,SAC5BA,EACA5f,GAEA,OAAO+c,GAAQC,IACboB,GAAqB,CACnBpe,QAAOA,EACPrP,QAASivB,IAGf,oBAyTiC,SAC/BA,WAGMjG,aAAciG,aAAA,EAAAA,EAAQjG,0BAAc,MAAQ,IAC5CpmB,EAA+B,QAAlBnH,EAAAwzB,aAAM,EAANA,EAAQrsB,kBAAU,IAAAnH,GAAAA,EAC/B6H,GAAO2rB,aAAM,EAANA,EAAQ3rB,OAAQ,GAC7B,OAAO8oB,GAAQC,IAAIiC,GAAwBtF,EAAYpmB,EAAYU,GACrE,2BAEwC,SACtC2rB,WAEMjG,aAAciG,aAAA,EAAAA,EAAQjG,0BAAc,MAAQ,IAC5CkG,EAAiC,QAAnBzzB,EAAAwzB,aAAM,EAANA,EAAQC,mBAAW,IAAAzzB,EAAAA,EAAI,GAE3C,MAAoB,KAAhByzB,EACK9C,GAAQC,IAAI8C,GAAiBD,EAAalG,IAE1CoD,GAAQC,IAAIiC,GAAwBtF,GAE/C,kBAxiB+B,SAC7BiG,WAEMjG,aAAciG,aAAA,EAAAA,EAAQjG,0BAAc,MAAQ,IAC5CzjB,EAA2B,QAAhB9J,EAAAwzB,aAAM,EAANA,EAAQ1pB,gBAAQ,IAAA9J,GAAAA,EACjC,OAAO2wB,GAAQC,IFhCa,SAACrD,EAAoBzjB,GACjD,MAAA,UAAGkjB,GAAS,gBAAA9uB,OAAeqvB,EAAU,cAAArvB,OAAa4L,EAAlD,CE+BmB6pB,CAAyBpG,EAAYzjB,GAC1D,QA6EqB,SAAC2nB,GACpB,OAAOd,GAAQhC,KF1DU,kBE0Dc8C,EACzC,SAEsB,WACpB,OAAOd,GAAQhC,KF5DW,mBE6D5B,uBAohBM,SAA+BrvB,GACnC,OAAOqxB,GAAQU,MFvd+B,GAAGnzB,OAAAgwB,GEudF5uB,GFvdkC,oBEwdnF,qCAmEE,OAAOqxB,GAAQhC,KAAKsD,GAA2B,WACjD,WAxlBwB,SAACR,GACvB,OAAOd,GAAQhC,KF9Da,qBE8Dc8C,EAC5C,uBASoC,SAClCA,GAEA,OAAOd,GAAQhC,KFlEyB,iCEkEc8C,EACxD,0BAUuC,SACrCA,GAEA,OAAOd,GAAQhC,KF1E4B,0BE0Ec8C,EAC3D,gBAZ6B,SAACA,GAC5B,OAAOd,GAAQhC,KFpEkB,0BEoEc8C,EACjD,+BAhIE,OAAOd,GAAQQ,OFIsB,GAAAjzB,OAAGkvB,GAAY,aEHtD,gBANM,SAAwB7tB,GAC5B,OAAOoxB,GAAQQ,OFMY,SAAC5xB,GAAiB,MAAA,GAAArB,OAAGkvB,GAAgB,KAAAlvB,OAAAqB,EAAM,CENhDq0B,CAAwBr0B,GAChD,sBA+jBmC,SACjCouB,EACAJ,GAAkB,OAAAyC,OAAA,OAAA,OAAA,GAAA,sCAElB,MAAA,CAAA,EAAOW,GAAQC,IAAI8C,GAAiB/F,EAAGJ,yBA1Db,SAACrgB,GAC3B,OAAOyjB,GAAQG,cFvYiB,GAAG5yB,OAAA4d,KAAQ,QEuYY5O,EACzD,eAE4B,SAACA,GAC3B,OAAOyjB,GAAQK,QFvYuB,GAAG9yB,OAAA8a,KAAc,WEuYA9L,EACzD,eAxL4B,SAACA,GACnB,IAAAnF,EAAmCmF,EAAvBnF,aAAE6L,EAAqB1G,EAAd0G,QAAKigB,EAASzQ,EAAAlW,EAArC,CAAA,eAAA,YACN,OAAOyjB,GAAQhC,KACbqD,GAAqB,CACnBjS,KAAM,WAAW7hB,OAAA6J,GACjB6L,QAAOA,IAETigB,EAEJ,cAyC2B,SAAC/0B,OAC1BkJ,EAAQlJ,EAAAkJ,SACRkF,EAAIpO,EAAAoO,KAKJ,OAAOyjB,GAAQU,MACbS,GAAiB,CACf/R,KAAM/X,IAERkF,EAEJ,oBA8BiC,SAC/BA,GAEQ,IAAAlF,EAAsBkF,EAAdlF,SAAK6rB,EAAIzQ,EAAKlW,EAAxB,CAAqB,aAC3B,OAAOyjB,GAAQhC,KACbmD,GAAiB,CACf/R,KAAM,WAAW7hB,OAAA8J,KAEnB6rB,EAEJ,yBAuOM,SACJR,GAEA,OAAO1C,GAAQO,KF5esB3C,EE4ee8E,EAAU9E,SF5eJ,GAAGrwB,OAAAowB,GAAQC,GAAkB,YE4ed8E,EAAUS,SF5e/C,IAACvF,CE6evC,kBAre+B,SAACzvB,GAC9B,IAAAiJ,iBACAmF,EAAIpO,EAAAoO,KACJ0G,EAAO9U,EAAA8U,QAMP,OAAO+c,GAAQU,MACbW,GAAqB,CACnBjS,KAAMhY,EACN6L,QAAOA,IAET1G,EAEJ,qBA0XM,SACJukB,GAEA,OAAOd,GAAQhC,KAAKgD,KAAgC,CAAEH,IAAKC,GAC7D,wBAoGgB,SACdvnB,EACAunB,GAEA,OAAOd,GAAQO,IAAIe,GAA2B/nB,GAAMunB,EACtD,gBA9oBM,SAAwBA,GACpB,IAAAxsB,EAAoCwsB,EAAOxsB,eAA3BH,EAAoB2sB,EAAO3sB,UAAhBY,EAAS+rB,OAC5C,IAAKxsB,EACH,MAAM,IAAIgc,MAAM,8BAGlB,OAAO0P,GAAQO,IAAI8B,GAAmB/tB,EAAgBH,GAAY,CAAEY,KAAIA,GAC1E,uBAEM,SAA+B+rB,GAC3B,IAAAxsB,EAA2CwsB,iBAA3B3sB,EAA2B2sB,EAAO3sB,UAAvB8a,EAAgB6R,EAAX7R,MAAEla,EAAS+rB,OACnD,IAAKxsB,EACH,MAAM,IAAIgc,MAAM,8BAGlB,OAAO0P,GAAQO,IAAI8B,GAAmB/tB,EAAgBH,GAAY,CAAEY,KAAIA,EAAEka,MAAKA,GACjF,eAmBM,SAAuB6R,GAC3B,OAAOd,GAAQhC,KF9CY,eE8Cc8C,EAC3C,oBAsiBM,SACJ4B,GAEA,OAAO1C,GAAQU,MAAM0C,GAA4BV,EAAU/zB,IAAK+zB,EAAU5B,QAC5E,qBAUM,SACJ4B,GAEA,OAAO1C,GAAQU,OF/dkBpnB,EE+diBopB,EAAU/zB,GF/dX,GAAGpB,OAAAgwB,GAAUjkB,GAAa,YE+dVopB,EAAU5B,SF/d3C,IAACxnB,CEgenC,0BAqBM,SACJopB,GAEA,OAAO1C,GAAQO,KFveuB3C,EEuee8E,EAAU9E,SFveJ,GAAGrwB,OAAAowB,GAAQC,GAAmB,aEuef8E,EAAUS,SFve/C,IAACvF,CEwexC,mBA9nBM,SAA2BkD,GAC/B,OAAOd,GAAQU,MAAM2C,GAA4BvC,EACnD,mBA6DgC,SAAC/rB,GAC/B,OAAOirB,GAAQhC,KFxDc,iBEwDc,CAAE6C,IAAK9rB,GACpD,gBAvCM,SAAwB+rB,GAE5B,IADkBA,EAAO7uB,MAEvB,MAAM,IAAIqe,MAAM,qBAGlB,OAAO0P,GAAQO,IFpES9D,GEoEaqE,EACvC,oBA6EiC,SAACA,GAChC,OAAOd,GAAQhC,KFnKgB,oBEmKc8C,EAC/C,oBA+UiC,SAACvkB,GAChC,OAAOyjB,GAAQG,cACb,GAAG5yB,OAAA+1B,wBAA6B/mB,EAAKlF,SAAiB,WACtDkF,EAAK6jB,SAET,wBAjBqC,SAAC7jB,GACpC,OAAOyjB,GAAQG,cACbkB,GAAqB,CACnBpE,UAAU,EACV7N,KAAM,GAAA7hB,OAAGgP,EAAKnF,aAAqB,WACnCxD,QAAS,CAAE1G,MAAOqP,EAAKrP,MAAOD,SAAUsP,EAAKtP,UAC7CgW,QAAS1G,EAAK0G,UAEhB1G,EAAK6jB,SAET,eAd4B,SAAC7jB,GAC3B,OAAOyjB,GAAQG,cFtVW,GAAG5yB,OAAA2vB,KAAQ,WEsVY3gB,EACnD,aAtI0B,SAACA,EAAgBgnB,GACzC,IAAMC,EAAgBD,EAAS,CAAEA,OAAMA,QAAKryB,EAC5C,OAAO8uB,GAAQG,cFvNU,aEuNuB5jB,EAAMinB,EACxD,cAX2B,SACzBjnB,EACAgnB,GAEA,IAAMC,EAAgBD,EAAS,CAAEA,OAAMA,QAAKryB,EAC5C,OAAO8uB,GAAQG,cAAcmD,KAAoB/mB,EAAMinB,EACzD,eA1N4B,SAAC50B,GAC3B,OAAAoxB,GAAQC,IFlHkB,SAACrxB,GAAiB,MAAA,GAAArB,OAAGkvB,GAAqB,UAAAlvB,OAAAqB,EAAM,CEkH9D60B,CAAuB70B,GAAnC,cAgByB,SAACkyB,GAC1B,OAAOd,GAAQhC,KFtEgB,mBEsEc8C,EAC/C,IChHM,SAAU4C,GAAKlwB,GACnB,OAAOmwB,EAAOC,WAAW,QAAQC,OAAOrwB,GAAOswB,OAAO,MACxD,CAEgB,SAAAC,GAAUC,EAAgB5U,GACxC,IAAM6U,EAAcD,EAAOE,QAAQ,MAAO,IACpCC,EAAY/U,EAAK8U,QAAQ,MAAO,IAChCE,EAAU,GAAA72B,OAAG02B,EAAe,KAAA12B,OAAA42B,GAClC,OAAO,IAAIE,EAAID,GAAS/G,UAC1B,CAEA,IAAMiH,GAA8E,CAClFr4B,OAAQ,SAACsW,GACP,GAAIA,EAAO+T,KACT,OAAOtqB,EAAEsqB,KAAK/T,EAAO+T,MAGvB,IAAIiO,EAAev4B,EAAEC,SAOrB,YANyBiF,IAArBqR,EAAOiiB,YACTD,EAAeA,EAAa7zB,IAAI6R,EAAOiiB,iBAEhBtzB,IAArBqR,EAAOkiB,YACTF,EAAeA,EAAa5zB,IAAI4R,EAAOkiB,YAElCF,CACR,EACDtwB,OAAQ,SAACsO,GACP,IAAImiB,EAAe14B,EAAEiI,SAOrB,YANuB/C,IAAnBqR,EAAOoiB,UACTD,EAAeA,EAAah0B,IAAI6R,EAAOoiB,eAElBzzB,IAAnBqR,EAAOqiB,UACTF,EAAeA,EAAa/zB,IAAI4R,EAAOqiB,UAElCF,CACR,EACDG,QAAS,SAACtiB,GAAW,OAAC+hB,GAAmBrwB,OAAOsO,GAAwBuiB,KAAK,EAC7EzxB,QAAS,WAAM,OAAArH,EAAEqH,SAAS,EAC1BH,MAAO,SAACqP,GACN,GAAIA,EAAOkU,MAAO,CAChB,IAAMJ,EAAY0O,GAAmBxiB,EAAOkU,OAC5C,OAAIJ,EACKrqB,EAAEkH,MAAMmjB,GAGVrqB,EAAEkH,MAAMlH,EAAE2L,UAClB,CACD,OAAO3L,EAAEkH,MAAMlH,EAAE2L,UAClB,EACDhF,OAAQ,SAAC4P,GACP,IAAMzF,EAAyC,CAAA,EAY/C,OAXIyF,EAAOpS,YACT4K,OAAO4B,QAAQ4F,EAAOpS,YAAY8K,SAAQ,SAAC9M,OAAC+M,EAAG/M,EAAA,GAAE8D,EAAK9D,EAAA,GAC9CkoB,EAAY0O,GAAmB9yB,GACrC6K,EAAM5B,GAAOmb,GAAarqB,EAAE2L,UACxB4K,EAAOnS,UAAYmS,EAAOnS,SAAS2B,SAASmJ,GAC9C4B,EAAM5B,GAAO4B,EAAM5B,GAAK0b,SAAS3kB,EAAMpD,aAAe,IAEtDiO,EAAM5B,GAAO4B,EAAM5B,GAAK/H,WAAWyjB,SAAS3kB,EAAMpD,aAAe,GAErE,IAEK7C,EAAE2G,OAAOmK,EACjB,GAGH,SAASioB,GAAmBxiB,GAC1B,GAAoB,WAAhBA,EAAOvS,MAAqE,IAAhD+K,OAAOC,KAAKuH,EAAOpS,YAAc,CAAA,GAAIwL,OAKrE,OADgB2oB,GAAmB/hB,EAAOvS,OAAe,WAAW,OAAAhE,EAAE2L,SAAS,GAChE4K,EACjB,CAEA,IAAAyiB,GAAA,WAKE,SAAAA,EAAYp2B,EAAcC,EAAqBqB,GAC7C+0B,KAAKr2B,KAAOA,EACZq2B,KAAKp2B,YAAcA,EACnBo2B,KAAK/0B,WAAaA,CACnB,CAYH,OAVE80B,EAAAE,UAAAC,aAAA,WACE,MAAO,CACLn1B,KAAMpF,EAAMqF,SACZA,SAAU,CACRrB,KAAMq2B,KAAKr2B,KACXC,YAAao2B,KAAKp2B,YAClBqB,WAAY+0B,KAAK/0B,cAIxB80B,CAAD,IACAI,GACE,SACWpB,EACAqB,EACAC,EACAC,EACAC,EACAC,GALAR,KAAMjB,OAANA,EACAiB,KAAQI,SAARA,EACAJ,KAAMK,OAANA,EACAL,KAASM,UAATA,EACAN,KAAeO,gBAAfA,EACAP,KAAWQ,YAAXA,CACP,EAGNC,GAAA,WAOE,SAAAA,EAAoBnG,GAAA0F,KAAM1F,OAANA,EAHZ0F,KAAWU,YAA2B,GAI5CV,KAAK7V,KAAOmQ,EAAO8F,QACpB,CA8GH,OA5GEK,EAASR,UAAAU,UAAT,SAAU/C,GACRoC,KAAKY,cAAgBnC,GAAKzF,KAAKC,UAAU2E,IACzCoC,KAAKpC,OAAS9nB,OAAO+qB,OAAO,CAAE,EAAEjD,GAEhC,IAA2B,IAAsB7S,EAAA,EAAtB7hB,EAAA4M,OAAO4B,QAAQkmB,GAAf7S,EAAA7hB,EAAAwN,OAAAqU,IAAwB,CAAxC,IAAA3gB,OAAC6L,EAAG7L,EAAA,GAAE4C,EAAK5C,EAAA,GACd02B,EAAe,IAAIx4B,OAAA2N,OACrB+pB,KAAK7V,KAAKrd,SAASg0B,KACrBd,KAAK7V,KAAO6V,KAAK7V,KAAK8U,QAAQ6B,EAAcjI,mBAAmB7rB,WACvDgzB,KAAKpC,OAAmC3nB,GAEnD,CACD,OAAO+pB,MAGHS,EAAOR,UAAAc,QAAb,SAAcC,+HACZ,OAAKA,EAASC,MAIR/3B,EAUF83B,EAASC,KATXl2B,SAEAm2B,EAAkBh4B,EAAAg4B,mBAClBC,EAAkBj4B,EAAAi4B,mBAElBC,EAAiBl4B,EAAAk4B,kBACjBC,EAAUn4B,EAAAm4B,WACVC,EAAKp4B,EAAAo4B,MACLC,EAAqBr4B,EAAAq4B,sBAKrBC,EAIER,EAJKQ,QAEPC,EAEET,EAAQS,gBADVC,EACEV,sBAEEW,EAAWH,GAAWz2B,IAAS9E,EAAa27B,YAC5CC,EACJJ,GACAC,GACA32B,IAAS9E,EAAa67B,OACtBV,GACAC,GACAC,GACAC,EAEEI,GAAYT,IAAuBh7B,EAAsB67B,OACrDC,EAAaC,OAAOC,KAAKV,GAASpJ,SAAS,UACjD4H,KAAKU,YAA2B,cAAI,SAAAp4B,OAAS05B,UAFmB,CAAA,EAAA,IAjChE,CAAA,EAAOhC,oBAoCE2B,GAAYT,IAAuBh7B,EAAsBi8B,QAClEnC,KAAKU,YAA2B,cAAI,UAAAp4B,OAAUk5B,UAD0B,CAAA,EAAA,UAGxE,OAAAG,GACAT,IAAuBh7B,EAAsB4uB,QAC7CqM,GAEAnB,KAAKU,YAAYS,GAAsBK,SAFrB,CAAA,EAAA,UAGT,OAAAK,EACJ7B,KAAKoC,UAAS,CAAA,EAAA,GACK,CAAA,EAAMpL,EAAM+B,KAChCsI,EACA,CACEgB,UAAWZ,EACXa,cAAeZ,EACfJ,MAAOA,EACPiB,WAAY,sBAEd,CACEliB,QAAS,CAAE,eAAgB,wCAXjB,CAAA,EAAA,UAERmiB,EAAgBp4B,EAWrB8uB,OACD8G,KAAKoC,UAAYI,EAAclrB,KAAKmrB,8BAEtCzC,KAAKU,YAA2B,cAAI,UAAAp4B,OAAU03B,KAAKoC,qBAErD,KAAA,EAAA,MAAA,CAAA,EAAOpC,YACR,EAEKS,EAAAR,UAAAyC,QAAN,wFASE,GARMnhB,EAAMud,GAAUkB,KAAK1F,OAAOyE,OAAQiB,KAAK7V,MACzC9J,EACDzL,EAAAA,EAAA,CAAA,EAAAorB,KAAKU,aACR,CAAA,eAAgBV,KAAK1F,OAAOkG,cAKf,SAFTH,EAASL,KAAK1F,OAAO+F,OAAO53B,eAGhC,MAAA,CAAA,EAAOuuB,EAAMgE,IAAIzZ,EAAK,CAAElB,QAAOA,EAAEud,OAAQoC,KAAKpC,UACzC,GAAe,SAAXyC,EACT,MAAA,CAAA,EAAOrJ,EAAM+B,KAAKxX,EAAKye,KAAKpC,OAAQ,CAAEvd,QAAOA,KACxC,GAAe,QAAXggB,EACT,MAAA,CAAA,EAAOrJ,EAAMsE,IAAI/Z,EAAKye,KAAKpC,OAAQ,CAAEvd,QAAOA,KACvC,GAAe,WAAXggB,EACT,MAAA,CAAA,EAAOrJ,EAAMuE,OAAOha,EAAK,CAAElB,QAAOA,EAAE/I,KAAM0oB,KAAKpC,UAC1C,GAAe,UAAXyC,EACT,MAAA,CAAA,EAAOrJ,EAAMyE,MAAMla,EAAKye,KAAKpC,OAAQ,CAAEvd,QAAOA,KAE9C,MAAM,IAAIgL,MAAM,mCAA4BgV,SAE/C,EAEDI,EAAAR,UAAA0C,UAAA,WACE,OAAO3C,KAAK1F,QAEfmG,CAAD,IAEAmC,GAAA,WAGE,SACEA,EAAA7D,EACA5U,EACAkW,EACAC,EACAC,EACAC,GAEAR,KAAK1F,OAAS,IAAI6F,GAAcpB,EAAQ5U,EAAMkW,EAAQC,EAAWC,EAAiBC,EACnF,CA0CH,OAvCE1qB,OAAA+sB,eAAID,EAAM3C,UAAA,SAAA,CAAVjF,IAAA,WACE,OAAOgF,KAAK1F,OAAOyE,MACpB,kCACDjpB,OAAA+sB,eAAID,EAAI3C,UAAA,OAAA,CAARjF,IAAA,WACE,OAAOgF,KAAK1F,OAAO8F,QACpB,kCACDtqB,OAAA+sB,eAAID,EAAM3C,UAAA,SAAA,CAAVjF,IAAA,WACE,OAAOgF,KAAK1F,OAAO+F,MACpB,kCACDvqB,OAAA+sB,eAAID,EAAS3C,UAAA,YAAA,CAAbjF,IAAA,WACE,OAAOgF,KAAK1F,OAAOgG,SACpB,kCACDxqB,OAAA+sB,eAAID,EAAe3C,UAAA,kBAAA,CAAnBjF,IAAA,WACE,OAAOgF,KAAK1F,OAAOiG,eACpB,kCACDzqB,OAAA+sB,eAAID,EAAW3C,UAAA,cAAA,CAAfjF,IAAA,WACE,OAAOgF,KAAK1F,OAAOkG,WACpB,kCAEDoC,EAAA3C,UAAA6C,eAAA,WACE,OAAO,IAAIrC,GAAgBT,KAAK1F,SAIlCsI,EAAS3C,UAAAU,UAAT,SAAU/C,GACR,IAAMmF,EAAW/C,KAAK8C,iBAEtB,OADAC,EAASpC,UAAU/C,GACZmF,GAGHH,EAAO3C,UAAAc,QAAb,SAAcC,sEAEZ,MAAA,CAAA,EADiBhB,KAAK8C,iBACN/B,QAAQC,SACzB,EAEK4B,EAAA3C,UAAAyC,QAAN,8EAEE,MAAA,CAAA,EADiB1C,KAAK8C,iBACNJ,gBACjB,EACFE,CAAD,IAEgB,SAAAI,GACd1lB,EACA2lB,SAEA,GAAI,SAAU3lB,GAAU2lB,EAAY,CAClC,IAAMC,EAAU5lB,EAAO6lB,KAAKlE,QAAQ,4BAA6B,IAC3DmE,EAAmC,QAAlBl6B,EAAA+5B,EAAWI,eAAO,IAAAn6B,OAAA,EAAAA,EAAGg6B,GAC5C,IAAKE,EACH,MAAM,IAAI/X,MAAM,aAAA/iB,OAAagV,EAAO6lB,KAAgB,eAEtD,OAAOH,GAAWI,EAAgBH,EACnC,CACD,OAAO3lB,CACT,CAEA,SAASgmB,GAAoB/0B,GAC3B,OAAOA,EAAM0wB,QAAQ,kBAAmB,GAC1C,CAGgB,SAAAsE,GACdC,EACAC,wBAAA,IAAAA,IAAAA,GAA0B,GAY1B,IANA,IAAMC,EAA0C,GAC1CC,EAAiD,CAAA,EACjDC,EAA2C,CAAA,EAC3CC,EAAuC,QAA7Bz2B,EAAwB,QAAxBtC,EAAmB,UAAnB04B,EAAYM,eAAO,IAAA15B,OAAA,EAAAA,EAAG,UAAE,IAAAU,OAAA,EAAAA,EAAEyW,WAAG,IAAAnU,EAAAA,EAAI,OAGnB2H,EAAAe,OAAO4B,QAAQ8rB,EAAYO,OAA3BhZ,EAAAhW,EAAA2B,OAAAqU,IAC5B,IADS,IAAA/V,OAACmV,EAAInV,EAAA,GAAEgvB,EAAOhvB,EAAA,GAC2DC,EAAA,EAAhDC,EAAAY,OAAO4B,QAAQssB,GAAf/uB,EAAAC,EAAAwB,OAAAzB,IAAkD,CAAzE,IAAAE,OAACkrB,EAAMlrB,EAAA,GACV8uB,EADqB9uB,EAAA,GAMrB+uB,EAAqB,GAAA57B,OAAG+3B,EAAU,KAAA/3B,OAAA6hB,GAClCga,EAAcF,EAAaE,aAAeb,GAAoBY,GAC9Dt6B,EAAcq6B,EAAaG,SAAWH,EAAar6B,aAAe,GAElEy6B,EAAkC,CACtCt5B,KAAM,SACNG,WAAY,CAAE,EACdC,SAAU,IAGZ,GAAI84B,EAAah5B,WACf,IAAoB,IAAAmK,EAAA,EAAAM,EAAAuuB,EAAah5B,WAAbmK,EAAuBM,EAAAgB,OAAvBtB,IAAyB,CAAxC,IACGkvB,EADQ5uB,EAAAN,GAERguB,EAAiBJ,GACrBpuB,KAAK0vB,EAAShnB,QACdkmB,EAAYP,YAEdoB,EAAiBn5B,WAAWo5B,EAAS36B,MAAQy5B,GACnB,IAAtBkB,EAASn5B,UACXk5B,EAAiBl5B,SAASuQ,KAAK4oB,EAAS36B,KAE3C,CAGH,GAAIs6B,EAAaM,YAAa,CAC5B,IACM/1B,EADcy1B,EAAaM,YACL/1B,QACtBgyB,EAAc1qB,OAAOC,KAAKvH,QAAAA,EAAW,IAAI,GAEzC40B,EAAiBJ,GADjB1lB,EAA+B,QAAtBzI,EAAArG,aAAA,EAAAA,EAAUgyB,UAAY,IAAA3rB,OAAA,EAAAA,EAAEyI,OAGrCkmB,EAAYP,YAEdoB,EAAiBn5B,WAAU0J,EAAAA,EAAA,CAAA,EACtByvB,EAAiBn5B,YACjBk4B,EAAel4B,YAEhBk4B,EAAej4B,WACjBjC,EAAAm7B,EAAiBl5B,UAASuQ,KAAQ8oB,MAAAt7B,EAAAk6B,EAAej4B,SAEpD,CAED,IAAMs5B,EAAoB,IAAI1E,GAAkBoE,EAAav6B,EAAay6B,GAC1EX,EAAmBhoB,KAAK+oB,GAExB,IAYQnnB,EAZFonB,EAAgB,IAAI9B,GACxBiB,EACA1Z,EACAkW,EACA8D,IAC+C,QAA5CrvB,EAAAmvB,EAAa,mCAA+B,IAAAnvB,IAAAA,GAC/CmvB,EAAaM,YAAc,mBAAqB,qCAKlD,GAFAZ,EAAgBQ,GAAeO,EAE3BjB,GAAsB3tB,OAAOC,KAAKsuB,EAAiBn5B,YAAYwL,OAAS,GACpE4G,EAASwiB,GAAmBuE,MAEhCT,EAAWO,GAAe7mB,EAG/B,CAGH,MAAO,CAAEomB,mBAAkBA,EAAEC,kBAAiBC,WAAUA,EAC1D,CAQM,SAAUe,GAA4BC,SAC1C,IACE,IAAIC,SACJ,IACEA,EAAa7L,KAAKzN,MAAMqZ,EACzB,CAAC,MAAAx6B,GACAy6B,EAAaC,EAAKF,EACnB,CAGD,IACGC,EAAWf,UACXpZ,MAAMC,QAAQka,EAAWf,UACI,IAA9Be,EAAWf,QAAQptB,OAEnB,MAAO,CAAE8jB,QAAQ,EAAO5jB,QAAS,2CAGnC,IAAKiuB,EAAWf,QAAQ,GAAGviB,IACzB,MAAO,CAAEiZ,QAAQ,EAAO5jB,QAAS,2CAInC,IAAMmtB,EAAQc,EAAWd,MACzB,IAAKA,GAA0B,iBAAVA,GAAoD,IAA9BjuB,OAAOC,KAAKguB,GAAOrtB,OAC5D,MAAO,CAAE8jB,QAAQ,EAAO5jB,QAAS,uCAMnC,IAHA,IAAMqsB,GAAoC,QAAvB/5B,EAAA27B,EAAW5B,kBAAY,IAAA/5B,OAAA,EAAAA,EAAAm6B,UAAW,CAAA,EAC/C5xB,EAAW,GAEkCsZ,EAAA,EAArBjgB,EAAAgL,OAAO4B,QAAQqsB,GAAfhZ,EAAAjgB,EAAA4L,OAAAqU,IAC5B,IADS,IAAA3d,OAAC+c,EAAI/c,EAAA,GAAE42B,EAAO52B,EAAA,GACkEyH,EAAA,EAAnDC,EAAAgB,OAAO4B,QAAQssB,GAAfnvB,EAAAC,EAAA4B,OAAA7B,IAAqD,CAAhF,IAAAE,OAACgwB,EAAUhwB,EAAA,GAAEurB,EAASvrB,EAAA,GAEvBiwB,EAAc1E,EAAiE0E,UACvF,GAAyB,iBAAd1E,GAA0B0E,EACnC,IAAqC,IAAyBhwB,EAAA,EAAzBC,EAAAa,OAAO4B,QAAQstB,GAAfhwB,EAAAC,EAAAyB,OAAA1B,IAA2B,CAArD,IAAAE,OAAC+vB,EAAU/vB,EAAA,GACd1G,EADwB0G,EAAA,GACyB1G,QACvD,GAAIA,GAAWA,EAAQ,qBAAuBA,EAAQ,oBAAoB8O,OAAQ,CAChF,IAAMA,EAAS9O,EAAQ,oBAAoB8O,OAC3C,GAAI,SAAUA,GAAiC,iBAAhBA,EAAO6lB,KAAmB,CACvD,IAAM+B,EAAU5nB,EAAO6lB,KAAKj7B,MAAM,KAAKi9B,MACnCD,IAAYjC,EAAWiC,IACzBzzB,EAASiK,KACP,yBAAApT,OAAyB6hB,EAAI,QAAA7hB,OAAOy8B,EAAU,QAAAz8B,OAAO28B,EAAU,4FAAA38B,OAA2F48B,EAAO,wBAGtK,CACF,CACF,CAEJ,CAGH,MAAO,CACL1K,QAAQ,EACR5jB,QAASnF,EAASkP,KAAK,OAAS,yBAChC9N,KAAMgyB,EAET,CAAC,MAAO30B,GACP,MAAO,CAAEsqB,QAAQ,EAAO5jB,QAAS,8BAClC,CACH,CCvfwB,SAAAwuB,GAAcC,GAC5B,IAAAja,EAAqEia,EAAzDja,aAAEka,EAAuDD,EAA5CC,YAAE5Z,EAA0C2Z,EAA5B3Z,eAAE1b,EAA0Bq1B,EAAUr1B,SAA1Bu1B,EAAgBF,EAAUE,YAC/El2B,EAAmBm2B,GAAqBja,MAAMH,GAAa/b,eAC7DnG,EAA6BwiB,EAA3B1jB,aAAUc,iBAKd28B,EAASje,GAAa1e,QAAAA,EAAgBd,GAe1C,OAbIgI,GAAY6sB,EAAuB70B,GACrCy9B,GAAU,UACDz1B,IACTy1B,EAASA,EAAOxG,QAAQ,QAAS,WAU5B,CAAEwG,OAAMA,EAAE5J,QANZjnB,EAAAA,EAAAA,EAAA,CAAA,EAAA0wB,GACA5Z,GAAc,CACjB6Z,eAAgBv1B,IAAYu1B,GAC5Bl2B,eAAcA,IAIlB"}