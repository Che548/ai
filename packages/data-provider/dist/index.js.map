{"version":3,"file":"index.js","sources":["../src/types/runs.ts","../src/types/assistants.ts","../src/schemas.ts","../src/bedrock.ts","../src/file-config.ts","../src/models.ts","../src/types/files.ts","../src/config.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/generate.ts","../src/roles.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/actions.ts","../src/zod.ts","../src/createPayload.ts"],"sourcesContent":["export enum ContentTypes {\n  TEXT = 'text',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  ERROR = 'error',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  retrieval = 'retrieval',\n  function = 'function',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | null;\n\nexport type AgentModelParameters = {\n  model?: string;\n  temperature: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentToolResources {\n  execute_code?: ExecuteCodeResource;\n  file_search?: AgentFileSearchResource;\n}\nexport interface ExecuteCodeResource {\n  /**\n   * A list of file IDs made available to the `execute_code` tool.\n   * There can be a maximum of 20 files associated with the tool.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport interface AgentFileSearchResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n  /**\n   * A list of file IDs made available to the `file_search` tool.\n   * To be used before vector stores are implemented.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport type Agent = {\n  id: string;\n  name: string | null;\n  author?: string | null;\n  /** The original custom endpoint name, lowercased */\n  endpoint?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n  agent_ids?: string[];\n  end_after_tools?: boolean;\n  hide_sequential_outputs?: boolean;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n} & Pick<Agent, 'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs'>;\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n} & Pick<Agent, 'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs'>;\n\nexport type AgentListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  provider?: AgentProvider;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text: Text & PartMetadata }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\n/* Assistant types */\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'system_defined',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  bingAI = 'bingAI',\n  chatGPTBrowser = 'chatGPTBrowser',\n  google = 'google',\n  gptPlugins = 'gptPlugins',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.openAI,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    return model.split('.')[0] as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  isCollaborative: false,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o',\n  },\n  temperature: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 1,\n  },\n  top_p: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  presence_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  frequency_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto,\n    min: 0,\n    max: 2,\n    step: 1,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest',\n  },\n  maxOutputTokens: {\n    min: 1,\n    max: 8192,\n    step: 1,\n    default: 8192,\n  },\n  temperature: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 1,\n  },\n  topP: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0.95,\n  },\n  topK: {\n    min: 1,\n    max: 40,\n    step: 1,\n    default: 40,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 8192;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-20241022',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  promptCache: {\n    default: true,\n  },\n  maxOutputTokens: {\n    min: 1,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1,\n    default: ANTHROPIC_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (modelName.includes('claude-3-5-sonnet')) {\n        return ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (!modelName.includes('claude-3-5-sonnet') && value > LEGACY_ANTHROPIC_MAX_OUTPUT) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0.7,\n  },\n  topK: {\n    min: 1,\n    max: 40,\n    step: 1,\n    default: 5,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  top_p: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 1,\n  },\n  presence_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  frequency_penalty: {\n    min: 0,\n    max: 2,\n    step: 0.01,\n    default: 0,\n  },\n  resendFiles: {\n    default: true,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string(),\n  icon: z.string(),\n  authConfig: z.array(tPluginAuthConfigSchema).optional(),\n  authenticated: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string().optional(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isEdited: z.boolean().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean().optional(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().optional(),\n});\n\nexport type TAttachmentMetadata = { messageId: string; toolCallId: string };\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  resendFiles: z.boolean().optional(),\n  imageDetail: eImageDetailSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistant + agents */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  iconURL: z.string().optional(),\n  greeting: z.string().optional(),\n  spec: z.string().optional(),\n  /*\n  Deprecated fields\n  */\n  /** @deprecated */\n  suggestions: z.array(z.string()).optional(),\n  /** @deprecated */\n  systemMessage: z.string().nullable().optional(),\n  /** @deprecated */\n  jailbreak: z.boolean().optional(),\n  /** @deprecated */\n  jailbreakConversationId: z.string().nullable().optional(),\n  /** @deprecated */\n  conversationSignature: z.string().nullable().optional(),\n  /** @deprecated */\n  clientId: z.string().nullable().optional(),\n  /** @deprecated */\n  invocationId: z.number().nullable().optional(),\n  /** @deprecated */\n  toneStyle: z.string().nullable().optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport const tPresetUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isAnonymous: z.boolean(),\n  isPublic: z.boolean(),\n  isVisible: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    artifacts: true,\n    topP: true,\n    topK: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    return {\n      ...obj,\n      model: obj.model ?? google.model.default,\n      modelLabel: obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n      temperature: obj.temperature ?? google.temperature.default,\n      maxOutputTokens: obj.maxOutputTokens ?? google.maxOutputTokens.default,\n      topP: obj.topP ?? google.topP.default,\n      topK: obj.topK ?? google.topK.default,\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n  })\n  .catch(() => ({\n    model: google.model.default,\n    modelLabel: null,\n    promptPrefix: null,\n    examples: [{ input: { content: '' }, output: { content: '' } }],\n    temperature: google.temperature.default,\n    maxOutputTokens: google.maxOutputTokens.default,\n    topP: google.topP.default,\n    topK: google.topK.default,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const bingAISchema = tConversationSchema\n  .pick({\n    jailbreak: true,\n    systemMessage: true,\n    context: true,\n    toneStyle: true,\n    jailbreakConversationId: true,\n    conversationSignature: true,\n    clientId: true,\n    invocationId: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: '',\n    jailbreak: obj.jailbreak ?? false,\n    systemMessage: obj.systemMessage ?? null,\n    context: obj.context ?? null,\n    toneStyle: obj.toneStyle ?? 'creative',\n    jailbreakConversationId: obj.jailbreakConversationId ?? null,\n    conversationSignature: obj.conversationSignature ?? null,\n    clientId: obj.clientId ?? null,\n    invocationId: obj.invocationId ?? 1,\n  }))\n  .catch(() => ({\n    model: '',\n    jailbreak: false,\n    systemMessage: null,\n    context: null,\n    toneStyle: 'creative',\n    jailbreakConversationId: null,\n    conversationSignature: null,\n    clientId: null,\n    invocationId: 1,\n  }));\n\nexport const chatGPTBrowserSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'text-davinci-002-render-sha',\n  }))\n  .catch(() => ({\n    model: 'text-davinci-002-render-sha',\n  }));\n\nexport const gptPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    artifacts: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(obj: T): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nexport const assistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    artifacts: true,\n    promptPrefix: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n  }));\n\nexport const compactAssistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    promptPrefix: true,\n    artifacts: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n  })\n  // will change after adding temperature\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n\nexport const agentsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendFiles: true,\n    imageDetail: true,\n    agent_id: true,\n    instructions: true,\n    promptPrefix: true,\n    iconURL: true,\n    greeting: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAISchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendFiles: true,\n    artifacts: true,\n    imageDetail: true,\n    stop: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n    max_tokens: true,\n  })\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    artifacts: true,\n    topP: true,\n    topK: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n    resendFiles: true,\n    promptCache: true,\n    artifacts: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactChatGPTSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxContextTokens: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nconst tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsSchema = tConversationSchema\n  .pick({\n    spec: true,\n    // model: true,\n    iconURL: true,\n    greeting: true,\n    agent_id: true,\n    resendFiles: true,\n    instructions: true,\n    additional_instructions: true,\n  })\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n","import { z } from 'zod';\nimport * as s from './schemas';\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform(s.removeNullishValues)\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* LibreChat params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  const result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  // Remove additionalModelRequestFields from the result\n  delete result.additionalModelRequestFields;\n\n  return result;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { FileConfig, EndpointFileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'text/vtt',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|x-c\\+\\+|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|vtt|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|vtt|xml))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  metadata?: { fileIdentifier?: string };\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { fileConfigSchema } from './file-config';\nimport { specsConfigSchema } from './models';\nimport { FileSources } from './types/files';\nimport { TModelsConfig } from './types';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> = T extends z.ZodDefault<z.ZodTypeAny>\n  ? ReturnType<T['_def']['defaultValue']>\n  : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema | undefined>;\nexport type TAzureGroupMap = Record<\n  string,\n  (TAzureBaseSchema & { models: Record<string, TAzureModelConfig | undefined> }) | undefined\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  hide_sequential_outputs = 'hide_sequential_outputs',\n  end_after_tools = 'end_after_tools',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const agentsEndpointSChema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSChema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  interface: z\n    .object({\n      privacyPolicy: z\n        .object({\n          externalUrl: z.string().optional(),\n          openNewTab: z.boolean().optional(),\n        })\n        .optional(),\n      termsOfService: z\n        .object({\n          externalUrl: z.string().optional(),\n          openNewTab: z.boolean().optional(),\n          modalAcceptance: z.boolean().optional(),\n          modalTitle: z.string().optional(),\n          modalContent: z.string().or(z.array(z.string())).optional(),\n        })\n        .optional(),\n      endpointsMenu: z.boolean().optional(),\n      modelSelect: z.boolean().optional(),\n      parameters: z.boolean().optional(),\n      sidePanel: z.boolean().optional(),\n      multiConvo: z.boolean().optional(),\n      bookmarks: z.boolean().optional(),\n      presets: z.boolean().optional(),\n      prompts: z.boolean().optional(),\n      agents: z.boolean().optional(),\n    })\n    .default({\n      endpointsMenu: true,\n      modelSelect: true,\n      parameters: true,\n      sidePanel: true,\n      presets: true,\n      multiConvo: true,\n      bookmarks: true,\n      prompts: true,\n      agents: true,\n    }),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSChema.optional(),\n      [EModelEndpoint.custom]: z.array(endpointSchema.partial()).optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n  xai = 'xai',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.bingAI,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.bingAI]: 'Bing',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n  [KnownEndpoints.ollama]: 'Ollama',\n  [KnownEndpoints.xai]: 'xAI',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = [\n  'claude-3-5-haiku-20241022',\n  'claude-3-5-sonnet-20241022',\n  'claude-3-5-sonnet-20240620',\n  'claude-3-5-sonnet-latest',\n  'claude-3-opus-20240229',\n  'claude-3-sonnet-20240229',\n  'claude-3-haiku-20240307',\n  'claude-2.1',\n  'claude-2',\n  'claude-1.2',\n  'claude-1',\n  'claude-1-100k',\n  'claude-instant-1',\n  'claude-instant-1-100k',\n];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20241022-v2:0',\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-5-haiku-20241022-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: ['chatgpt-4o-latest', ...sharedOpenAIModels],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    'gemini-pro',\n    'gemini-pro-vision',\n    'chat-bison',\n    'chat-bison-32k',\n    'codechat-bison',\n    'codechat-bison-32k',\n    'text-bison',\n    'text-bison-32k',\n    'text-unicorn',\n    'code-gecko',\n    'code-bison',\n    'code-bison-32k',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    'chatgpt-4o-latest',\n    ...sharedOpenAIModels,\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.bingAI]: ['BingAI', 'Sydney'],\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs: { [key in EModelEndpoint]: string } = {\n  [EModelEndpoint.openAI]: `/api/ask/${EModelEndpoint.openAI}`,\n  [EModelEndpoint.bingAI]: `/api/ask/${EModelEndpoint.bingAI}`,\n  [EModelEndpoint.google]: `/api/ask/${EModelEndpoint.google}`,\n  [EModelEndpoint.custom]: `/api/ask/${EModelEndpoint.custom}`,\n  [EModelEndpoint.anthropic]: `/api/ask/${EModelEndpoint.anthropic}`,\n  [EModelEndpoint.gptPlugins]: `/api/ask/${EModelEndpoint.gptPlugins}`,\n  [EModelEndpoint.azureOpenAI]: `/api/ask/${EModelEndpoint.azureOpenAI}`,\n  [EModelEndpoint.chatGPTBrowser]: `/api/ask/${EModelEndpoint.chatGPTBrowser}`,\n  [EModelEndpoint.azureAssistants]: '/api/assistants/v1/chat',\n  [EModelEndpoint.assistants]: '/api/assistants/v2/chat',\n  [EModelEndpoint.agents]: `/api/${EModelEndpoint.agents}/chat`,\n  [EModelEndpoint.bedrock]: `/api/${EModelEndpoint.bedrock}/chat`,\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'gpt-4o',\n  'gpt-4o-mini',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemini-1.5',\n  'gemini-exp',\n  'moondream',\n  'llama3.2-vision',\n  'llama-3.2-90b-vision',\n  'llama-3.2-11b-vision',\n  'llama-3-2-90b-vision',\n  'llama-3-2-11b-vision',\n];\nexport enum VisionModes {\n  generative = 'generative',\n  agents = 'agents',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model === 'gpt-4-turbo-preview') {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the config store namespace.\n   */\n  ROLES = 'roles',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'tools',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'modelQueries',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'startupConfig',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'abortKeys',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'bans',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'encoded_domains',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'audioRuns',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'messages',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n  /**\n   * Tool Call Limit Violation.\n   */\n  TOOL_CALL_LIMIT = 'tool_call_limit',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.7.5',\n  /** Key for the Custom Config's version (librechat.yaml). */\n  CONFIG_VERSION = '1.1.8',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Standard value for the conversationId used for search queries */\n  SEARCH = 'search',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last BingAI Settings */\n  LAST_BING = 'lastBingSettings',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = '',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n};\n","import type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  bingAISchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactChatGPTSchema,\n  chatGPTBrowserSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof chatGPTBrowserSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nconst endpointSchemas: Record<EModelEndpoint, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: chatGPTBrowserSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.bingAI,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  const envVarMatch = value.match(envVarRegex);\n  if (envVarMatch) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    return process.env[envVarMatch[1]] || value;\n  }\n  return value;\n}\n\n/** Resolves header values to env variables if detected */\nexport function resolveHeaders(headers: Record<string, string> | undefined) {\n  const resolvedHeaders = { ...(headers ?? {}) };\n\n  if (headers && typeof headers === 'object' && !Array.isArray(headers)) {\n    Object.keys(headers).forEach((key) => {\n      resolvedHeaders[key] = extractEnvVariable(headers[key]);\n    });\n  }\n\n  return resolvedHeaders;\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n    jailbreak,\n  } = endpointOption;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && /\\bo1\\b/i.test(model)) {\n      return 'o1';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4o')) {\n      return 'GPT-4o';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.bingAI) {\n    return jailbreak === true ? 'Sydney' : 'BingAI';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model && model.includes('gemini')) {\n      return 'Gemini';\n    } else if (model && model.includes('code')) {\n      return 'Codey';\n    }\n\n    return 'PaLM2';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4o')) {\n      return 'GPT-4o';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof compactChatGPTSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<string, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  /* BingAI needs all fields */\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: compactChatGPTSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(contentParts: a.TMessageContentParts[]): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { errorsToString, extractEnvVariable, envVarRegex } from '../src/parsers';\nimport { azureGroupConfigsSchema } from '../src/config';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName = '',\n        deploymentName = '',\n        version = '',\n        baseURL = '',\n        additionalHeaders,\n        models,\n        serverless = false,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        const groupDeploymentName = group.deploymentName ?? '';\n        const groupVersion = group.version ?? '';\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!groupDeploymentName || !groupVersion) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          const modelDeploymentName = model.deploymentName ?? '';\n          const modelVersion = model.version ?? '';\n          // For object models, check if deploymentName and version are required but missing.\n          if ((!modelDeploymentName && !groupDeploymentName) || (!modelVersion && !groupVersion)) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: modelDeploymentName || groupDeploymentName,\n            // version: modelVersion || groupVersion,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n\n  if (!instanceName && groupConfig.serverless !== true) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const baseURL = groupConfig.baseURL ?? '';\n  if (groupConfig.serverless === true && !baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless === true) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n  const serverless = groupConfig.serverless ?? false;\n  const baseURL = groupConfig.baseURL ?? '';\n\n  if (!instanceName && !serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (serverless && !baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n        deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n        version: modelDetails.version ?? groupConfig.version,\n      }\n      : {\n        deploymentName: groupConfig.deploymentName,\n        version: groupConfig.version,\n      };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? setting.includeInput ?? true : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor(columns / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema = tConversationSchema.shape[setting.key as keyof TConversation];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (setting.type === SettingTypes.Number && isNaN(setting.default as number)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (setting.type === SettingTypes.Boolean && typeof setting.default !== 'boolean') {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string'\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import { z } from 'zod';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(false),\n});\n\nexport const roleSchema = z.object({\n  name: z.string(),\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n      [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n      [Permissions.USE]: z.boolean().default(true),\n      [Permissions.CREATE]: z.boolean().default(true),\n      // [Permissions.SHARE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n      [Permissions.USE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n      [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n      [Permissions.USE]: z.boolean().default(true),\n      [Permissions.CREATE]: z.boolean().default(true),\n      // [Permissions.SHARE]: z.boolean().default(true),\n    }),\n    [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n      [Permissions.USE]: z.boolean().default(true),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n    [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n    [PermissionTypes.AGENTS]: agentPermissionsSchema,\n    [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    [PermissionTypes.PROMPTS]: {},\n    [PermissionTypes.BOOKMARKS]: {},\n    [PermissionTypes.AGENTS]: {},\n    [PermissionTypes.MULTI_CONVO]: {},\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    [PermissionTypes.PROMPTS]: {},\n    [PermissionTypes.BOOKMARKS]: {},\n    [PermissionTypes.AGENTS]: {},\n    [PermissionTypes.MULTI_CONVO]: {},\n  },\n});\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  toolAuth = 'toolAuth',\n  toolCalls = 'toolCalls',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n}\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  logoutUser = 'logoutUser',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import type { AssistantsEndpoint } from './schemas';\n\nexport const health = () => '/health';\nexport const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const deleteUser = () => '/api/user/delete';\n\nexport const messages = (conversationId: string, messageId?: string) =>\n  `/api/messages/${conversationId}${messageId ? `/${messageId}` : ''}`;\n\nconst shareRoot = '/api/share';\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLinks = (pageNumber: string, isPublic: boolean) =>\n  `${shareRoot}?pageNumber=${pageNumber}&isPublic=${isPublic}`;\nexport const createSharedLink = shareRoot;\nexport const updateSharedLink = shareRoot;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const abortRequest = (endpoint: string) => `/api/ask/${endpoint}/abort`;\n\nexport const conversationsRoot = '/api/convos';\n\nexport const conversations = (pageNumber: string, isArchived?: boolean, tags?: string[]) =>\n  `${conversationsRoot}?pageNumber=${pageNumber}${\n    isArchived === true ? '&isArchived=true' : ''\n  }${tags?.map((tag) => `&tags=${tag}`).join('')}`;\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}/clear`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const search = (q: string, pageNumber: string) =>\n  `/api/search?q=${q}&pageNumber=${pageNumber}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) =>\n  `/api/auth/refresh${retry === true ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const verifyEmail = () => '/api/user/verify';\n\nexport const resendVerificationEmail = () => '/api/user/verify/resend';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const prompts = () => '/api/prompts';\n\nexport const assistants = ({\n  path = '',\n  options,\n  version,\n  endpoint,\n  isAvatar,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n  isAvatar?: boolean;\n}) => {\n  let url = isAvatar === true ? `${images()}/assistants` : `/api/assistants/v${version}`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path = '', options }: { path?: string; options?: object }) => {\n  let url = '/api/agents';\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => '/api/categories';\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => '/api/roles';\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) => `${getRole(roleName)}/prompts`;\nexport const updateAgentPermissions = (roleName: string) => `${getRole(roleName)}/agents`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => '/api/user/terms';\nexport const acceptUserTerms = () => '/api/user/terms/accept';\nexport const banner = () => '/api/banner';\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport * as endpoints from './api-endpoints';\nimport { setTokenHeader } from './headers-helpers';\nimport type * as t from './types';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean): Promise<t.TRefreshTokenResponse | undefined> =>\n  _post(endpoints.refreshToken(retry));\n\nconst dispatchTokenUpdatedEvent = (token: string) => {\n  setTokenHeader(token);\n  window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n};\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (!error.response) {\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      console.warn('401 error, refreshing token');\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const response = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') === true ? true : false,\n        );\n\n        const token = response?.token ?? '';\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          dispatchTokenUpdatedEvent(token);\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else if (window.location.href.includes('share/')) {\n          console.log(\n            `Refresh token failed from shared link, attempting request to ${originalRequest.url}`,\n          );\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n  dispatchTokenUpdatedEvent,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\n\nexport function abortRequestWithMessage(\n  endpoint: string,\n  abortKey: string,\n  message: string,\n): Promise<void> {\n  return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey, message } });\n}\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (conversationId === 'new') {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages(conversationId));\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = (\n  params?: q.SharedLinkListParams,\n): Promise<q.SharedLinksResponse> => {\n  const pageNumber = (params?.pageNumber ?? '1') || '1'; // Default to page 1 if not provided\n  const isPublic = params?.isPublic ?? true; // Default to true if not provided\n  return request.get(endpoints.getSharedLinks(pageNumber, isPublic));\n};\n\nexport function getSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport function createSharedLink(payload: t.TSharedLinkRequest): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink, payload);\n}\n\nexport function updateSharedLink(payload: t.TSharedLinkRequest): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink, payload);\n}\n\nexport function deleteSharedLink(shareId: string): Promise<t.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text, index });\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<string> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser) => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = () => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<t.TStartupConfig> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\nexport const getVerifyAgentToolAuth = (\n  params: q.VerifyToolAuthParams,\n): Promise<q.VerifyToolAuthResponse> => {\n  return request.get(\n    endpoints.agents({\n      path: `tools/${params.toolId}/auth`,\n    }),\n  );\n};\n\nexport const callTool = <T extends m.ToolId>({\n  toolId,\n  toolParams,\n}: {\n  toolId: T;\n  toolParams: m.ToolParams<T>;\n}): Promise<m.ToolCallResponse> => {\n  return request.post(\n    endpoints.agents({\n      path: `tools/${toolId}/call`,\n    }),\n    toolParams,\n  );\n};\n\nexport const getToolCalls = (params: q.GetToolCallParams): Promise<q.ToolCallResults> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools/calls',\n      options: params,\n    }),\n  );\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (\n  data: FormData,\n  signal?: AbortSignal | null,\n): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\n\nexport const uploadFile = (data: FormData, signal?: AbortSignal | null): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<a.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      isAvatar: true,\n      path: `${data.assistant_id}/avatar`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    `${endpoints.images()}/agents/${data.agent_id}/avatar`,\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  //todo: this should be a DELETE request\n  return request.post(endpoints.deleteConversation(), { arg: payload });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.post(endpoints.deleteConversation(), { arg: {} });\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  // Assuming params has a pageNumber property\n  const pageNumber = (params?.pageNumber ?? '1') || '1'; // Default to page 1 if not provided\n  const isArchived = params?.isArchived ?? false; // Default to false if not provided\n  const tags = params?.tags || []; // Default to an empty array if not provided\n  return request.get(endpoints.conversations(pageNumber, isArchived, tags));\n};\n\nexport const listConversationsByQuery = (\n  params?: q.ConversationListParams & { searchQuery?: string },\n): Promise<q.ConversationListResponse> => {\n  const pageNumber = (params?.pageNumber ?? '1') || '1'; // Default to page 1 if not provided\n  const searchQuery = params?.searchQuery ?? ''; // If no search query is provided, default to an empty string\n  // Update the endpoint to handle a search query\n  if (searchQuery !== '') {\n    return request.get(endpoints.search(searchQuery, pageNumber));\n  } else {\n    return request.get(endpoints.conversations(pageNumber));\n  }\n};\n\nexport const searchConversations = async (\n  q: string,\n  pageNumber: string,\n): Promise<t.TSearchResults> => {\n  return request.get(endpoints.search(q, pageNumber));\n};\n\nexport function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations(pageNumber));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateAgentPermissions(\n  variables: m.UpdateAgentPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n","import { z } from 'zod';\nimport axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { FunctionTool, Schema, Reference, ActionMetadata } from './types/assistants';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools, AuthTypeEnum, AuthorizationTypeEnum } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\ntype MediaTypeObject =\n  | undefined\n  | {\n      [media: string]: OpenAPIV3.MediaTypeObject | undefined;\n    };\n\ntype RequestBodyObject = Omit<OpenAPIV3.RequestBodyObject, 'content'> & {\n  content: MediaTypeObject;\n};\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n\n  constructor(name: string, description: string, parameters: ParametersSchema) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n  }\n\n  toObjectTool(): FunctionTool {\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters: this.parameters,\n      },\n    };\n  }\n}\nclass RequestConfig {\n  constructor(\n    readonly domain: string,\n    readonly basePath: string,\n    readonly method: string,\n    readonly operation: string,\n    readonly isConsequential: boolean,\n    readonly contentType: string,\n  ) {}\n}\n\nclass RequestExecutor {\n  path: string;\n  params?: object;\n  private operationHash?: string;\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  constructor(private config: RequestConfig) {\n    this.path = config.basePath;\n  }\n\n  setParams(params: object) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = Object.assign({}, params);\n\n    for (const [key, value] of Object.entries(params)) {\n      const paramPattern = `{${key}}`;\n      if (this.path.includes(paramPattern)) {\n        this.path = this.path.replace(paramPattern, encodeURIComponent(value as string));\n        delete (this.params as Record<string, unknown>)[key];\n      }\n    }\n    return this;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    if (!metadata.auth) {\n      return this;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n    } = metadata;\n\n    const isApiKey = api_key && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth =\n      oauth_client_id &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url &&\n      client_url &&\n      scope &&\n      token_exchange_method;\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      if (!this.authToken) {\n        const tokenResponse = await axios.post(\n          client_url,\n          {\n            client_id: oauth_client_id,\n            client_secret: oauth_client_secret,\n            scope: scope,\n            grant_type: 'client_credentials',\n          },\n          {\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          },\n        );\n        this.authToken = tokenResponse.data.access_token;\n      }\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n    return this;\n  }\n\n  async execute() {\n    const url = createURL(this.config.domain, this.path);\n    const headers = {\n      ...this.authHeaders,\n      'Content-Type': this.config.contentType,\n    };\n\n    const method = this.config.method.toLowerCase();\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: this.params });\n    } else if (method === 'post') {\n      return axios.post(url, this.params, { headers });\n    } else if (method === 'put') {\n      return axios.put(url, this.params, { headers });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: this.params });\n    } else if (method === 'patch') {\n      return axios.patch(url, this.params, { headers });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${method}`);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n}\n\nexport class ActionRequest {\n  private config: RequestConfig;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n  ) {\n    this.config = new RequestConfig(domain, path, method, operation, isConsequential, contentType);\n  }\n\n  // Add getters to maintain backward compatibility\n  get domain() {\n    return this.config.domain;\n  }\n  get path() {\n    return this.config.basePath;\n  }\n  get method() {\n    return this.config.method;\n  }\n  get operation() {\n    return this.config.operation;\n  }\n  get isConsequential() {\n    return this.config.isConsequential;\n  }\n  get contentType() {\n    return this.config.contentType;\n  }\n\n  createExecutor() {\n    return new RequestExecutor(this.config);\n  }\n\n  // Maintain backward compatibility by delegating to a new executor\n  setParams(params: object) {\n    const executor = this.createExecutor();\n    executor.setParams(params);\n    return executor;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    const executor = this.createExecutor();\n    return executor.setAuth(metadata);\n  }\n\n  async execute() {\n    const executor = this.createExecutor();\n    return executor.execute();\n  }\n}\n\nexport function resolveRef(\n  schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject | RequestBodyObject,\n  components?: OpenAPIV3.ComponentsObject,\n): OpenAPIV3.SchemaObject {\n  if ('$ref' in schema && components) {\n    const refPath = schema.$ref.replace(/^#\\/components\\/schemas\\//, '');\n    const resolvedSchema = components.schemas?.[refPath];\n    if (!resolvedSchema) {\n      throw new Error(`Reference ${schema.$ref} not found`);\n    }\n    return resolveRef(resolvedSchema, components);\n  }\n  return schema as OpenAPIV3.SchemaObject;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/** Function to convert OpenAPI spec to function signatures and request builders */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters) {\n          const paramObj = param as OpenAPIV3.ParameterObject;\n          const resolvedSchema = resolveRef(\n            { ...paramObj.schema } as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n            openapiSpec.components,\n          );\n          parametersSchema.properties[paramObj.name] = resolvedSchema;\n          if (paramObj.required === true) {\n            parametersSchema.required.push(paramObj.name);\n          }\n        }\n      }\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content ?? {})[0];\n        const schema = content?.[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n      }\n\n      const functionSignature = new FunctionSignature(operationId, description, parametersSchema);\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!(operationObj['x-openai-isConsequential'] ?? false), // Custom extension for consequential actions\n        operationObj.requestBody ? 'application/json' : 'application/x-www-form-urlencoded',\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject | { responses: undefined };\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content as MediaTypeObject;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import { z } from 'zod';\n\nexport type JsonSchemaType = {\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object';\n  enum?: string[];\n  items?: JsonSchemaType;\n  properties?: Record<string, JsonSchemaType>;\n  required?: string[];\n  description?: string;\n};\n\nexport function convertJsonSchemaToZod(schema: JsonSchemaType): z.ZodType {\n  let zodSchema: z.ZodType;\n\n  // Handle primitive types\n  if (schema.type === 'string') {\n    if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n      const [first, ...rest] = schema.enum;\n      zodSchema = z.enum([first, ...rest] as [string, ...string[]]);\n    } else {\n      zodSchema = z.string();\n    }\n  } else if (schema.type === 'number') {\n    zodSchema = z.number();\n  } else if (schema.type === 'boolean') {\n    zodSchema = z.boolean();\n  } else if (schema.type === 'array' && schema.items !== undefined) {\n    const itemSchema = convertJsonSchemaToZod(schema.items);\n    zodSchema = z.array(itemSchema);\n  } else if (schema.type === 'object') {\n    const shape: Record<string, z.ZodType> = {};\n    const properties = schema.properties ?? {};\n\n    for (const [key, value] of Object.entries(properties)) {\n      let fieldSchema = convertJsonSchemaToZod(value);\n      if (value.description != null && value.description !== '') {\n        fieldSchema = fieldSchema.describe(value.description);\n      }\n      shape[key] = fieldSchema;\n    }\n\n    let objectSchema = z.object(shape);\n\n    if (Array.isArray(schema.required) && schema.required.length > 0) {\n      const partial = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [\n          key,\n          schema.required?.includes(key) === true ? value : value.optional(),\n        ]),\n      );\n      objectSchema = z.object(partial);\n    } else {\n      objectSchema = objectSchema.partial();\n    }\n    zodSchema = objectSchema;\n  } else {\n    zodSchema = z.unknown();\n  }\n\n  // Add description if present\n  if (schema.description != null && schema.description !== '') {\n    zodSchema = zodSchema.describe(schema.description);\n  }\n\n  return zodSchema;\n}\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const { conversation, userMessage, endpointOption, isEdited, isContinued } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint, endpointType } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  let server = EndpointURLs[endpointType ?? endpoint];\n\n  if (isEdited && s.isAssistantsEndpoint(endpoint)) {\n    server += '/modify';\n  } else if (isEdited) {\n    server = server.replace('/ask/', '/edit/');\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n  };\n\n  return { server, payload };\n}\n"],"names":["ContentTypes","StepTypes","ToolCallTypes","Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","FilePurpose","AssistantStreamEvents","AuthType","isUUID","z","string","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","openAI","bedrock","azureOpenAI","anthropic","custom","ImageDetail","getModelKey","endpoint","model","split","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","EAgent","imageDetailNumeric","_a","low","auto","high","imageDetailValue","eImageDetailSchema","defaultAgentFormValues","_b","agent","id","name","description","instructions","model_parameters","tools","provider","projectIds","isCollaborative","execute_code","file_search","ImageVisionTool","_c","type","function","parameters","properties","required","openAISettings","default","temperature","min","max","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","undefined","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","ANTHROPIC_MAX_OUTPUT","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","includes","set","value","legacy","agentsSettings","endpointSettings","_d","google","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","object","authField","label","tPluginSchema","pluginKey","icon","authConfig","array","optional","authenticated","boolean","isButton","tExampleSchema","input","content","output","agentOptionSettings","functions","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","text","generation","isEdited","isCreatedByUser","error","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","coerceNumber","transform","val","trim","parseFloat","DocumentType","lazy","null","record","tConversationSchema","endpointType","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","artifacts","context","examples","tags","file_ids","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","presetOverride","unknown","stop","greeting","spec","suggestions","systemMessage","jailbreak","jailbreakConversationId","conversationSignature","invocationId","toneStyle","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","order","tConvoUpdateSchema","tPresetUpdateSchema","tSharedLinkSchema","shareId","isAnonymous","isPublic","isVisible","tConversationTagSchema","_id","tag","count","position","googleSchema","pick","obj","__assign","_e","_f","_g","_h","_j","_k","_l","_m","catch","bingAISchema","chatGPTBrowserSchema","gptPluginsSchema","result","_o","_p","removeNullishValues","newObj","Object","keys","forEach","key","assistantSchema","compactAssistantSchema","agentsSchema","openAISchema","compactGoogleSchema","anthropicSchema","compactChatGPTSchema","compactPluginsSchema","length","bannerId","message","displayFrom","displayTo","compactAgentsSchema","bedrockInputSchema","s.tConversationSchema","s.removeNullishValues","bedrockInputParser","catchall","any","data","knownKeys","additionalFields","typedData","entries","supportsFiles","azureAssistants","excelFileTypes","fullMimeTypesList","__spreadArray","codeInterpreterMimeTypesList","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","checkType","fileType","supportedTypes","some","regex","test","supportedMimeTypesSchema","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","convertStringsToRegex","patterns","reduce","acc","pattern","push","console","FileSources","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","FileContext","SettingsViews","defaultSocialLogins","defaultRetrievalModels","fileSourceSchema","getSchemaDefaults","schema","shape","map","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","version","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","code_interpreter","image_vision","retrieval","actions","fetch","userIdQuery","titleConvo","titleMethod","headers","agentsEndpointSChema","endpointSchema","safeParse","success","concat","values","join","summarize","summaryModel","modelDisplayLabel","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","url","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","openai","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","textToSpeech","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","stt","KnownEndpoints","configSchema","cache","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","privacyPolicy","externalUrl","openNewTab","termsOfService","modalAcceptance","modalTitle","modalContent","endpointsMenu","modelSelect","sidePanel","multiConvo","bookmarks","presets","prompts","fileStrategy","local","registration","socialLogins","allowedDomains","speech","rateLimits","modelSpecs","all","gptPlugins","strict","FetchTokenConfig","VisionModes","defaultEndpoints","bingAI","chatGPTBrowser","alternateName","ollama","xai","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","filter","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","providerEndpointMap","endpointSchemas","getEnabledEndpoints","endpointsEnv","process","env","ENDPOINTS","enabledEndpoints","errorsToString","errors","field","path","envVarRegex","extractEnvVariable","envVarMatch","match","getFirstDefinedValue","possibleValues","returnValue","_i","possibleValues_1","compactEndpointSchemas","SEPARATORS","ArtifactModes","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","avatar","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","separator","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","requiredSettingFields","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","SystemRoles","PermissionTypes","Permissions","QueryKeys","MutationKeys","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","agentPermissionsSchema","multiConvoPermissionsSchema","roleSchema","PROMPTS","BOOKMARKS","AGENTS","MULTI_CONVO","roleDefaults","ADMIN","extend","USER","parse","_q","setTokenHeader","token","axios","defaults","common","shareRoot","shareMessages","createSharedLink","updateSharedLink","keysEndpoint","conversationsRoot","conversations","pageNumber","updateConversation","deleteConversation","search","q","isAvatar","images","queryParams","URLSearchParams","toString","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","getRole","roleName","conversationTags","encodeURIComponent","_post","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","dispatchTokenUpdatedEvent","window","dispatchEvent","CustomEvent","detail","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","config","Promise","status","_retry","warn","err_1","location","href","log","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","abortKey","endpoints.abortRequest","arg","payload","endpoints.addTagToConversation","endpoints.updateConversation","toolId","toolParams","endpoints.agents","endpoints.deleteConversation","__rest","endpoints.assistants","endpoints.conversationTags","endpoints.postPrompt","endpoints.createSharedLink","action_id","groupId","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","userId","file_id","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","limit","skip","endpoints.getRole","params","searchQuery","endpoints.search","endpoints.getSharedLinks","endpoints.revokeUserKey","body","updates","Error","index","endpoints.updatePromptGroup","endpoints.updateSharedLink","endpoints.images","signal","requestConfig","endpoints.userKeyQuery","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","replace","cleanPath","fullURL","URL","schemaTypeHandlers","enum","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","items","zodSchema","openAPISchemaToZod","describe","FunctionSignature","this","prototype","toObjectTool","RequestConfig","basePath","method","operation","isConsequential","contentType","RequestExecutor","authHeaders","setParams","operationHash","assign","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","authorization_url","client_url","scope","token_exchange_method","api_key","oauth_client_id","oauth_client_secret","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","Custom","authToken","client_id","client_secret","grant_type","tokenResponse","access_token","execute","getConfig","ActionRequest","defineProperty","createExecutor","executor","resolveRef","components","refPath","$ref","resolvedSchema","schemas","sanitizeOperationId","source","azure","c","cs","cpp","md","php","py","rb","tex","js","sh","ts","tar","zip","convertJsonSchemaToZod","Array","isArray","first","rest","slice","itemSchema","fieldSchema","objectSchema","submission","conversation","userMessage","endpointOption","isContinued","s.tConvoUpdateSchema","server","assistant","conversation_starters","separators","lastIndex","separators_1","lastIndexOf","settings","schemaFields","settings_1","setting","range","minText","maxText","minTags","maxTags","Number","Boolean","String","Enum","ZodArray","customGoogle","customOpenAI","possibleValues_2","_mdl","_cgl","_ml","endpointKey","modelKey","tool","has","groupName","groupConfig","groupMap","firstModelName","modelDetails","azureOptions","azureOpenAIApiVersion","azureOpenAIApiKey","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","modelGroupMap","modelConfig","result_1","apiKeyValue","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","zodSchemas","baseUrl","servers","paths","methods","operationObj","defaultOperationId","operationId","summary","parametersSchema","paramObj","requestBody","apply","functionSignature","actionRequest","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","convo","secondaryModels","contentParts","contentParts_1","part","TEXT","textValue","resolvedHeaders","specString","parsedSpec","load","httpMethod","responses","statusCode","refName","pop","configs","isValid","modelNames","groupDeploymentName","groupVersion","modelDeploymentName","modelVersion","columnsSet","settings_2","columns","code","ZodIssueCode","add","size","next","settings_3","requiredSettingFields_1","settingTypes","component","Tags","Input","Textarea","placeholder","Slider","includeInput","Math","round","Checkbox","Switch","Dropdown","Combobox","columnSpan","floor","optionType","conversationSchema","zodType","typeName","isNaN","ZodError","additionalModels","availableModels","visionModel"],"mappings":"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"}